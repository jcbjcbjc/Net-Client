// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace C2GNet {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class C2GNetMessage {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_C2GNet_NUser__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.NUser, global::C2GNet.NUser.Builder> internal__static_C2GNet_NUser__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UnLockCharacter__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UnLockCharacter, global::C2GNet.UnLockCharacter.Builder> internal__static_C2GNet_UnLockCharacter__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_NCharacter__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.NCharacter, global::C2GNet.NCharacter.Builder> internal__static_C2GNet_NCharacter__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_NStatus__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.NStatus, global::C2GNet.NStatus.Builder> internal__static_C2GNet_NStatus__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_StatusNotify__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.StatusNotify, global::C2GNet.StatusNotify.Builder> internal__static_C2GNet_StatusNotify__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_NUserStatusChange__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.NUserStatusChange, global::C2GNet.NUserStatusChange.Builder> internal__static_C2GNet_NUserStatusChange__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_C2GNetMessage__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.C2GNetMessage, global::C2GNet.C2GNetMessage.Builder> internal__static_C2GNet_C2GNetMessage__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_NetMessageRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.NetMessageRequest, global::C2GNet.NetMessageRequest.Builder> internal__static_C2GNet_NetMessageRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_NetMessageResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.NetMessageResponse, global::C2GNet.NetMessageResponse.Builder> internal__static_C2GNet_NetMessageResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UserLoginRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserLoginRequest, global::C2GNet.UserLoginRequest.Builder> internal__static_C2GNet_UserLoginRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UserLoginResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserLoginResponse, global::C2GNet.UserLoginResponse.Builder> internal__static_C2GNet_UserLoginResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UserRegisterRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserRegisterRequest, global::C2GNet.UserRegisterRequest.Builder> internal__static_C2GNet_UserRegisterRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UserRegisterResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserRegisterResponse, global::C2GNet.UserRegisterResponse.Builder> internal__static_C2GNet_UserRegisterResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_CharacterDetailRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.CharacterDetailRequest, global::C2GNet.CharacterDetailRequest.Builder> internal__static_C2GNet_CharacterDetailRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_CharacterDetailResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.CharacterDetailResponse, global::C2GNet.CharacterDetailResponse.Builder> internal__static_C2GNet_CharacterDetailResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UpdateNickNameRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UpdateNickNameRequest, global::C2GNet.UpdateNickNameRequest.Builder> internal__static_C2GNet_UpdateNickNameRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UpdateNickNameResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UpdateNickNameResponse, global::C2GNet.UpdateNickNameResponse.Builder> internal__static_C2GNet_UpdateNickNameResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_FollowRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.FollowRequest, global::C2GNet.FollowRequest.Builder> internal__static_C2GNet_FollowRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_FollowResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.FollowResponse, global::C2GNet.FollowResponse.Builder> internal__static_C2GNet_FollowResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UnLockRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UnLockRequest, global::C2GNet.UnLockRequest.Builder> internal__static_C2GNet_UnLockRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UnLockResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UnLockResponse, global::C2GNet.UnLockResponse.Builder> internal__static_C2GNet_UnLockResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_SwitchCharacterRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.SwitchCharacterRequest, global::C2GNet.SwitchCharacterRequest.Builder> internal__static_C2GNet_SwitchCharacterRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_SwitchCharacterResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.SwitchCharacterResponse, global::C2GNet.SwitchCharacterResponse.Builder> internal__static_C2GNet_SwitchCharacterResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UserStatusChangeResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserStatusChangeResponse, global::C2GNet.UserStatusChangeResponse.Builder> internal__static_C2GNet_UserStatusChangeResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_HeartBeatRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.HeartBeatRequest, global::C2GNet.HeartBeatRequest.Builder> internal__static_C2GNet_HeartBeatRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_HeartBeatResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.HeartBeatResponse, global::C2GNet.HeartBeatResponse.Builder> internal__static_C2GNet_HeartBeatResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_TipsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.TipsResponse, global::C2GNet.TipsResponse.Builder> internal__static_C2GNet_TipsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_RoomUser__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.RoomUser, global::C2GNet.RoomUser.Builder> internal__static_C2GNet_RoomUser__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_AllTeam__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.AllTeam, global::C2GNet.AllTeam.Builder> internal__static_C2GNet_AllTeam__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_NRoom__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.NRoom, global::C2GNet.NRoom.Builder> internal__static_C2GNet_NRoom__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_MyRoomRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.MyRoomRequest, global::C2GNet.MyRoomRequest.Builder> internal__static_C2GNet_MyRoomRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_MyRoomResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.MyRoomResponse, global::C2GNet.MyRoomResponse.Builder> internal__static_C2GNet_MyRoomResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_InviteRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.InviteRequest, global::C2GNet.InviteRequest.Builder> internal__static_C2GNet_InviteRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_InviteResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.InviteResponse, global::C2GNet.InviteResponse.Builder> internal__static_C2GNet_InviteResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_KickOutRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.KickOutRequest, global::C2GNet.KickOutRequest.Builder> internal__static_C2GNet_KickOutRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_KickOutResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.KickOutResponse, global::C2GNet.KickOutResponse.Builder> internal__static_C2GNet_KickOutResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_RoomStartGameRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.RoomStartGameRequest, global::C2GNet.RoomStartGameRequest.Builder> internal__static_C2GNet_RoomStartGameRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_RoomStartGameResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.RoomStartGameResponse, global::C2GNet.RoomStartGameResponse.Builder> internal__static_C2GNet_RoomStartGameResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_NickNameSearchRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.NickNameSearchRequest, global::C2GNet.NickNameSearchRequest.Builder> internal__static_C2GNet_NickNameSearchRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_NickNameSearchResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.NickNameSearchResponse, global::C2GNet.NickNameSearchResponse.Builder> internal__static_C2GNet_NickNameSearchResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_AddRoomRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.AddRoomRequest, global::C2GNet.AddRoomRequest.Builder> internal__static_C2GNet_AddRoomRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_AddRoomResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.AddRoomResponse, global::C2GNet.AddRoomResponse.Builder> internal__static_C2GNet_AddRoomResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_OutRoomRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.OutRoomRequest, global::C2GNet.OutRoomRequest.Builder> internal__static_C2GNet_OutRoomRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_OutRoomResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.OutRoomResponse, global::C2GNet.OutRoomResponse.Builder> internal__static_C2GNet_OutRoomResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_FollowListRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.FollowListRequest, global::C2GNet.FollowListRequest.Builder> internal__static_C2GNet_FollowListRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_FollowListResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.FollowListResponse, global::C2GNet.FollowListResponse.Builder> internal__static_C2GNet_FollowListResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_ChatMessage__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.ChatMessage, global::C2GNet.ChatMessage.Builder> internal__static_C2GNet_ChatMessage__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_ChatRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.ChatRequest, global::C2GNet.ChatRequest.Builder> internal__static_C2GNet_ChatRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_ChatResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.ChatResponse, global::C2GNet.ChatResponse.Builder> internal__static_C2GNet_ChatResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UserStatusQueryRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserStatusQueryRequest, global::C2GNet.UserStatusQueryRequest.Builder> internal__static_C2GNet_UserStatusQueryRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UserStatusQueryResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserStatusQueryResponse, global::C2GNet.UserStatusQueryResponse.Builder> internal__static_C2GNet_UserStatusQueryResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_StartMatchRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.StartMatchRequest, global::C2GNet.StartMatchRequest.Builder> internal__static_C2GNet_StartMatchRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_StartMatchResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.StartMatchResponse, global::C2GNet.StartMatchResponse.Builder> internal__static_C2GNet_StartMatchResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_MatchResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.MatchResponse, global::C2GNet.MatchResponse.Builder> internal__static_C2GNet_MatchResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_GameOver2Request__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.GameOver2Request, global::C2GNet.GameOver2Request.Builder> internal__static_C2GNet_GameOver2Request__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_AddLiveRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.AddLiveRequest, global::C2GNet.AddLiveRequest.Builder> internal__static_C2GNet_AddLiveRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_AddLiveResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.AddLiveResponse, global::C2GNet.AddLiveResponse.Builder> internal__static_C2GNet_AddLiveResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_UploadBiFenRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.UploadBiFenRequest, global::C2GNet.UploadBiFenRequest.Builder> internal__static_C2GNet_UploadBiFenRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_ValidateOpenRoomRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.ValidateOpenRoomRequest, global::C2GNet.ValidateOpenRoomRequest.Builder> internal__static_C2GNet_ValidateOpenRoomRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_C2GNet_ValidateOpenRoomResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::C2GNet.ValidateOpenRoomResponse, global::C2GNet.ValidateOpenRoomResponse.Builder> internal__static_C2GNet_ValidateOpenRoomResponse__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static C2GNetMessage() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "ChNDMkdOZXRNZXNzYWdlLnByb3RvEgZDMkdOZXQi+gEKBU5Vc2VyEgoKAmlk", 
              "GAEgASgFEhAKCG5pY2tuYW1lGAIgASgJEgwKBGNvaW4YAyABKAMSJQoJY2hh", 
              "cmFjdGVyGAQgASgLMhIuQzJHTmV0Lk5DaGFyYWN0ZXISMQoQdW5Mb2NrQ2hh", 
              "cmFjdGVycxgFIAMoCzIXLkMyR05ldC5VbkxvY2tDaGFyYWN0ZXISEAoIaXNG", 
              "b2xsb3cYBiABKAgSDgoGc3RhdHVzGAggASgIEhIKCmZlblNpQ291bnQYCSAB", 
              "KAUSJgoKdXNlclN0YXR1cxgKIAEoDjISLkMyR05ldC5Vc2VyU3RhdHVzEg0K", 
              "BWJpRmVuGAsgASgJIisKD1VuTG9ja0NoYXJhY3RlchILCgN0aWQYASABKAUS", 
              "CwoDY2lkGAIgASgFIgwKCk5DaGFyYWN0ZXIibAoHTlN0YXR1cxIgCgR0eXBl", 
              "GAEgASgOMhIuQzJHTmV0LlN0YXR1c1R5cGUSJAoGYWN0aW9uGAIgASgOMhQu", 
              "QzJHTmV0LlN0YXR1c0FjdGlvbhIKCgJpZBgDIAEoBRINCgV2YWx1ZRgEIAEo", 
              "AyIvCgxTdGF0dXNOb3RpZnkSHwoGc3RhdHVzGAEgAygLMg8uQzJHTmV0Lk5T", 
              "dGF0dXMiMwoRTlVzZXJTdGF0dXNDaGFuZ2USDgoGdXNlcklkGAEgASgFEg4K", 
              "BnN0YXR1cxgCIAEoCCJ+Cg1DMkdOZXRNZXNzYWdlEhMKC21lc3NhZ2VUeXBl", 
              "GAEgAygJEioKB1JlcXVlc3QYAiABKAsyGS5DMkdOZXQuTmV0TWVzc2FnZVJl", 
              "cXVlc3QSLAoIUmVzcG9uc2UYAyABKAsyGi5DMkdOZXQuTmV0TWVzc2FnZVJl", 
              "c3BvbnNlItkJChFOZXRNZXNzYWdlUmVxdWVzdBIxCgx1c2VyUmVnaXN0ZXIY", 
              "ASABKAsyGy5DMkdOZXQuVXNlclJlZ2lzdGVyUmVxdWVzdBIrCgl1c2VyTG9n", 
              "aW4YAiABKAsyGC5DMkdOZXQuVXNlckxvZ2luUmVxdWVzdBI3Cg9jaGFyYWN0", 
              "ZXJEZXRhaWwYAyABKAsyHi5DMkdOZXQuQ2hhcmFjdGVyRGV0YWlsUmVxdWVz", 
              "dBI1Cg51cGRhdGVOaWNrTmFtZRgEIAEoCzIdLkMyR05ldC5VcGRhdGVOaWNr", 
              "TmFtZVJlcXVlc3QSKAoJZm9sbG93UmVxGAggASgLMhUuQzJHTmV0LkZvbGxv", 
              "d1JlcXVlc3QSKAoJdW5Mb2NrUmVxGAkgASgLMhUuQzJHTmV0LlVuTG9ja1Jl", 
              "cXVlc3QSOgoSc3dpdGNoQ2hhcmFjdGVyUmVxGAogASgLMh4uQzJHTmV0LlN3", 
              "aXRjaENoYXJhY3RlclJlcXVlc3QSLgoMaGVhcnRCZWF0UmVxGA4gASgLMhgu", 
              "QzJHTmV0LkhlYXJ0QmVhdFJlcXVlc3QSKAoJbXlSb29tUmVxGBIgASgLMhUu", 
              "QzJHTmV0Lk15Um9vbVJlcXVlc3QSKAoJaW52aXRlUmVxGBMgASgLMhUuQzJH", 
              "TmV0Lkludml0ZVJlcXVlc3QSKQoJaW52aXRlUmVzGBQgASgLMhYuQzJHTmV0", 
              "Lkludml0ZVJlc3BvbnNlEioKCmtpY2tPdXRSZXEYFSABKAsyFi5DMkdOZXQu", 
              "S2lja091dFJlcXVlc3QSNgoQcm9vbVN0YXJ0R2FtZVJlcRgWIAEoCzIcLkMy", 
              "R05ldC5Sb29tU3RhcnRHYW1lUmVxdWVzdBI4ChFuaWNrTmFtZVNlYXJjaFJl", 
              "cRgXIAEoCzIdLkMyR05ldC5OaWNrTmFtZVNlYXJjaFJlcXVlc3QSKgoKYWRk", 
              "Um9vbVJlcRgYIAEoCzIWLkMyR05ldC5BZGRSb29tUmVxdWVzdBIrCgphZGRS", 
              "b29tUmVzGBkgASgLMhcuQzJHTmV0LkFkZFJvb21SZXNwb25zZRIqCgpvdXRS", 
              "b29tUmVxGBogASgLMhYuQzJHTmV0Lk91dFJvb21SZXF1ZXN0EiQKB2NoYXRS", 
              "ZXEYGyABKAsyEy5DMkdOZXQuQ2hhdFJlcXVlc3QSOgoSdXNlclN0YXR1c1F1", 
              "ZXJ5UmVxGBwgASgLMh4uQzJHTmV0LlVzZXJTdGF0dXNRdWVyeVJlcXVlc3QS", 
              "MAoNc3RhcnRNYXRjaFJlcRgdIAEoCzIZLkMyR05ldC5TdGFydE1hdGNoUmVx", 
              "dWVzdBIuCgxnYW1lT3ZlcjJSZXEYHiABKAsyGC5DMkdOZXQuR2FtZU92ZXIy", 
              "UmVxdWVzdBIqCgphZGRMaXZlUmVxGB8gASgLMhYuQzJHTmV0LkFkZExpdmVS", 
              "ZXF1ZXN0EjIKDnVwbG9hZEJpRmVuUmVxGCAgASgLMhouQzJHTmV0LlVwbG9h", 
              "ZEJpRmVuUmVxdWVzdBIwCg1mb2xsb3dMaXN0UmVxGCEgASgLMhkuQzJHTmV0", 
              "LkZvbGxvd0xpc3RSZXF1ZXN0EjwKE3ZhbGlkYXRlT3BlblJvb21SZXEYIiAB", 
              "KAsyHy5DMkdOZXQuVmFsaWRhdGVPcGVuUm9vbVJlcXVlc3QixAoKEk5ldE1l", 
              "c3NhZ2VSZXNwb25zZRIyCgx1c2VyUmVnaXN0ZXIYASABKAsyHC5DMkdOZXQu", 
              "VXNlclJlZ2lzdGVyUmVzcG9uc2USLAoJdXNlckxvZ2luGAIgASgLMhkuQzJH", 
              "TmV0LlVzZXJMb2dpblJlc3BvbnNlEjgKD2NoYXJhY3RlckRldGFpbBgDIAEo", 
              "CzIfLkMyR05ldC5DaGFyYWN0ZXJEZXRhaWxSZXNwb25zZRI2Cg51cGRhdGVO", 
              "aWNrTmFtZRgEIAEoCzIeLkMyR05ldC5VcGRhdGVOaWNrTmFtZVJlc3BvbnNl", 
              "EikKCWZvbGxvd1JlcxgIIAEoCzIWLkMyR05ldC5Gb2xsb3dSZXNwb25zZRIp", 
              "Cgl1bkxvY2tSZXMYCiABKAsyFi5DMkdOZXQuVW5Mb2NrUmVzcG9uc2USOwoS", 
              "c3dpdGNoQ2hhcmFjdGVyUmVzGAsgASgLMh8uQzJHTmV0LlN3aXRjaENoYXJh", 
              "Y3RlclJlc3BvbnNlEj0KE3VzZXJTdGF0dXNDaGFuZ2VSZXMYDSABKAsyIC5D", 
              "MkdOZXQuVXNlclN0YXR1c0NoYW5nZVJlc3BvbnNlEi8KDGhlYXJ0QmVhdFJl", 
              "cxgQIAEoCzIZLkMyR05ldC5IZWFydEJlYXRSZXNwb25zZRIlCgd0aXBzUmVz", 
              "GBQgASgLMhQuQzJHTmV0LlRpcHNSZXNwb25zZRIpCglteVJvb21SZXMYFSAB", 
              "KAsyFi5DMkdOZXQuTXlSb29tUmVzcG9uc2USKAoJaW52aXRlUmVxGBYgASgL", 
              "MhUuQzJHTmV0Lkludml0ZVJlcXVlc3QSKQoJaW52aXRlUmVzGBcgASgLMhYu", 
              "QzJHTmV0Lkludml0ZVJlc3BvbnNlEisKCmtpY2tPdXRSZXMYGCABKAsyFy5D", 
              "MkdOZXQuS2lja091dFJlc3BvbnNlEjcKEHJvb21TdGFydEdhbWVSZXMYGSAB", 
              "KAsyHS5DMkdOZXQuUm9vbVN0YXJ0R2FtZVJlc3BvbnNlEjkKEW5pY2tOYW1l", 
              "U2VhcmNoUmVzGBogASgLMh4uQzJHTmV0Lk5pY2tOYW1lU2VhcmNoUmVzcG9u", 
              "c2USMQoNZm9sbG93TGlzdFJlcxgbIAEoCzIaLkMyR05ldC5Gb2xsb3dMaXN0", 
              "UmVzcG9uc2USKgoKYWRkUm9vbVJlcRgcIAEoCzIWLkMyR05ldC5BZGRSb29t", 
              "UmVxdWVzdBIrCgphZGRSb29tUmVzGB0gASgLMhcuQzJHTmV0LkFkZFJvb21S", 
              "ZXNwb25zZRIrCgpvdXRSb29tUmVzGB4gASgLMhcuQzJHTmV0Lk91dFJvb21S", 
              "ZXNwb25zZRIlCgdjaGF0UmVzGB8gASgLMhQuQzJHTmV0LkNoYXRSZXNwb25z", 
              "ZRI7ChJ1c2VyU3RhdHVzUXVlcnlSZXMYICABKAsyHy5DMkdOZXQuVXNlclN0", 
              "YXR1c1F1ZXJ5UmVzcG9uc2USMQoNc3RhcnRNYXRjaFJlcxghIAEoCzIaLkMy", 
              "R05ldC5TdGFydE1hdGNoUmVzcG9uc2USJwoIbWF0Y2hSZXMYIiABKAsyFS5D", 
              "MkdOZXQuTWF0Y2hSZXNwb25zZRIrCgphZGRMaXZlUmVzGCMgASgLMhcuQzJH", 
              "TmV0LkFkZExpdmVSZXNwb25zZRI9ChN2YWxpZGF0ZU9wZW5Sb29tUmVzGCQg", 
              "ASgLMiAuQzJHTmV0LlZhbGlkYXRlT3BlblJvb21SZXNwb25zZRIqCgxzdGF0", 
              "dXNOb3RpZnkYZCABKAsyFC5DMkdOZXQuU3RhdHVzTm90aWZ5IjYKEFVzZXJM", 
              "b2dpblJlcXVlc3QSEAoIdXNlck5hbWUYASABKAkSEAoIcGFzc3dhcmQYAiAB", 
              "KAkiYgoRVXNlckxvZ2luUmVzcG9uc2USHgoGcmVzdWx0GAEgASgOMg4uQzJH", 
              "TmV0LlJlc3VsdBIQCghlcnJvcm1zZxgCIAEoCRIbCgR1c2VyGAMgASgLMg0u", 
              "QzJHTmV0Lk5Vc2VyIjkKE1VzZXJSZWdpc3RlclJlcXVlc3QSEAoIdXNlck5h", 
              "bWUYASABKAkSEAoIcGFzc3dvcmQYAiABKAkiSAoUVXNlclJlZ2lzdGVyUmVz", 
              "cG9uc2USHgoGcmVzdWx0GAEgASgOMg4uQzJHTmV0LlJlc3VsdBIQCghlcnJv", 
              "cm1zZxgCIAEoCSI+ChZDaGFyYWN0ZXJEZXRhaWxSZXF1ZXN0Eg4KBnVzZXJJ", 
              "ZBgBIAEoBRIUCgx0Q2hhcmFjdGVySWQYAiABKAUiaAoXQ2hhcmFjdGVyRGV0", 
              "YWlsUmVzcG9uc2USHgoGcmVzdWx0GAEgASgOMg4uQzJHTmV0LlJlc3VsdBIQ", 
              "CghlcnJvcm1zZxgCIAEoCRIbCgR1c2VyGAMgASgLMg0uQzJHTmV0Lk5Vc2Vy", 
              "IikKFVVwZGF0ZU5pY2tOYW1lUmVxdWVzdBIQCghuaWNrbmFtZRgBIAEoCSJK", 
              "ChZVcGRhdGVOaWNrTmFtZVJlc3BvbnNlEh4KBnJlc3VsdBgBIAEoDjIOLkMy", 
              "R05ldC5SZXN1bHQSEAoIZXJyb3Jtc2cYAiABKAkiMQoNRm9sbG93UmVxdWVz", 
              "dBIOCgZ1c2VySWQYASABKAUSEAoIaXNGb2xsb3cYAiABKAgiQgoORm9sbG93", 
              "UmVzcG9uc2USHgoGcmVzdWx0GAEgASgOMg4uQzJHTmV0LlJlc3VsdBIQCghl", 
              "cnJvcm1zZxgCIAEoCSIlCg1VbkxvY2tSZXF1ZXN0EhQKDGNDaGFyYWN0ZXJJ", 
              "ZBgBIAEoBSJ0Cg5VbkxvY2tSZXNwb25zZRIeCgZyZXN1bHQYASABKA4yDi5D", 
              "MkdOZXQuUmVzdWx0EhAKCGVycm9ybXNnGAIgASgJEjAKD3VuTG9ja0NoYXJh", 
              "Y3RlchgDIAEoCzIXLkMyR05ldC5VbkxvY2tDaGFyYWN0ZXIiLgoWU3dpdGNo", 
              "Q2hhcmFjdGVyUmVxdWVzdBIUCgx0Q2hhcmFjdGVySWQYASABKAUicgoXU3dp", 
              "dGNoQ2hhcmFjdGVyUmVzcG9uc2USHgoGcmVzdWx0GAEgASgOMg4uQzJHTmV0", 
              "LlJlc3VsdBIQCghlcnJvcm1zZxgCIAEoCRIlCgljaGFyYWN0ZXIYAyABKAsy", 
              "Ei5DMkdOZXQuTkNoYXJhY3RlciJQChhVc2VyU3RhdHVzQ2hhbmdlUmVzcG9u", 
              "c2USNAoRdXNlclN0YXR1c0NoYW5nZXMYASADKAsyGS5DMkdOZXQuTlVzZXJT", 
              "dGF0dXNDaGFuZ2UiEgoQSGVhcnRCZWF0UmVxdWVzdCIrChFIZWFydEJlYXRS", 
              "ZXNwb25zZRIWCg5saXZlRmVuU2lDb3VudBgBIAEoBSJvCgxUaXBzUmVzcG9u", 
              "c2USIgoIdGlwc1R5cGUYASABKA4yEC5DMkdOZXQuVGlwc1R5cGUSDwoHY29u", 
              "dGVudBgCIAEoCRIqCgx0aXBzV29ya1R5cGUYAyABKA4yFC5DMkdOZXQuVGlw", 
              "c1dvcmtUeXBlIoABCghSb29tVXNlchIOCgZ1c2VySWQYASABKAUSEAoIbmlj", 
              "a05hbWUYAiABKAkSFAoMY0NoYXJhY3RlcklkGAMgASgFEhsKBHVzZXIYBCAB", 
              "KAsyDS5DMkdOZXQuTlVzZXISDgoGdGVhbUlkGAUgASgFEg8KB3Jvb21OdW0Y", 
              "BiABKAUiKQoHQWxsVGVhbRIeCgRUZWFtGAEgAygLMhAuQzJHTmV0LlJvb21V", 
              "c2VyIrwBCgVOUm9vbRIOCgZyb29tSWQYASABKAUSDgoGdXNlcklkGAIgASgF", 
              "EhMKC0dhbWVQYXR0ZXJuGAMgASgFEiAKB2FsbFRlYW0YBCADKAsyDy5DMkdO", 
              "ZXQuQWxsVGVhbRImCgpyb29tU3RhdHVzGAUgASgOMhIuQzJHTmV0LlJvb21T", 
              "dGF0dXMSEQoJaXBQb3J0U3RyGAYgASgJEhIKCnJhbmRvbVNlZWQYByABKAUS", 
              "DQoFYmlGZW4YCCABKAkiDwoNTXlSb29tUmVxdWVzdCItCg5NeVJvb21SZXNw", 
              "b25zZRIbCgRyb29tGAEgASgLMg0uQzJHTmV0Lk5Sb29tIm8KDUludml0ZVJl", 
              "cXVlc3QSEgoKZnJvbVVzZXJJZBgBIAEoBRIUCgxmcm9tTmlja05hbWUYAiAB", 
              "KAkSEAoIdG9Vc2VySWQYAyABKAUSEgoKdG9OaWNrTmFtZRgEIAEoCRIOCgZ0", 
              "ZWFtSWQYBSABKAUicwoOSW52aXRlUmVzcG9uc2USIQoJcmVzdWx0bXNnGAEg", 
              "ASgOMg4uQzJHTmV0LlJlc3VsdBIQCghlcnJvcm1zZxgCIAEoCRIsCg1pbnZp", 
              "dGVSZXF1ZXN0GAMgASgLMhUuQzJHTmV0Lkludml0ZVJlcXVlc3QiIAoOS2lj", 
              "a091dFJlcXVlc3QSDgoGdXNlcklkGAEgASgFIkMKD0tpY2tPdXRSZXNwb25z", 
              "ZRIeCgZyZXN1bHQYASABKA4yDi5DMkdOZXQuUmVzdWx0EhAKCGVycm9ybXNn", 
              "GAIgASgJIhYKFFJvb21TdGFydEdhbWVSZXF1ZXN0IkkKFVJvb21TdGFydEdh", 
              "bWVSZXNwb25zZRIeCgZyZXN1bHQYASABKA4yDi5DMkdOZXQuUmVzdWx0EhAK", 
              "CGVycm9ybXNnGAIgASgJIikKFU5pY2tOYW1lU2VhcmNoUmVxdWVzdBIQCghu", 
              "aWNrTmFtZRgBIAEoCSI8ChZOaWNrTmFtZVNlYXJjaFJlc3BvbnNlEiIKCHJv", 
              "b21Vc2VyGAEgAygLMhAuQzJHTmV0LlJvb21Vc2VyIkoKDkFkZFJvb21SZXF1", 
              "ZXN0Eg4KBnJvb21JZBgBIAEoBRISCgpmcm9tVXNlcklkGAIgASgFEhQKDGZy", 
              "b21OaWNrTmFtZRgDIAEoCSKDAQoPQWRkUm9vbVJlc3BvbnNlEh4KBnJlc3Vs", 
              "dBgBIAEoDjIOLkMyR05ldC5SZXN1bHQSEAoIZXJyb3Jtc2cYAiABKAkSLgoO", 
              "YWRkUm9vbVJlcXVlc3QYAyABKAsyFi5DMkdOZXQuQWRkUm9vbVJlcXVlc3QS", 
              "DgoGdGVhbUlkGAQgASgFIhAKDk91dFJvb21SZXF1ZXN0IkMKD091dFJvb21S", 
              "ZXNwb25zZRIeCgZyZXN1bHQYASABKA4yDi5DMkdOZXQuUmVzdWx0EhAKCGVy", 
              "cm9ybXNnGAIgASgJIhMKEUZvbGxvd0xpc3RSZXF1ZXN0IjQKEkZvbGxvd0xp", 
              "c3RSZXNwb25zZRIeCgdmb2xsb3dzGAEgAygLMg0uQzJHTmV0Lk5Vc2VyIq0C", 
              "CgtDaGF0TWVzc2FnZRIoCgtjaGF0Q2hhbm5lbBgBIAEoDjITLkMyR05ldC5D", 
              "aGF0Q2hhbm5lbBIOCgZmcm9tSWQYAiABKAUSEAoIZnJvbU5hbWUYAyABKAkS", 
              "EQoJZnJvbUxldmVsGAQgASgFEhgKEGZyb21DQ2hhcmFjdGVySWQYBSABKAUS", 
              "DAoEdG9JZBgGIAEoBRIOCgZ0b05hbWUYByABKAkSDwoHdG9MZXZlbBgIIAEo", 
              "BRIWCg50b0NDaGFyYWN0ZXJJZBgJIAEoBRILCgNtc2cYCiABKAkSDAoEdGlt", 
              "ZRgLIAEoAxIqCgxjaGF0Um9vbVR5cGUYDCABKA4yFC5DMkdOZXQuQ2hhdFJv", 
              "b21UeXBlEhcKD2VudGVyTGl2ZVVzZXJJZBgNIAEoBSI3CgtDaGF0UmVxdWVz", 
              "dBIoCgtjaGF0TWVzc2FnZRgBIAEoCzITLkMyR05ldC5DaGF0TWVzc2FnZSLE", 
              "AQoMQ2hhdFJlc3BvbnNlEh4KBnJlc3VsdBgBIAEoDjIOLkMyR05ldC5SZXN1", 
              "bHQSEAoIZXJyb3Jtc2cYAiABKAkSKQoMY29tcE1lc3NhZ2VzGAMgAygLMhMu", 
              "QzJHTmV0LkNoYXRNZXNzYWdlEiwKD3ByaXZhdGVNZXNzYWdlcxgEIAMoCzIT", 
              "LkMyR05ldC5DaGF0TWVzc2FnZRIpCgxyb29tTWVzc2FnZXMYBSADKAsyEy5D", 
              "MkdOZXQuQ2hhdE1lc3NhZ2UiKQoWVXNlclN0YXR1c1F1ZXJ5UmVxdWVzdBIP", 
              "Cgd1c2VySWRzGAEgAygFIikKF1VzZXJTdGF0dXNRdWVyeVJlc3BvbnNlEg4K", 
              "BnN0YXR1cxgBIAMoCCITChFTdGFydE1hdGNoUmVxdWVzdCJGChJTdGFydE1h", 
              "dGNoUmVzcG9uc2USHgoGcmVzdWx0GAEgASgOMg4uQzJHTmV0LlJlc3VsdBIQ", 
              "CghlcnJvcm1zZxgCIAEoCSJeCg1NYXRjaFJlc3BvbnNlEh4KBnJlc3VsdBgB", 
              "IAEoDjIOLkMyR05ldC5SZXN1bHQSEAoIZXJyb3Jtc2cYAiABKAkSGwoEcm9v", 
              "bRgDIAEoCzINLkMyR05ldC5OUm9vbSIlChBHYW1lT3ZlcjJSZXF1ZXN0EhEK", 
              "CWlwUG9ydFN0chgBIAEoCSIgCg5BZGRMaXZlUmVxdWVzdBIOCgZ1c2VySWQY", 
              "ASABKAUiYAoPQWRkTGl2ZVJlc3BvbnNlEh4KBnJlc3VsdBgBIAEoDjIOLkMy", 
              "R05ldC5SZXN1bHQSEAoIZXJyb3Jtc2cYAiABKAkSGwoEcm9vbRgDIAEoCzIN", 
              "LkMyR05ldC5OUm9vbSIjChJVcGxvYWRCaUZlblJlcXVlc3QSDQoFYmlGZW4Y", 
              "ASABKAkiGQoXVmFsaWRhdGVPcGVuUm9vbVJlcXVlc3QiTAoYVmFsaWRhdGVP", 
              "cGVuUm9vbVJlc3BvbnNlEh4KBnJlc3VsdBgBIAEoDjIOLkMyR05ldC5SZXN1", 
              "bHQSEAoIZXJyb3Jtc2cYAiABKAkqIQoGUmVzdWx0EgsKB1N1Y2Nlc3MQABIK", 
              "CgZGYWlsZWQQASovCgxTdGF0dXNBY3Rpb24SCgoGVVBEQVRFEAASBwoDQURE", 
              "EAESCgoGREVMRVRFEAIqHwoIVGlwc1R5cGUSCAoEVGlwcxAAEgkKBVBvcHVw", 
              "EAEqOwoKU3RhdHVzVHlwZRIJCgVNT05FWRAAEgcKA0VYUBABEg8KC1NLSUxM", 
              "X1BPSU5UEAISCAoESVRFTRADKkQKClVzZXJTdGF0dXMSCgoGTm9ybWFsEAAS", 
              "CAoER2FtZRABEggKBFJvb20QAhIICgRMaXZlEAMSDAoIR2FtZU92ZXIQBCpa", 
              "CgxUaXBzV29ya1R5cGUSCAoETm9uZRAAEhEKDUF1Y3Rpb25SZXN1bHQQARIP", 
              "CgtEaXNtaXNzUm9vbRACEg8KC0tpY2tPdXRSb29tEAMSCwoHT3V0Um9vbRAE", 
              "KiUKClJvb21TdGF0dXMSCwoHTm9ybWFsXxAAEgoKBkdhbWVJbhABKjIKC0No", 
              "YXRDaGFubmVsEggKBENvbXAQABILCgdQcml2YXRlEAESDAoIUm9vbUNoYXQQ", 
              "AiovCgxDaGF0Um9vbVR5cGUSCQoFUm9vbV8QABIJCgVHYW1lXxABEgkKBUxp", 
            "dmVfEAJCAkgB"));
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_C2GNet_NUser__Descriptor = Descriptor.MessageTypes[0];
          internal__static_C2GNet_NUser__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.NUser, global::C2GNet.NUser.Builder>(internal__static_C2GNet_NUser__Descriptor,
                  new string[] { "Id", "Nickname", "Coin", "Character", "UnLockCharacters", "IsFollow", "Status", "FenSiCount", "UserStatus", "BiFen", });
          internal__static_C2GNet_UnLockCharacter__Descriptor = Descriptor.MessageTypes[1];
          internal__static_C2GNet_UnLockCharacter__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UnLockCharacter, global::C2GNet.UnLockCharacter.Builder>(internal__static_C2GNet_UnLockCharacter__Descriptor,
                  new string[] { "Tid", "Cid", });
          internal__static_C2GNet_NCharacter__Descriptor = Descriptor.MessageTypes[2];
          internal__static_C2GNet_NCharacter__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.NCharacter, global::C2GNet.NCharacter.Builder>(internal__static_C2GNet_NCharacter__Descriptor,
                  new string[] { });
          internal__static_C2GNet_NStatus__Descriptor = Descriptor.MessageTypes[3];
          internal__static_C2GNet_NStatus__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.NStatus, global::C2GNet.NStatus.Builder>(internal__static_C2GNet_NStatus__Descriptor,
                  new string[] { "Type", "Action", "Id", "Value", });
          internal__static_C2GNet_StatusNotify__Descriptor = Descriptor.MessageTypes[4];
          internal__static_C2GNet_StatusNotify__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.StatusNotify, global::C2GNet.StatusNotify.Builder>(internal__static_C2GNet_StatusNotify__Descriptor,
                  new string[] { "Status", });
          internal__static_C2GNet_NUserStatusChange__Descriptor = Descriptor.MessageTypes[5];
          internal__static_C2GNet_NUserStatusChange__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.NUserStatusChange, global::C2GNet.NUserStatusChange.Builder>(internal__static_C2GNet_NUserStatusChange__Descriptor,
                  new string[] { "UserId", "Status", });
          internal__static_C2GNet_C2GNetMessage__Descriptor = Descriptor.MessageTypes[6];
          internal__static_C2GNet_C2GNetMessage__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.C2GNetMessage, global::C2GNet.C2GNetMessage.Builder>(internal__static_C2GNet_C2GNetMessage__Descriptor,
                  new string[] { "MessageType", "Request", "Response", });
          internal__static_C2GNet_NetMessageRequest__Descriptor = Descriptor.MessageTypes[7];
          internal__static_C2GNet_NetMessageRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.NetMessageRequest, global::C2GNet.NetMessageRequest.Builder>(internal__static_C2GNet_NetMessageRequest__Descriptor,
                  new string[] { "UserRegister", "UserLogin", "CharacterDetail", "UpdateNickName", "FollowReq", "UnLockReq", "SwitchCharacterReq", "HeartBeatReq", "MyRoomReq", "InviteReq", "InviteRes", "KickOutReq", "RoomStartGameReq", "NickNameSearchReq", "AddRoomReq", "AddRoomRes", "OutRoomReq", "ChatReq", "UserStatusQueryReq", "StartMatchReq", "GameOver2Req", "AddLiveReq", "UploadBiFenReq", "FollowListReq", "ValidateOpenRoomReq", });
          internal__static_C2GNet_NetMessageResponse__Descriptor = Descriptor.MessageTypes[8];
          internal__static_C2GNet_NetMessageResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.NetMessageResponse, global::C2GNet.NetMessageResponse.Builder>(internal__static_C2GNet_NetMessageResponse__Descriptor,
                  new string[] { "UserRegister", "UserLogin", "CharacterDetail", "UpdateNickName", "FollowRes", "UnLockRes", "SwitchCharacterRes", "UserStatusChangeRes", "HeartBeatRes", "TipsRes", "MyRoomRes", "InviteReq", "InviteRes", "KickOutRes", "RoomStartGameRes", "NickNameSearchRes", "FollowListRes", "AddRoomReq", "AddRoomRes", "OutRoomRes", "ChatRes", "UserStatusQueryRes", "StartMatchRes", "MatchRes", "AddLiveRes", "ValidateOpenRoomRes", "StatusNotify", });
          internal__static_C2GNet_UserLoginRequest__Descriptor = Descriptor.MessageTypes[9];
          internal__static_C2GNet_UserLoginRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserLoginRequest, global::C2GNet.UserLoginRequest.Builder>(internal__static_C2GNet_UserLoginRequest__Descriptor,
                  new string[] { "UserName", "Passward", });
          internal__static_C2GNet_UserLoginResponse__Descriptor = Descriptor.MessageTypes[10];
          internal__static_C2GNet_UserLoginResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserLoginResponse, global::C2GNet.UserLoginResponse.Builder>(internal__static_C2GNet_UserLoginResponse__Descriptor,
                  new string[] { "Result", "Errormsg", "User", });
          internal__static_C2GNet_UserRegisterRequest__Descriptor = Descriptor.MessageTypes[11];
          internal__static_C2GNet_UserRegisterRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserRegisterRequest, global::C2GNet.UserRegisterRequest.Builder>(internal__static_C2GNet_UserRegisterRequest__Descriptor,
                  new string[] { "UserName", "Password", });
          internal__static_C2GNet_UserRegisterResponse__Descriptor = Descriptor.MessageTypes[12];
          internal__static_C2GNet_UserRegisterResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserRegisterResponse, global::C2GNet.UserRegisterResponse.Builder>(internal__static_C2GNet_UserRegisterResponse__Descriptor,
                  new string[] { "Result", "Errormsg", });
          internal__static_C2GNet_CharacterDetailRequest__Descriptor = Descriptor.MessageTypes[13];
          internal__static_C2GNet_CharacterDetailRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.CharacterDetailRequest, global::C2GNet.CharacterDetailRequest.Builder>(internal__static_C2GNet_CharacterDetailRequest__Descriptor,
                  new string[] { "UserId", "TCharacterId", });
          internal__static_C2GNet_CharacterDetailResponse__Descriptor = Descriptor.MessageTypes[14];
          internal__static_C2GNet_CharacterDetailResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.CharacterDetailResponse, global::C2GNet.CharacterDetailResponse.Builder>(internal__static_C2GNet_CharacterDetailResponse__Descriptor,
                  new string[] { "Result", "Errormsg", "User", });
          internal__static_C2GNet_UpdateNickNameRequest__Descriptor = Descriptor.MessageTypes[15];
          internal__static_C2GNet_UpdateNickNameRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UpdateNickNameRequest, global::C2GNet.UpdateNickNameRequest.Builder>(internal__static_C2GNet_UpdateNickNameRequest__Descriptor,
                  new string[] { "Nickname", });
          internal__static_C2GNet_UpdateNickNameResponse__Descriptor = Descriptor.MessageTypes[16];
          internal__static_C2GNet_UpdateNickNameResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UpdateNickNameResponse, global::C2GNet.UpdateNickNameResponse.Builder>(internal__static_C2GNet_UpdateNickNameResponse__Descriptor,
                  new string[] { "Result", "Errormsg", });
          internal__static_C2GNet_FollowRequest__Descriptor = Descriptor.MessageTypes[17];
          internal__static_C2GNet_FollowRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.FollowRequest, global::C2GNet.FollowRequest.Builder>(internal__static_C2GNet_FollowRequest__Descriptor,
                  new string[] { "UserId", "IsFollow", });
          internal__static_C2GNet_FollowResponse__Descriptor = Descriptor.MessageTypes[18];
          internal__static_C2GNet_FollowResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.FollowResponse, global::C2GNet.FollowResponse.Builder>(internal__static_C2GNet_FollowResponse__Descriptor,
                  new string[] { "Result", "Errormsg", });
          internal__static_C2GNet_UnLockRequest__Descriptor = Descriptor.MessageTypes[19];
          internal__static_C2GNet_UnLockRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UnLockRequest, global::C2GNet.UnLockRequest.Builder>(internal__static_C2GNet_UnLockRequest__Descriptor,
                  new string[] { "CCharacterId", });
          internal__static_C2GNet_UnLockResponse__Descriptor = Descriptor.MessageTypes[20];
          internal__static_C2GNet_UnLockResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UnLockResponse, global::C2GNet.UnLockResponse.Builder>(internal__static_C2GNet_UnLockResponse__Descriptor,
                  new string[] { "Result", "Errormsg", "UnLockCharacter", });
          internal__static_C2GNet_SwitchCharacterRequest__Descriptor = Descriptor.MessageTypes[21];
          internal__static_C2GNet_SwitchCharacterRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.SwitchCharacterRequest, global::C2GNet.SwitchCharacterRequest.Builder>(internal__static_C2GNet_SwitchCharacterRequest__Descriptor,
                  new string[] { "TCharacterId", });
          internal__static_C2GNet_SwitchCharacterResponse__Descriptor = Descriptor.MessageTypes[22];
          internal__static_C2GNet_SwitchCharacterResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.SwitchCharacterResponse, global::C2GNet.SwitchCharacterResponse.Builder>(internal__static_C2GNet_SwitchCharacterResponse__Descriptor,
                  new string[] { "Result", "Errormsg", "Character", });
          internal__static_C2GNet_UserStatusChangeResponse__Descriptor = Descriptor.MessageTypes[23];
          internal__static_C2GNet_UserStatusChangeResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserStatusChangeResponse, global::C2GNet.UserStatusChangeResponse.Builder>(internal__static_C2GNet_UserStatusChangeResponse__Descriptor,
                  new string[] { "UserStatusChanges", });
          internal__static_C2GNet_HeartBeatRequest__Descriptor = Descriptor.MessageTypes[24];
          internal__static_C2GNet_HeartBeatRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.HeartBeatRequest, global::C2GNet.HeartBeatRequest.Builder>(internal__static_C2GNet_HeartBeatRequest__Descriptor,
                  new string[] { });
          internal__static_C2GNet_HeartBeatResponse__Descriptor = Descriptor.MessageTypes[25];
          internal__static_C2GNet_HeartBeatResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.HeartBeatResponse, global::C2GNet.HeartBeatResponse.Builder>(internal__static_C2GNet_HeartBeatResponse__Descriptor,
                  new string[] { "LiveFenSiCount", });
          internal__static_C2GNet_TipsResponse__Descriptor = Descriptor.MessageTypes[26];
          internal__static_C2GNet_TipsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.TipsResponse, global::C2GNet.TipsResponse.Builder>(internal__static_C2GNet_TipsResponse__Descriptor,
                  new string[] { "TipsType", "Content", "TipsWorkType", });
          internal__static_C2GNet_RoomUser__Descriptor = Descriptor.MessageTypes[27];
          internal__static_C2GNet_RoomUser__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.RoomUser, global::C2GNet.RoomUser.Builder>(internal__static_C2GNet_RoomUser__Descriptor,
                  new string[] { "UserId", "NickName", "CCharacterId", "User", "TeamId", "RoomNum", });
          internal__static_C2GNet_AllTeam__Descriptor = Descriptor.MessageTypes[28];
          internal__static_C2GNet_AllTeam__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.AllTeam, global::C2GNet.AllTeam.Builder>(internal__static_C2GNet_AllTeam__Descriptor,
                  new string[] { "Team", });
          internal__static_C2GNet_NRoom__Descriptor = Descriptor.MessageTypes[29];
          internal__static_C2GNet_NRoom__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.NRoom, global::C2GNet.NRoom.Builder>(internal__static_C2GNet_NRoom__Descriptor,
                  new string[] { "RoomId", "UserId", "GamePattern", "AllTeam", "RoomStatus", "IpPortStr", "RandomSeed", "BiFen", });
          internal__static_C2GNet_MyRoomRequest__Descriptor = Descriptor.MessageTypes[30];
          internal__static_C2GNet_MyRoomRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.MyRoomRequest, global::C2GNet.MyRoomRequest.Builder>(internal__static_C2GNet_MyRoomRequest__Descriptor,
                  new string[] { });
          internal__static_C2GNet_MyRoomResponse__Descriptor = Descriptor.MessageTypes[31];
          internal__static_C2GNet_MyRoomResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.MyRoomResponse, global::C2GNet.MyRoomResponse.Builder>(internal__static_C2GNet_MyRoomResponse__Descriptor,
                  new string[] { "Room", });
          internal__static_C2GNet_InviteRequest__Descriptor = Descriptor.MessageTypes[32];
          internal__static_C2GNet_InviteRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.InviteRequest, global::C2GNet.InviteRequest.Builder>(internal__static_C2GNet_InviteRequest__Descriptor,
                  new string[] { "FromUserId", "FromNickName", "ToUserId", "ToNickName", "TeamId", });
          internal__static_C2GNet_InviteResponse__Descriptor = Descriptor.MessageTypes[33];
          internal__static_C2GNet_InviteResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.InviteResponse, global::C2GNet.InviteResponse.Builder>(internal__static_C2GNet_InviteResponse__Descriptor,
                  new string[] { "Resultmsg", "Errormsg", "InviteRequest", });
          internal__static_C2GNet_KickOutRequest__Descriptor = Descriptor.MessageTypes[34];
          internal__static_C2GNet_KickOutRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.KickOutRequest, global::C2GNet.KickOutRequest.Builder>(internal__static_C2GNet_KickOutRequest__Descriptor,
                  new string[] { "UserId", });
          internal__static_C2GNet_KickOutResponse__Descriptor = Descriptor.MessageTypes[35];
          internal__static_C2GNet_KickOutResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.KickOutResponse, global::C2GNet.KickOutResponse.Builder>(internal__static_C2GNet_KickOutResponse__Descriptor,
                  new string[] { "Result", "Errormsg", });
          internal__static_C2GNet_RoomStartGameRequest__Descriptor = Descriptor.MessageTypes[36];
          internal__static_C2GNet_RoomStartGameRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.RoomStartGameRequest, global::C2GNet.RoomStartGameRequest.Builder>(internal__static_C2GNet_RoomStartGameRequest__Descriptor,
                  new string[] { });
          internal__static_C2GNet_RoomStartGameResponse__Descriptor = Descriptor.MessageTypes[37];
          internal__static_C2GNet_RoomStartGameResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.RoomStartGameResponse, global::C2GNet.RoomStartGameResponse.Builder>(internal__static_C2GNet_RoomStartGameResponse__Descriptor,
                  new string[] { "Result", "Errormsg", });
          internal__static_C2GNet_NickNameSearchRequest__Descriptor = Descriptor.MessageTypes[38];
          internal__static_C2GNet_NickNameSearchRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.NickNameSearchRequest, global::C2GNet.NickNameSearchRequest.Builder>(internal__static_C2GNet_NickNameSearchRequest__Descriptor,
                  new string[] { "NickName", });
          internal__static_C2GNet_NickNameSearchResponse__Descriptor = Descriptor.MessageTypes[39];
          internal__static_C2GNet_NickNameSearchResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.NickNameSearchResponse, global::C2GNet.NickNameSearchResponse.Builder>(internal__static_C2GNet_NickNameSearchResponse__Descriptor,
                  new string[] { "RoomUser", });
          internal__static_C2GNet_AddRoomRequest__Descriptor = Descriptor.MessageTypes[40];
          internal__static_C2GNet_AddRoomRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.AddRoomRequest, global::C2GNet.AddRoomRequest.Builder>(internal__static_C2GNet_AddRoomRequest__Descriptor,
                  new string[] { "RoomId", "FromUserId", "FromNickName", });
          internal__static_C2GNet_AddRoomResponse__Descriptor = Descriptor.MessageTypes[41];
          internal__static_C2GNet_AddRoomResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.AddRoomResponse, global::C2GNet.AddRoomResponse.Builder>(internal__static_C2GNet_AddRoomResponse__Descriptor,
                  new string[] { "Result", "Errormsg", "AddRoomRequest", "TeamId", });
          internal__static_C2GNet_OutRoomRequest__Descriptor = Descriptor.MessageTypes[42];
          internal__static_C2GNet_OutRoomRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.OutRoomRequest, global::C2GNet.OutRoomRequest.Builder>(internal__static_C2GNet_OutRoomRequest__Descriptor,
                  new string[] { });
          internal__static_C2GNet_OutRoomResponse__Descriptor = Descriptor.MessageTypes[43];
          internal__static_C2GNet_OutRoomResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.OutRoomResponse, global::C2GNet.OutRoomResponse.Builder>(internal__static_C2GNet_OutRoomResponse__Descriptor,
                  new string[] { "Result", "Errormsg", });
          internal__static_C2GNet_FollowListRequest__Descriptor = Descriptor.MessageTypes[44];
          internal__static_C2GNet_FollowListRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.FollowListRequest, global::C2GNet.FollowListRequest.Builder>(internal__static_C2GNet_FollowListRequest__Descriptor,
                  new string[] { });
          internal__static_C2GNet_FollowListResponse__Descriptor = Descriptor.MessageTypes[45];
          internal__static_C2GNet_FollowListResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.FollowListResponse, global::C2GNet.FollowListResponse.Builder>(internal__static_C2GNet_FollowListResponse__Descriptor,
                  new string[] { "Follows", });
          internal__static_C2GNet_ChatMessage__Descriptor = Descriptor.MessageTypes[46];
          internal__static_C2GNet_ChatMessage__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.ChatMessage, global::C2GNet.ChatMessage.Builder>(internal__static_C2GNet_ChatMessage__Descriptor,
                  new string[] { "ChatChannel", "FromId", "FromName", "FromLevel", "FromCCharacterId", "ToId", "ToName", "ToLevel", "ToCCharacterId", "Msg", "Time", "ChatRoomType", "EnterLiveUserId", });
          internal__static_C2GNet_ChatRequest__Descriptor = Descriptor.MessageTypes[47];
          internal__static_C2GNet_ChatRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.ChatRequest, global::C2GNet.ChatRequest.Builder>(internal__static_C2GNet_ChatRequest__Descriptor,
                  new string[] { "ChatMessage", });
          internal__static_C2GNet_ChatResponse__Descriptor = Descriptor.MessageTypes[48];
          internal__static_C2GNet_ChatResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.ChatResponse, global::C2GNet.ChatResponse.Builder>(internal__static_C2GNet_ChatResponse__Descriptor,
                  new string[] { "Result", "Errormsg", "CompMessages", "PrivateMessages", "RoomMessages", });
          internal__static_C2GNet_UserStatusQueryRequest__Descriptor = Descriptor.MessageTypes[49];
          internal__static_C2GNet_UserStatusQueryRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserStatusQueryRequest, global::C2GNet.UserStatusQueryRequest.Builder>(internal__static_C2GNet_UserStatusQueryRequest__Descriptor,
                  new string[] { "UserIds", });
          internal__static_C2GNet_UserStatusQueryResponse__Descriptor = Descriptor.MessageTypes[50];
          internal__static_C2GNet_UserStatusQueryResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UserStatusQueryResponse, global::C2GNet.UserStatusQueryResponse.Builder>(internal__static_C2GNet_UserStatusQueryResponse__Descriptor,
                  new string[] { "Status", });
          internal__static_C2GNet_StartMatchRequest__Descriptor = Descriptor.MessageTypes[51];
          internal__static_C2GNet_StartMatchRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.StartMatchRequest, global::C2GNet.StartMatchRequest.Builder>(internal__static_C2GNet_StartMatchRequest__Descriptor,
                  new string[] { });
          internal__static_C2GNet_StartMatchResponse__Descriptor = Descriptor.MessageTypes[52];
          internal__static_C2GNet_StartMatchResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.StartMatchResponse, global::C2GNet.StartMatchResponse.Builder>(internal__static_C2GNet_StartMatchResponse__Descriptor,
                  new string[] { "Result", "Errormsg", });
          internal__static_C2GNet_MatchResponse__Descriptor = Descriptor.MessageTypes[53];
          internal__static_C2GNet_MatchResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.MatchResponse, global::C2GNet.MatchResponse.Builder>(internal__static_C2GNet_MatchResponse__Descriptor,
                  new string[] { "Result", "Errormsg", "Room", });
          internal__static_C2GNet_GameOver2Request__Descriptor = Descriptor.MessageTypes[54];
          internal__static_C2GNet_GameOver2Request__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.GameOver2Request, global::C2GNet.GameOver2Request.Builder>(internal__static_C2GNet_GameOver2Request__Descriptor,
                  new string[] { "IpPortStr", });
          internal__static_C2GNet_AddLiveRequest__Descriptor = Descriptor.MessageTypes[55];
          internal__static_C2GNet_AddLiveRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.AddLiveRequest, global::C2GNet.AddLiveRequest.Builder>(internal__static_C2GNet_AddLiveRequest__Descriptor,
                  new string[] { "UserId", });
          internal__static_C2GNet_AddLiveResponse__Descriptor = Descriptor.MessageTypes[56];
          internal__static_C2GNet_AddLiveResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.AddLiveResponse, global::C2GNet.AddLiveResponse.Builder>(internal__static_C2GNet_AddLiveResponse__Descriptor,
                  new string[] { "Result", "Errormsg", "Room", });
          internal__static_C2GNet_UploadBiFenRequest__Descriptor = Descriptor.MessageTypes[57];
          internal__static_C2GNet_UploadBiFenRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.UploadBiFenRequest, global::C2GNet.UploadBiFenRequest.Builder>(internal__static_C2GNet_UploadBiFenRequest__Descriptor,
                  new string[] { "BiFen", });
          internal__static_C2GNet_ValidateOpenRoomRequest__Descriptor = Descriptor.MessageTypes[58];
          internal__static_C2GNet_ValidateOpenRoomRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.ValidateOpenRoomRequest, global::C2GNet.ValidateOpenRoomRequest.Builder>(internal__static_C2GNet_ValidateOpenRoomRequest__Descriptor,
                  new string[] { });
          internal__static_C2GNet_ValidateOpenRoomResponse__Descriptor = Descriptor.MessageTypes[59];
          internal__static_C2GNet_ValidateOpenRoomResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::C2GNet.ValidateOpenRoomResponse, global::C2GNet.ValidateOpenRoomResponse.Builder>(internal__static_C2GNet_ValidateOpenRoomResponse__Descriptor,
                  new string[] { "Result", "Errormsg", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Enums
  public enum Result {
    Success = 0,
    Failed = 1,
  }
  
  public enum StatusAction {
    UPDATE = 0,
    ADD = 1,
    DELETE = 2,
  }
  
  public enum TipsType {
    Tips = 0,
    Popup = 1,
  }
  
  public enum StatusType {
    MONEY = 0,
    EXP = 1,
    SKILL_POINT = 2,
    ITEM = 3,
  }
  
  public enum UserStatus {
    Normal = 0,
    Game = 1,
    Room = 2,
    Live = 3,
    GameOver = 4,
  }
  
  public enum TipsWorkType {
    None = 0,
    AuctionResult = 1,
    DismissRoom = 2,
    KickOutRoom = 3,
    OutRoom = 4,
  }
  
  public enum RoomStatus {
    Normal_ = 0,
    GameIn = 1,
  }
  
  public enum ChatChannel {
    Comp = 0,
    Private = 1,
    RoomChat = 2,
  }
  
  public enum ChatRoomType {
    Room_ = 0,
    Game_ = 1,
    Live_ = 2,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NUser : pb::GeneratedMessage<NUser, NUser.Builder> {
    private NUser() { }
    private static readonly NUser defaultInstance = new NUser().MakeReadOnly();
    private static readonly string[] _nUserFieldNames = new string[] { "biFen", "character", "coin", "fenSiCount", "id", "isFollow", "nickname", "status", "unLockCharacters", "userStatus" };
    private static readonly uint[] _nUserFieldTags = new uint[] { 90, 34, 24, 72, 8, 48, 18, 64, 42, 80 };
    public static NUser DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NUser DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NUser ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NUser__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NUser, NUser.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NUser__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int NicknameFieldNumber = 2;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    public const int CoinFieldNumber = 3;
    private bool hasCoin;
    private long coin_;
    public bool HasCoin {
      get { return hasCoin; }
    }
    public long Coin {
      get { return coin_; }
    }
    
    public const int CharacterFieldNumber = 4;
    private bool hasCharacter;
    private global::C2GNet.NCharacter character_;
    public bool HasCharacter {
      get { return hasCharacter; }
    }
    public global::C2GNet.NCharacter Character {
      get { return character_ ?? global::C2GNet.NCharacter.DefaultInstance; }
    }
    
    public const int UnLockCharactersFieldNumber = 5;
    private pbc::PopsicleList<global::C2GNet.UnLockCharacter> unLockCharacters_ = new pbc::PopsicleList<global::C2GNet.UnLockCharacter>();
    public scg::IList<global::C2GNet.UnLockCharacter> UnLockCharactersList {
      get { return unLockCharacters_; }
    }
    public int UnLockCharactersCount {
      get { return unLockCharacters_.Count; }
    }
    public global::C2GNet.UnLockCharacter GetUnLockCharacters(int index) {
      return unLockCharacters_[index];
    }
    
    public const int IsFollowFieldNumber = 6;
    private bool hasIsFollow;
    private bool isFollow_;
    public bool HasIsFollow {
      get { return hasIsFollow; }
    }
    public bool IsFollow {
      get { return isFollow_; }
    }
    
    public const int StatusFieldNumber = 8;
    private bool hasStatus;
    private bool status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public bool Status {
      get { return status_; }
    }
    
    public const int FenSiCountFieldNumber = 9;
    private bool hasFenSiCount;
    private int fenSiCount_;
    public bool HasFenSiCount {
      get { return hasFenSiCount; }
    }
    public int FenSiCount {
      get { return fenSiCount_; }
    }
    
    public const int UserStatusFieldNumber = 10;
    private bool hasUserStatus;
    private global::C2GNet.UserStatus userStatus_ = global::C2GNet.UserStatus.Normal;
    public bool HasUserStatus {
      get { return hasUserStatus; }
    }
    public global::C2GNet.UserStatus UserStatus {
      get { return userStatus_; }
    }
    
    public const int BiFenFieldNumber = 11;
    private bool hasBiFen;
    private string biFen_ = "";
    public bool HasBiFen {
      get { return hasBiFen; }
    }
    public string BiFen {
      get { return biFen_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nUserFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[4], Id);
      }
      if (hasNickname) {
        output.WriteString(2, field_names[6], Nickname);
      }
      if (hasCoin) {
        output.WriteInt64(3, field_names[2], Coin);
      }
      if (hasCharacter) {
        output.WriteMessage(4, field_names[1], Character);
      }
      if (unLockCharacters_.Count > 0) {
        output.WriteMessageArray(5, field_names[8], unLockCharacters_);
      }
      if (hasIsFollow) {
        output.WriteBool(6, field_names[5], IsFollow);
      }
      if (hasStatus) {
        output.WriteBool(8, field_names[7], Status);
      }
      if (hasFenSiCount) {
        output.WriteInt32(9, field_names[3], FenSiCount);
      }
      if (hasUserStatus) {
        output.WriteEnum(10, field_names[9], (int) UserStatus, UserStatus);
      }
      if (hasBiFen) {
        output.WriteString(11, field_names[0], BiFen);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
      }
      if (hasNickname) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Nickname);
      }
      if (hasCoin) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, Coin);
      }
      if (hasCharacter) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Character);
      }
      foreach (global::C2GNet.UnLockCharacter element in UnLockCharactersList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      if (hasIsFollow) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, IsFollow);
      }
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, Status);
      }
      if (hasFenSiCount) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, FenSiCount);
      }
      if (hasUserStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(10, (int) UserStatus);
      }
      if (hasBiFen) {
        size += pb::CodedOutputStream.ComputeStringSize(11, BiFen);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NUser ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NUser ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NUser ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NUser ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NUser ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NUser ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NUser ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NUser ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NUser ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NUser ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NUser MakeReadOnly() {
      unLockCharacters_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NUser prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NUser, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NUser cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NUser result;
      
      private NUser PrepareBuilder() {
        if (resultIsReadOnly) {
          NUser original = result;
          result = new NUser();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NUser MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.NUser.Descriptor; }
      }
      
      public override NUser DefaultInstanceForType {
        get { return global::C2GNet.NUser.DefaultInstance; }
      }
      
      public override NUser BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NUser) {
          return MergeFrom((NUser) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NUser other) {
        if (other == global::C2GNet.NUser.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        if (other.HasCoin) {
          Coin = other.Coin;
        }
        if (other.HasCharacter) {
          MergeCharacter(other.Character);
        }
        if (other.unLockCharacters_.Count != 0) {
          result.unLockCharacters_.Add(other.unLockCharacters_);
        }
        if (other.HasIsFollow) {
          IsFollow = other.IsFollow;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasFenSiCount) {
          FenSiCount = other.FenSiCount;
        }
        if (other.HasUserStatus) {
          UserStatus = other.UserStatus;
        }
        if (other.HasBiFen) {
          BiFen = other.BiFen;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 18: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
            case 24: {
              result.hasCoin = input.ReadInt64(ref result.coin_);
              break;
            }
            case 34: {
              global::C2GNet.NCharacter.Builder subBuilder = global::C2GNet.NCharacter.CreateBuilder();
              if (result.hasCharacter) {
                subBuilder.MergeFrom(Character);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Character = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.unLockCharacters_, global::C2GNet.UnLockCharacter.DefaultInstance, extensionRegistry);
              break;
            }
            case 48: {
              result.hasIsFollow = input.ReadBool(ref result.isFollow_);
              break;
            }
            case 64: {
              result.hasStatus = input.ReadBool(ref result.status_);
              break;
            }
            case 72: {
              result.hasFenSiCount = input.ReadInt32(ref result.fenSiCount_);
              break;
            }
            case 80: {
              object unknown;
              if(input.ReadEnum(ref result.userStatus_, out unknown)) {
                result.hasUserStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(10, (ulong)(int)unknown);
              }
              break;
            }
            case 90: {
              result.hasBiFen = input.ReadString(ref result.biFen_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
      
      public bool HasCoin {
        get { return result.hasCoin; }
      }
      public long Coin {
        get { return result.Coin; }
        set { SetCoin(value); }
      }
      public Builder SetCoin(long value) {
        PrepareBuilder();
        result.hasCoin = true;
        result.coin_ = value;
        return this;
      }
      public Builder ClearCoin() {
        PrepareBuilder();
        result.hasCoin = false;
        result.coin_ = 0L;
        return this;
      }
      
      public bool HasCharacter {
       get { return result.hasCharacter; }
      }
      public global::C2GNet.NCharacter Character {
        get { return result.Character; }
        set { SetCharacter(value); }
      }
      public Builder SetCharacter(global::C2GNet.NCharacter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCharacter = true;
        result.character_ = value;
        return this;
      }
      public Builder SetCharacter(global::C2GNet.NCharacter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCharacter = true;
        result.character_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCharacter(global::C2GNet.NCharacter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCharacter &&
            result.character_ != global::C2GNet.NCharacter.DefaultInstance) {
            result.character_ = global::C2GNet.NCharacter.CreateBuilder(result.character_).MergeFrom(value).BuildPartial();
        } else {
          result.character_ = value;
        }
        result.hasCharacter = true;
        return this;
      }
      public Builder ClearCharacter() {
        PrepareBuilder();
        result.hasCharacter = false;
        result.character_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::C2GNet.UnLockCharacter> UnLockCharactersList {
        get { return PrepareBuilder().unLockCharacters_; }
      }
      public int UnLockCharactersCount {
        get { return result.UnLockCharactersCount; }
      }
      public global::C2GNet.UnLockCharacter GetUnLockCharacters(int index) {
        return result.GetUnLockCharacters(index);
      }
      public Builder SetUnLockCharacters(int index, global::C2GNet.UnLockCharacter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.unLockCharacters_[index] = value;
        return this;
      }
      public Builder SetUnLockCharacters(int index, global::C2GNet.UnLockCharacter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.unLockCharacters_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUnLockCharacters(global::C2GNet.UnLockCharacter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.unLockCharacters_.Add(value);
        return this;
      }
      public Builder AddUnLockCharacters(global::C2GNet.UnLockCharacter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.unLockCharacters_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUnLockCharacters(scg::IEnumerable<global::C2GNet.UnLockCharacter> values) {
        PrepareBuilder();
        result.unLockCharacters_.Add(values);
        return this;
      }
      public Builder ClearUnLockCharacters() {
        PrepareBuilder();
        result.unLockCharacters_.Clear();
        return this;
      }
      
      public bool HasIsFollow {
        get { return result.hasIsFollow; }
      }
      public bool IsFollow {
        get { return result.IsFollow; }
        set { SetIsFollow(value); }
      }
      public Builder SetIsFollow(bool value) {
        PrepareBuilder();
        result.hasIsFollow = true;
        result.isFollow_ = value;
        return this;
      }
      public Builder ClearIsFollow() {
        PrepareBuilder();
        result.hasIsFollow = false;
        result.isFollow_ = false;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public bool Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(bool value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = false;
        return this;
      }
      
      public bool HasFenSiCount {
        get { return result.hasFenSiCount; }
      }
      public int FenSiCount {
        get { return result.FenSiCount; }
        set { SetFenSiCount(value); }
      }
      public Builder SetFenSiCount(int value) {
        PrepareBuilder();
        result.hasFenSiCount = true;
        result.fenSiCount_ = value;
        return this;
      }
      public Builder ClearFenSiCount() {
        PrepareBuilder();
        result.hasFenSiCount = false;
        result.fenSiCount_ = 0;
        return this;
      }
      
      public bool HasUserStatus {
       get { return result.hasUserStatus; }
      }
      public global::C2GNet.UserStatus UserStatus {
        get { return result.UserStatus; }
        set { SetUserStatus(value); }
      }
      public Builder SetUserStatus(global::C2GNet.UserStatus value) {
        PrepareBuilder();
        result.hasUserStatus = true;
        result.userStatus_ = value;
        return this;
      }
      public Builder ClearUserStatus() {
        PrepareBuilder();
        result.hasUserStatus = false;
        result.userStatus_ = global::C2GNet.UserStatus.Normal;
        return this;
      }
      
      public bool HasBiFen {
        get { return result.hasBiFen; }
      }
      public string BiFen {
        get { return result.BiFen; }
        set { SetBiFen(value); }
      }
      public Builder SetBiFen(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBiFen = true;
        result.biFen_ = value;
        return this;
      }
      public Builder ClearBiFen() {
        PrepareBuilder();
        result.hasBiFen = false;
        result.biFen_ = "";
        return this;
      }
    }
    static NUser() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UnLockCharacter : pb::GeneratedMessage<UnLockCharacter, UnLockCharacter.Builder> {
    private UnLockCharacter() { }
    private static readonly UnLockCharacter defaultInstance = new UnLockCharacter().MakeReadOnly();
    private static readonly string[] _unLockCharacterFieldNames = new string[] { "cid", "tid" };
    private static readonly uint[] _unLockCharacterFieldTags = new uint[] { 16, 8 };
    public static UnLockCharacter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnLockCharacter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnLockCharacter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UnLockCharacter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnLockCharacter, UnLockCharacter.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UnLockCharacter__FieldAccessorTable; }
    }
    
    public const int TidFieldNumber = 1;
    private bool hasTid;
    private int tid_;
    public bool HasTid {
      get { return hasTid; }
    }
    public int Tid {
      get { return tid_; }
    }
    
    public const int CidFieldNumber = 2;
    private bool hasCid;
    private int cid_;
    public bool HasCid {
      get { return hasCid; }
    }
    public int Cid {
      get { return cid_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _unLockCharacterFieldNames;
      if (hasTid) {
        output.WriteInt32(1, field_names[1], Tid);
      }
      if (hasCid) {
        output.WriteInt32(2, field_names[0], Cid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTid) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Tid);
      }
      if (hasCid) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Cid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UnLockCharacter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnLockCharacter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnLockCharacter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnLockCharacter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnLockCharacter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnLockCharacter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnLockCharacter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnLockCharacter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnLockCharacter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnLockCharacter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnLockCharacter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnLockCharacter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UnLockCharacter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnLockCharacter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnLockCharacter result;
      
      private UnLockCharacter PrepareBuilder() {
        if (resultIsReadOnly) {
          UnLockCharacter original = result;
          result = new UnLockCharacter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnLockCharacter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UnLockCharacter.Descriptor; }
      }
      
      public override UnLockCharacter DefaultInstanceForType {
        get { return global::C2GNet.UnLockCharacter.DefaultInstance; }
      }
      
      public override UnLockCharacter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnLockCharacter) {
          return MergeFrom((UnLockCharacter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnLockCharacter other) {
        if (other == global::C2GNet.UnLockCharacter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTid) {
          Tid = other.Tid;
        }
        if (other.HasCid) {
          Cid = other.Cid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unLockCharacterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unLockCharacterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTid = input.ReadInt32(ref result.tid_);
              break;
            }
            case 16: {
              result.hasCid = input.ReadInt32(ref result.cid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTid {
        get { return result.hasTid; }
      }
      public int Tid {
        get { return result.Tid; }
        set { SetTid(value); }
      }
      public Builder SetTid(int value) {
        PrepareBuilder();
        result.hasTid = true;
        result.tid_ = value;
        return this;
      }
      public Builder ClearTid() {
        PrepareBuilder();
        result.hasTid = false;
        result.tid_ = 0;
        return this;
      }
      
      public bool HasCid {
        get { return result.hasCid; }
      }
      public int Cid {
        get { return result.Cid; }
        set { SetCid(value); }
      }
      public Builder SetCid(int value) {
        PrepareBuilder();
        result.hasCid = true;
        result.cid_ = value;
        return this;
      }
      public Builder ClearCid() {
        PrepareBuilder();
        result.hasCid = false;
        result.cid_ = 0;
        return this;
      }
    }
    static UnLockCharacter() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NCharacter : pb::GeneratedMessage<NCharacter, NCharacter.Builder> {
    private NCharacter() { }
    private static readonly NCharacter defaultInstance = new NCharacter().MakeReadOnly();
    private static readonly string[] _nCharacterFieldNames = new string[] {  };
    private static readonly uint[] _nCharacterFieldTags = new uint[] {  };
    public static NCharacter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NCharacter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NCharacter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NCharacter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NCharacter, NCharacter.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NCharacter__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nCharacterFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NCharacter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NCharacter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NCharacter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NCharacter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NCharacter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NCharacter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NCharacter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NCharacter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NCharacter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NCharacter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NCharacter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NCharacter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NCharacter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NCharacter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NCharacter result;
      
      private NCharacter PrepareBuilder() {
        if (resultIsReadOnly) {
          NCharacter original = result;
          result = new NCharacter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NCharacter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.NCharacter.Descriptor; }
      }
      
      public override NCharacter DefaultInstanceForType {
        get { return global::C2GNet.NCharacter.DefaultInstance; }
      }
      
      public override NCharacter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NCharacter) {
          return MergeFrom((NCharacter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NCharacter other) {
        if (other == global::C2GNet.NCharacter.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nCharacterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nCharacterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static NCharacter() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NStatus : pb::GeneratedMessage<NStatus, NStatus.Builder> {
    private NStatus() { }
    private static readonly NStatus defaultInstance = new NStatus().MakeReadOnly();
    private static readonly string[] _nStatusFieldNames = new string[] { "action", "id", "type", "value" };
    private static readonly uint[] _nStatusFieldTags = new uint[] { 16, 24, 8, 32 };
    public static NStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NStatus DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NStatus, NStatus.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NStatus__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::C2GNet.StatusType type_ = global::C2GNet.StatusType.MONEY;
    public bool HasType {
      get { return hasType; }
    }
    public global::C2GNet.StatusType Type {
      get { return type_; }
    }
    
    public const int ActionFieldNumber = 2;
    private bool hasAction;
    private global::C2GNet.StatusAction action_ = global::C2GNet.StatusAction.UPDATE;
    public bool HasAction {
      get { return hasAction; }
    }
    public global::C2GNet.StatusAction Action {
      get { return action_; }
    }
    
    public const int IdFieldNumber = 3;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int ValueFieldNumber = 4;
    private bool hasValue;
    private long value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public long Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nStatusFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[2], (int) Type, Type);
      }
      if (hasAction) {
        output.WriteEnum(2, field_names[0], (int) Action, Action);
      }
      if (hasId) {
        output.WriteInt32(3, field_names[1], Id);
      }
      if (hasValue) {
        output.WriteInt64(4, field_names[3], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasAction) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Action);
      }
      if (hasId) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Id);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NStatus ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NStatus MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NStatus prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NStatus cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NStatus result;
      
      private NStatus PrepareBuilder() {
        if (resultIsReadOnly) {
          NStatus original = result;
          result = new NStatus();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NStatus MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.NStatus.Descriptor; }
      }
      
      public override NStatus DefaultInstanceForType {
        get { return global::C2GNet.NStatus.DefaultInstance; }
      }
      
      public override NStatus BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NStatus) {
          return MergeFrom((NStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NStatus other) {
        if (other == global::C2GNet.NStatus.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasAction) {
          Action = other.Action;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nStatusFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.action_, out unknown)) {
                result.hasAction = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 32: {
              result.hasValue = input.ReadInt64(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::C2GNet.StatusType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::C2GNet.StatusType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::C2GNet.StatusType.MONEY;
        return this;
      }
      
      public bool HasAction {
       get { return result.hasAction; }
      }
      public global::C2GNet.StatusAction Action {
        get { return result.Action; }
        set { SetAction(value); }
      }
      public Builder SetAction(global::C2GNet.StatusAction value) {
        PrepareBuilder();
        result.hasAction = true;
        result.action_ = value;
        return this;
      }
      public Builder ClearAction() {
        PrepareBuilder();
        result.hasAction = false;
        result.action_ = global::C2GNet.StatusAction.UPDATE;
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public long Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(long value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0L;
        return this;
      }
    }
    static NStatus() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StatusNotify : pb::GeneratedMessage<StatusNotify, StatusNotify.Builder> {
    private StatusNotify() { }
    private static readonly StatusNotify defaultInstance = new StatusNotify().MakeReadOnly();
    private static readonly string[] _statusNotifyFieldNames = new string[] { "status" };
    private static readonly uint[] _statusNotifyFieldTags = new uint[] { 10 };
    public static StatusNotify DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StatusNotify DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StatusNotify ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_StatusNotify__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StatusNotify, StatusNotify.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_StatusNotify__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private pbc::PopsicleList<global::C2GNet.NStatus> status_ = new pbc::PopsicleList<global::C2GNet.NStatus>();
    public scg::IList<global::C2GNet.NStatus> StatusList {
      get { return status_; }
    }
    public int StatusCount {
      get { return status_.Count; }
    }
    public global::C2GNet.NStatus GetStatus(int index) {
      return status_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _statusNotifyFieldNames;
      if (status_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], status_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::C2GNet.NStatus element in StatusList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StatusNotify ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StatusNotify ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StatusNotify ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StatusNotify ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StatusNotify ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StatusNotify ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StatusNotify ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StatusNotify ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StatusNotify ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StatusNotify ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StatusNotify MakeReadOnly() {
      status_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StatusNotify prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StatusNotify, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StatusNotify cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StatusNotify result;
      
      private StatusNotify PrepareBuilder() {
        if (resultIsReadOnly) {
          StatusNotify original = result;
          result = new StatusNotify();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StatusNotify MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.StatusNotify.Descriptor; }
      }
      
      public override StatusNotify DefaultInstanceForType {
        get { return global::C2GNet.StatusNotify.DefaultInstance; }
      }
      
      public override StatusNotify BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StatusNotify) {
          return MergeFrom((StatusNotify) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StatusNotify other) {
        if (other == global::C2GNet.StatusNotify.DefaultInstance) return this;
        PrepareBuilder();
        if (other.status_.Count != 0) {
          result.status_.Add(other.status_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_statusNotifyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _statusNotifyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.status_, global::C2GNet.NStatus.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::C2GNet.NStatus> StatusList {
        get { return PrepareBuilder().status_; }
      }
      public int StatusCount {
        get { return result.StatusCount; }
      }
      public global::C2GNet.NStatus GetStatus(int index) {
        return result.GetStatus(index);
      }
      public Builder SetStatus(int index, global::C2GNet.NStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.status_[index] = value;
        return this;
      }
      public Builder SetStatus(int index, global::C2GNet.NStatus.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.status_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStatus(global::C2GNet.NStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.status_.Add(value);
        return this;
      }
      public Builder AddStatus(global::C2GNet.NStatus.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.status_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStatus(scg::IEnumerable<global::C2GNet.NStatus> values) {
        PrepareBuilder();
        result.status_.Add(values);
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.status_.Clear();
        return this;
      }
    }
    static StatusNotify() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NUserStatusChange : pb::GeneratedMessage<NUserStatusChange, NUserStatusChange.Builder> {
    private NUserStatusChange() { }
    private static readonly NUserStatusChange defaultInstance = new NUserStatusChange().MakeReadOnly();
    private static readonly string[] _nUserStatusChangeFieldNames = new string[] { "status", "userId" };
    private static readonly uint[] _nUserStatusChangeFieldTags = new uint[] { 16, 8 };
    public static NUserStatusChange DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NUserStatusChange DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NUserStatusChange ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NUserStatusChange__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NUserStatusChange, NUserStatusChange.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NUserStatusChange__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    public const int StatusFieldNumber = 2;
    private bool hasStatus;
    private bool status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public bool Status {
      get { return status_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nUserStatusChangeFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[1], UserId);
      }
      if (hasStatus) {
        output.WriteBool(2, field_names[0], Status);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
      }
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, Status);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NUserStatusChange ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NUserStatusChange ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NUserStatusChange ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NUserStatusChange ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NUserStatusChange ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NUserStatusChange ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NUserStatusChange ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NUserStatusChange ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NUserStatusChange ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NUserStatusChange ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NUserStatusChange MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NUserStatusChange prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NUserStatusChange, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NUserStatusChange cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NUserStatusChange result;
      
      private NUserStatusChange PrepareBuilder() {
        if (resultIsReadOnly) {
          NUserStatusChange original = result;
          result = new NUserStatusChange();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NUserStatusChange MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.NUserStatusChange.Descriptor; }
      }
      
      public override NUserStatusChange DefaultInstanceForType {
        get { return global::C2GNet.NUserStatusChange.DefaultInstance; }
      }
      
      public override NUserStatusChange BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NUserStatusChange) {
          return MergeFrom((NUserStatusChange) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NUserStatusChange other) {
        if (other == global::C2GNet.NUserStatusChange.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nUserStatusChangeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nUserStatusChangeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 16: {
              result.hasStatus = input.ReadBool(ref result.status_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public bool Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(bool value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = false;
        return this;
      }
    }
    static NUserStatusChange() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class C2GNetMessage : pb::GeneratedMessage<C2GNetMessage, C2GNetMessage.Builder> {
    private C2GNetMessage() { }
    private static readonly C2GNetMessage defaultInstance = new C2GNetMessage().MakeReadOnly();
    private static readonly string[] _c2GNetMessageFieldNames = new string[] { "Request", "Response", "messageType" };
    private static readonly uint[] _c2GNetMessageFieldTags = new uint[] { 18, 26, 10 };
    public static C2GNetMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override C2GNetMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override C2GNetMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_C2GNetMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<C2GNetMessage, C2GNetMessage.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_C2GNetMessage__FieldAccessorTable; }
    }
    
    public const int MessageTypeFieldNumber = 1;
    private pbc::PopsicleList<string> messageType_ = new pbc::PopsicleList<string>();
    public scg::IList<string> MessageTypeList {
      get { return pbc::Lists.AsReadOnly(messageType_); }
    }
    public int MessageTypeCount {
      get { return messageType_.Count; }
    }
    public string GetMessageType(int index) {
      return messageType_[index];
    }
    
    public const int RequestFieldNumber = 2;
    private bool hasRequest;
    private global::C2GNet.NetMessageRequest request_;
    public bool HasRequest {
      get { return hasRequest; }
    }
    public global::C2GNet.NetMessageRequest Request {
      get { return request_ ?? global::C2GNet.NetMessageRequest.DefaultInstance; }
    }
    
    public const int ResponseFieldNumber = 3;
    private bool hasResponse;
    private global::C2GNet.NetMessageResponse response_;
    public bool HasResponse {
      get { return hasResponse; }
    }
    public global::C2GNet.NetMessageResponse Response {
      get { return response_ ?? global::C2GNet.NetMessageResponse.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _c2GNetMessageFieldNames;
      if (messageType_.Count > 0) {
        output.WriteStringArray(1, field_names[2], messageType_);
      }
      if (hasRequest) {
        output.WriteMessage(2, field_names[0], Request);
      }
      if (hasResponse) {
        output.WriteMessage(3, field_names[1], Response);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (string element in MessageTypeList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * messageType_.Count;
      }
      if (hasRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Request);
      }
      if (hasResponse) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Response);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static C2GNetMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2GNetMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2GNetMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2GNetMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2GNetMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2GNetMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static C2GNetMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static C2GNetMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static C2GNetMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2GNetMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private C2GNetMessage MakeReadOnly() {
      messageType_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(C2GNetMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<C2GNetMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(C2GNetMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private C2GNetMessage result;
      
      private C2GNetMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          C2GNetMessage original = result;
          result = new C2GNetMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override C2GNetMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.C2GNetMessage.Descriptor; }
      }
      
      public override C2GNetMessage DefaultInstanceForType {
        get { return global::C2GNet.C2GNetMessage.DefaultInstance; }
      }
      
      public override C2GNetMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is C2GNetMessage) {
          return MergeFrom((C2GNetMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(C2GNetMessage other) {
        if (other == global::C2GNet.C2GNetMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.messageType_.Count != 0) {
          result.messageType_.Add(other.messageType_);
        }
        if (other.HasRequest) {
          MergeRequest(other.Request);
        }
        if (other.HasResponse) {
          MergeResponse(other.Response);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_c2GNetMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _c2GNetMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.messageType_);
              break;
            }
            case 18: {
              global::C2GNet.NetMessageRequest.Builder subBuilder = global::C2GNet.NetMessageRequest.CreateBuilder();
              if (result.hasRequest) {
                subBuilder.MergeFrom(Request);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Request = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::C2GNet.NetMessageResponse.Builder subBuilder = global::C2GNet.NetMessageResponse.CreateBuilder();
              if (result.hasResponse) {
                subBuilder.MergeFrom(Response);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Response = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> MessageTypeList {
        get { return PrepareBuilder().messageType_; }
      }
      public int MessageTypeCount {
        get { return result.MessageTypeCount; }
      }
      public string GetMessageType(int index) {
        return result.GetMessageType(index);
      }
      public Builder SetMessageType(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.messageType_[index] = value;
        return this;
      }
      public Builder AddMessageType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.messageType_.Add(value);
        return this;
      }
      public Builder AddRangeMessageType(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.messageType_.Add(values);
        return this;
      }
      public Builder ClearMessageType() {
        PrepareBuilder();
        result.messageType_.Clear();
        return this;
      }
      
      public bool HasRequest {
       get { return result.hasRequest; }
      }
      public global::C2GNet.NetMessageRequest Request {
        get { return result.Request; }
        set { SetRequest(value); }
      }
      public Builder SetRequest(global::C2GNet.NetMessageRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequest = true;
        result.request_ = value;
        return this;
      }
      public Builder SetRequest(global::C2GNet.NetMessageRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequest = true;
        result.request_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequest(global::C2GNet.NetMessageRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequest &&
            result.request_ != global::C2GNet.NetMessageRequest.DefaultInstance) {
            result.request_ = global::C2GNet.NetMessageRequest.CreateBuilder(result.request_).MergeFrom(value).BuildPartial();
        } else {
          result.request_ = value;
        }
        result.hasRequest = true;
        return this;
      }
      public Builder ClearRequest() {
        PrepareBuilder();
        result.hasRequest = false;
        result.request_ = null;
        return this;
      }
      
      public bool HasResponse {
       get { return result.hasResponse; }
      }
      public global::C2GNet.NetMessageResponse Response {
        get { return result.Response; }
        set { SetResponse(value); }
      }
      public Builder SetResponse(global::C2GNet.NetMessageResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder SetResponse(global::C2GNet.NetMessageResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponse = true;
        result.response_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponse(global::C2GNet.NetMessageResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponse &&
            result.response_ != global::C2GNet.NetMessageResponse.DefaultInstance) {
            result.response_ = global::C2GNet.NetMessageResponse.CreateBuilder(result.response_).MergeFrom(value).BuildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder ClearResponse() {
        PrepareBuilder();
        result.hasResponse = false;
        result.response_ = null;
        return this;
      }
    }
    static C2GNetMessage() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetMessageRequest : pb::GeneratedMessage<NetMessageRequest, NetMessageRequest.Builder> {
    private NetMessageRequest() { }
    private static readonly NetMessageRequest defaultInstance = new NetMessageRequest().MakeReadOnly();
    private static readonly string[] _netMessageRequestFieldNames = new string[] { "addLiveReq", "addRoomReq", "addRoomRes", "characterDetail", "chatReq", "followListReq", "followReq", "gameOver2Req", "heartBeatReq", "inviteReq", "inviteRes", "kickOutReq", "myRoomReq", "nickNameSearchReq", "outRoomReq", "roomStartGameReq", "startMatchReq", "switchCharacterReq", "unLockReq", "updateNickName", "uploadBiFenReq", "userLogin", "userRegister", "userStatusQueryReq", "validateOpenRoomReq" };
    private static readonly uint[] _netMessageRequestFieldTags = new uint[] { 250, 194, 202, 26, 218, 266, 66, 242, 114, 154, 162, 170, 146, 186, 210, 178, 234, 82, 74, 34, 258, 18, 10, 226, 274 };
    public static NetMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetMessageRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NetMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetMessageRequest, NetMessageRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NetMessageRequest__FieldAccessorTable; }
    }
    
    public const int UserRegisterFieldNumber = 1;
    private bool hasUserRegister;
    private global::C2GNet.UserRegisterRequest userRegister_;
    public bool HasUserRegister {
      get { return hasUserRegister; }
    }
    public global::C2GNet.UserRegisterRequest UserRegister {
      get { return userRegister_ ?? global::C2GNet.UserRegisterRequest.DefaultInstance; }
    }
    
    public const int UserLoginFieldNumber = 2;
    private bool hasUserLogin;
    private global::C2GNet.UserLoginRequest userLogin_;
    public bool HasUserLogin {
      get { return hasUserLogin; }
    }
    public global::C2GNet.UserLoginRequest UserLogin {
      get { return userLogin_ ?? global::C2GNet.UserLoginRequest.DefaultInstance; }
    }
    
    public const int CharacterDetailFieldNumber = 3;
    private bool hasCharacterDetail;
    private global::C2GNet.CharacterDetailRequest characterDetail_;
    public bool HasCharacterDetail {
      get { return hasCharacterDetail; }
    }
    public global::C2GNet.CharacterDetailRequest CharacterDetail {
      get { return characterDetail_ ?? global::C2GNet.CharacterDetailRequest.DefaultInstance; }
    }
    
    public const int UpdateNickNameFieldNumber = 4;
    private bool hasUpdateNickName;
    private global::C2GNet.UpdateNickNameRequest updateNickName_;
    public bool HasUpdateNickName {
      get { return hasUpdateNickName; }
    }
    public global::C2GNet.UpdateNickNameRequest UpdateNickName {
      get { return updateNickName_ ?? global::C2GNet.UpdateNickNameRequest.DefaultInstance; }
    }
    
    public const int FollowReqFieldNumber = 8;
    private bool hasFollowReq;
    private global::C2GNet.FollowRequest followReq_;
    public bool HasFollowReq {
      get { return hasFollowReq; }
    }
    public global::C2GNet.FollowRequest FollowReq {
      get { return followReq_ ?? global::C2GNet.FollowRequest.DefaultInstance; }
    }
    
    public const int UnLockReqFieldNumber = 9;
    private bool hasUnLockReq;
    private global::C2GNet.UnLockRequest unLockReq_;
    public bool HasUnLockReq {
      get { return hasUnLockReq; }
    }
    public global::C2GNet.UnLockRequest UnLockReq {
      get { return unLockReq_ ?? global::C2GNet.UnLockRequest.DefaultInstance; }
    }
    
    public const int SwitchCharacterReqFieldNumber = 10;
    private bool hasSwitchCharacterReq;
    private global::C2GNet.SwitchCharacterRequest switchCharacterReq_;
    public bool HasSwitchCharacterReq {
      get { return hasSwitchCharacterReq; }
    }
    public global::C2GNet.SwitchCharacterRequest SwitchCharacterReq {
      get { return switchCharacterReq_ ?? global::C2GNet.SwitchCharacterRequest.DefaultInstance; }
    }
    
    public const int HeartBeatReqFieldNumber = 14;
    private bool hasHeartBeatReq;
    private global::C2GNet.HeartBeatRequest heartBeatReq_;
    public bool HasHeartBeatReq {
      get { return hasHeartBeatReq; }
    }
    public global::C2GNet.HeartBeatRequest HeartBeatReq {
      get { return heartBeatReq_ ?? global::C2GNet.HeartBeatRequest.DefaultInstance; }
    }
    
    public const int MyRoomReqFieldNumber = 18;
    private bool hasMyRoomReq;
    private global::C2GNet.MyRoomRequest myRoomReq_;
    public bool HasMyRoomReq {
      get { return hasMyRoomReq; }
    }
    public global::C2GNet.MyRoomRequest MyRoomReq {
      get { return myRoomReq_ ?? global::C2GNet.MyRoomRequest.DefaultInstance; }
    }
    
    public const int InviteReqFieldNumber = 19;
    private bool hasInviteReq;
    private global::C2GNet.InviteRequest inviteReq_;
    public bool HasInviteReq {
      get { return hasInviteReq; }
    }
    public global::C2GNet.InviteRequest InviteReq {
      get { return inviteReq_ ?? global::C2GNet.InviteRequest.DefaultInstance; }
    }
    
    public const int InviteResFieldNumber = 20;
    private bool hasInviteRes;
    private global::C2GNet.InviteResponse inviteRes_;
    public bool HasInviteRes {
      get { return hasInviteRes; }
    }
    public global::C2GNet.InviteResponse InviteRes {
      get { return inviteRes_ ?? global::C2GNet.InviteResponse.DefaultInstance; }
    }
    
    public const int KickOutReqFieldNumber = 21;
    private bool hasKickOutReq;
    private global::C2GNet.KickOutRequest kickOutReq_;
    public bool HasKickOutReq {
      get { return hasKickOutReq; }
    }
    public global::C2GNet.KickOutRequest KickOutReq {
      get { return kickOutReq_ ?? global::C2GNet.KickOutRequest.DefaultInstance; }
    }
    
    public const int RoomStartGameReqFieldNumber = 22;
    private bool hasRoomStartGameReq;
    private global::C2GNet.RoomStartGameRequest roomStartGameReq_;
    public bool HasRoomStartGameReq {
      get { return hasRoomStartGameReq; }
    }
    public global::C2GNet.RoomStartGameRequest RoomStartGameReq {
      get { return roomStartGameReq_ ?? global::C2GNet.RoomStartGameRequest.DefaultInstance; }
    }
    
    public const int NickNameSearchReqFieldNumber = 23;
    private bool hasNickNameSearchReq;
    private global::C2GNet.NickNameSearchRequest nickNameSearchReq_;
    public bool HasNickNameSearchReq {
      get { return hasNickNameSearchReq; }
    }
    public global::C2GNet.NickNameSearchRequest NickNameSearchReq {
      get { return nickNameSearchReq_ ?? global::C2GNet.NickNameSearchRequest.DefaultInstance; }
    }
    
    public const int AddRoomReqFieldNumber = 24;
    private bool hasAddRoomReq;
    private global::C2GNet.AddRoomRequest addRoomReq_;
    public bool HasAddRoomReq {
      get { return hasAddRoomReq; }
    }
    public global::C2GNet.AddRoomRequest AddRoomReq {
      get { return addRoomReq_ ?? global::C2GNet.AddRoomRequest.DefaultInstance; }
    }
    
    public const int AddRoomResFieldNumber = 25;
    private bool hasAddRoomRes;
    private global::C2GNet.AddRoomResponse addRoomRes_;
    public bool HasAddRoomRes {
      get { return hasAddRoomRes; }
    }
    public global::C2GNet.AddRoomResponse AddRoomRes {
      get { return addRoomRes_ ?? global::C2GNet.AddRoomResponse.DefaultInstance; }
    }
    
    public const int OutRoomReqFieldNumber = 26;
    private bool hasOutRoomReq;
    private global::C2GNet.OutRoomRequest outRoomReq_;
    public bool HasOutRoomReq {
      get { return hasOutRoomReq; }
    }
    public global::C2GNet.OutRoomRequest OutRoomReq {
      get { return outRoomReq_ ?? global::C2GNet.OutRoomRequest.DefaultInstance; }
    }
    
    public const int ChatReqFieldNumber = 27;
    private bool hasChatReq;
    private global::C2GNet.ChatRequest chatReq_;
    public bool HasChatReq {
      get { return hasChatReq; }
    }
    public global::C2GNet.ChatRequest ChatReq {
      get { return chatReq_ ?? global::C2GNet.ChatRequest.DefaultInstance; }
    }
    
    public const int UserStatusQueryReqFieldNumber = 28;
    private bool hasUserStatusQueryReq;
    private global::C2GNet.UserStatusQueryRequest userStatusQueryReq_;
    public bool HasUserStatusQueryReq {
      get { return hasUserStatusQueryReq; }
    }
    public global::C2GNet.UserStatusQueryRequest UserStatusQueryReq {
      get { return userStatusQueryReq_ ?? global::C2GNet.UserStatusQueryRequest.DefaultInstance; }
    }
    
    public const int StartMatchReqFieldNumber = 29;
    private bool hasStartMatchReq;
    private global::C2GNet.StartMatchRequest startMatchReq_;
    public bool HasStartMatchReq {
      get { return hasStartMatchReq; }
    }
    public global::C2GNet.StartMatchRequest StartMatchReq {
      get { return startMatchReq_ ?? global::C2GNet.StartMatchRequest.DefaultInstance; }
    }
    
    public const int GameOver2ReqFieldNumber = 30;
    private bool hasGameOver2Req;
    private global::C2GNet.GameOver2Request gameOver2Req_;
    public bool HasGameOver2Req {
      get { return hasGameOver2Req; }
    }
    public global::C2GNet.GameOver2Request GameOver2Req {
      get { return gameOver2Req_ ?? global::C2GNet.GameOver2Request.DefaultInstance; }
    }
    
    public const int AddLiveReqFieldNumber = 31;
    private bool hasAddLiveReq;
    private global::C2GNet.AddLiveRequest addLiveReq_;
    public bool HasAddLiveReq {
      get { return hasAddLiveReq; }
    }
    public global::C2GNet.AddLiveRequest AddLiveReq {
      get { return addLiveReq_ ?? global::C2GNet.AddLiveRequest.DefaultInstance; }
    }
    
    public const int UploadBiFenReqFieldNumber = 32;
    private bool hasUploadBiFenReq;
    private global::C2GNet.UploadBiFenRequest uploadBiFenReq_;
    public bool HasUploadBiFenReq {
      get { return hasUploadBiFenReq; }
    }
    public global::C2GNet.UploadBiFenRequest UploadBiFenReq {
      get { return uploadBiFenReq_ ?? global::C2GNet.UploadBiFenRequest.DefaultInstance; }
    }
    
    public const int FollowListReqFieldNumber = 33;
    private bool hasFollowListReq;
    private global::C2GNet.FollowListRequest followListReq_;
    public bool HasFollowListReq {
      get { return hasFollowListReq; }
    }
    public global::C2GNet.FollowListRequest FollowListReq {
      get { return followListReq_ ?? global::C2GNet.FollowListRequest.DefaultInstance; }
    }
    
    public const int ValidateOpenRoomReqFieldNumber = 34;
    private bool hasValidateOpenRoomReq;
    private global::C2GNet.ValidateOpenRoomRequest validateOpenRoomReq_;
    public bool HasValidateOpenRoomReq {
      get { return hasValidateOpenRoomReq; }
    }
    public global::C2GNet.ValidateOpenRoomRequest ValidateOpenRoomReq {
      get { return validateOpenRoomReq_ ?? global::C2GNet.ValidateOpenRoomRequest.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netMessageRequestFieldNames;
      if (hasUserRegister) {
        output.WriteMessage(1, field_names[22], UserRegister);
      }
      if (hasUserLogin) {
        output.WriteMessage(2, field_names[21], UserLogin);
      }
      if (hasCharacterDetail) {
        output.WriteMessage(3, field_names[3], CharacterDetail);
      }
      if (hasUpdateNickName) {
        output.WriteMessage(4, field_names[19], UpdateNickName);
      }
      if (hasFollowReq) {
        output.WriteMessage(8, field_names[6], FollowReq);
      }
      if (hasUnLockReq) {
        output.WriteMessage(9, field_names[18], UnLockReq);
      }
      if (hasSwitchCharacterReq) {
        output.WriteMessage(10, field_names[17], SwitchCharacterReq);
      }
      if (hasHeartBeatReq) {
        output.WriteMessage(14, field_names[8], HeartBeatReq);
      }
      if (hasMyRoomReq) {
        output.WriteMessage(18, field_names[12], MyRoomReq);
      }
      if (hasInviteReq) {
        output.WriteMessage(19, field_names[9], InviteReq);
      }
      if (hasInviteRes) {
        output.WriteMessage(20, field_names[10], InviteRes);
      }
      if (hasKickOutReq) {
        output.WriteMessage(21, field_names[11], KickOutReq);
      }
      if (hasRoomStartGameReq) {
        output.WriteMessage(22, field_names[15], RoomStartGameReq);
      }
      if (hasNickNameSearchReq) {
        output.WriteMessage(23, field_names[13], NickNameSearchReq);
      }
      if (hasAddRoomReq) {
        output.WriteMessage(24, field_names[1], AddRoomReq);
      }
      if (hasAddRoomRes) {
        output.WriteMessage(25, field_names[2], AddRoomRes);
      }
      if (hasOutRoomReq) {
        output.WriteMessage(26, field_names[14], OutRoomReq);
      }
      if (hasChatReq) {
        output.WriteMessage(27, field_names[4], ChatReq);
      }
      if (hasUserStatusQueryReq) {
        output.WriteMessage(28, field_names[23], UserStatusQueryReq);
      }
      if (hasStartMatchReq) {
        output.WriteMessage(29, field_names[16], StartMatchReq);
      }
      if (hasGameOver2Req) {
        output.WriteMessage(30, field_names[7], GameOver2Req);
      }
      if (hasAddLiveReq) {
        output.WriteMessage(31, field_names[0], AddLiveReq);
      }
      if (hasUploadBiFenReq) {
        output.WriteMessage(32, field_names[20], UploadBiFenReq);
      }
      if (hasFollowListReq) {
        output.WriteMessage(33, field_names[5], FollowListReq);
      }
      if (hasValidateOpenRoomReq) {
        output.WriteMessage(34, field_names[24], ValidateOpenRoomReq);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserRegister) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserRegister);
      }
      if (hasUserLogin) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, UserLogin);
      }
      if (hasCharacterDetail) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, CharacterDetail);
      }
      if (hasUpdateNickName) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, UpdateNickName);
      }
      if (hasFollowReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, FollowReq);
      }
      if (hasUnLockReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, UnLockReq);
      }
      if (hasSwitchCharacterReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, SwitchCharacterReq);
      }
      if (hasHeartBeatReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(14, HeartBeatReq);
      }
      if (hasMyRoomReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(18, MyRoomReq);
      }
      if (hasInviteReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(19, InviteReq);
      }
      if (hasInviteRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(20, InviteRes);
      }
      if (hasKickOutReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(21, KickOutReq);
      }
      if (hasRoomStartGameReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(22, RoomStartGameReq);
      }
      if (hasNickNameSearchReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(23, NickNameSearchReq);
      }
      if (hasAddRoomReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(24, AddRoomReq);
      }
      if (hasAddRoomRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(25, AddRoomRes);
      }
      if (hasOutRoomReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(26, OutRoomReq);
      }
      if (hasChatReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(27, ChatReq);
      }
      if (hasUserStatusQueryReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(28, UserStatusQueryReq);
      }
      if (hasStartMatchReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(29, StartMatchReq);
      }
      if (hasGameOver2Req) {
        size += pb::CodedOutputStream.ComputeMessageSize(30, GameOver2Req);
      }
      if (hasAddLiveReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(31, AddLiveReq);
      }
      if (hasUploadBiFenReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(32, UploadBiFenReq);
      }
      if (hasFollowListReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(33, FollowListReq);
      }
      if (hasValidateOpenRoomReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(34, ValidateOpenRoomReq);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetMessageRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetMessageRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetMessageRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetMessageRequest result;
      
      private NetMessageRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          NetMessageRequest original = result;
          result = new NetMessageRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetMessageRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.NetMessageRequest.Descriptor; }
      }
      
      public override NetMessageRequest DefaultInstanceForType {
        get { return global::C2GNet.NetMessageRequest.DefaultInstance; }
      }
      
      public override NetMessageRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetMessageRequest) {
          return MergeFrom((NetMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetMessageRequest other) {
        if (other == global::C2GNet.NetMessageRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserRegister) {
          MergeUserRegister(other.UserRegister);
        }
        if (other.HasUserLogin) {
          MergeUserLogin(other.UserLogin);
        }
        if (other.HasCharacterDetail) {
          MergeCharacterDetail(other.CharacterDetail);
        }
        if (other.HasUpdateNickName) {
          MergeUpdateNickName(other.UpdateNickName);
        }
        if (other.HasFollowReq) {
          MergeFollowReq(other.FollowReq);
        }
        if (other.HasUnLockReq) {
          MergeUnLockReq(other.UnLockReq);
        }
        if (other.HasSwitchCharacterReq) {
          MergeSwitchCharacterReq(other.SwitchCharacterReq);
        }
        if (other.HasHeartBeatReq) {
          MergeHeartBeatReq(other.HeartBeatReq);
        }
        if (other.HasMyRoomReq) {
          MergeMyRoomReq(other.MyRoomReq);
        }
        if (other.HasInviteReq) {
          MergeInviteReq(other.InviteReq);
        }
        if (other.HasInviteRes) {
          MergeInviteRes(other.InviteRes);
        }
        if (other.HasKickOutReq) {
          MergeKickOutReq(other.KickOutReq);
        }
        if (other.HasRoomStartGameReq) {
          MergeRoomStartGameReq(other.RoomStartGameReq);
        }
        if (other.HasNickNameSearchReq) {
          MergeNickNameSearchReq(other.NickNameSearchReq);
        }
        if (other.HasAddRoomReq) {
          MergeAddRoomReq(other.AddRoomReq);
        }
        if (other.HasAddRoomRes) {
          MergeAddRoomRes(other.AddRoomRes);
        }
        if (other.HasOutRoomReq) {
          MergeOutRoomReq(other.OutRoomReq);
        }
        if (other.HasChatReq) {
          MergeChatReq(other.ChatReq);
        }
        if (other.HasUserStatusQueryReq) {
          MergeUserStatusQueryReq(other.UserStatusQueryReq);
        }
        if (other.HasStartMatchReq) {
          MergeStartMatchReq(other.StartMatchReq);
        }
        if (other.HasGameOver2Req) {
          MergeGameOver2Req(other.GameOver2Req);
        }
        if (other.HasAddLiveReq) {
          MergeAddLiveReq(other.AddLiveReq);
        }
        if (other.HasUploadBiFenReq) {
          MergeUploadBiFenReq(other.UploadBiFenReq);
        }
        if (other.HasFollowListReq) {
          MergeFollowListReq(other.FollowListReq);
        }
        if (other.HasValidateOpenRoomReq) {
          MergeValidateOpenRoomReq(other.ValidateOpenRoomReq);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netMessageRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netMessageRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::C2GNet.UserRegisterRequest.Builder subBuilder = global::C2GNet.UserRegisterRequest.CreateBuilder();
              if (result.hasUserRegister) {
                subBuilder.MergeFrom(UserRegister);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserRegister = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::C2GNet.UserLoginRequest.Builder subBuilder = global::C2GNet.UserLoginRequest.CreateBuilder();
              if (result.hasUserLogin) {
                subBuilder.MergeFrom(UserLogin);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserLogin = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::C2GNet.CharacterDetailRequest.Builder subBuilder = global::C2GNet.CharacterDetailRequest.CreateBuilder();
              if (result.hasCharacterDetail) {
                subBuilder.MergeFrom(CharacterDetail);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CharacterDetail = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::C2GNet.UpdateNickNameRequest.Builder subBuilder = global::C2GNet.UpdateNickNameRequest.CreateBuilder();
              if (result.hasUpdateNickName) {
                subBuilder.MergeFrom(UpdateNickName);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateNickName = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::C2GNet.FollowRequest.Builder subBuilder = global::C2GNet.FollowRequest.CreateBuilder();
              if (result.hasFollowReq) {
                subBuilder.MergeFrom(FollowReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FollowReq = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::C2GNet.UnLockRequest.Builder subBuilder = global::C2GNet.UnLockRequest.CreateBuilder();
              if (result.hasUnLockReq) {
                subBuilder.MergeFrom(UnLockReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UnLockReq = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::C2GNet.SwitchCharacterRequest.Builder subBuilder = global::C2GNet.SwitchCharacterRequest.CreateBuilder();
              if (result.hasSwitchCharacterReq) {
                subBuilder.MergeFrom(SwitchCharacterReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SwitchCharacterReq = subBuilder.BuildPartial();
              break;
            }
            case 114: {
              global::C2GNet.HeartBeatRequest.Builder subBuilder = global::C2GNet.HeartBeatRequest.CreateBuilder();
              if (result.hasHeartBeatReq) {
                subBuilder.MergeFrom(HeartBeatReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              HeartBeatReq = subBuilder.BuildPartial();
              break;
            }
            case 146: {
              global::C2GNet.MyRoomRequest.Builder subBuilder = global::C2GNet.MyRoomRequest.CreateBuilder();
              if (result.hasMyRoomReq) {
                subBuilder.MergeFrom(MyRoomReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MyRoomReq = subBuilder.BuildPartial();
              break;
            }
            case 154: {
              global::C2GNet.InviteRequest.Builder subBuilder = global::C2GNet.InviteRequest.CreateBuilder();
              if (result.hasInviteReq) {
                subBuilder.MergeFrom(InviteReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InviteReq = subBuilder.BuildPartial();
              break;
            }
            case 162: {
              global::C2GNet.InviteResponse.Builder subBuilder = global::C2GNet.InviteResponse.CreateBuilder();
              if (result.hasInviteRes) {
                subBuilder.MergeFrom(InviteRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InviteRes = subBuilder.BuildPartial();
              break;
            }
            case 170: {
              global::C2GNet.KickOutRequest.Builder subBuilder = global::C2GNet.KickOutRequest.CreateBuilder();
              if (result.hasKickOutReq) {
                subBuilder.MergeFrom(KickOutReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              KickOutReq = subBuilder.BuildPartial();
              break;
            }
            case 178: {
              global::C2GNet.RoomStartGameRequest.Builder subBuilder = global::C2GNet.RoomStartGameRequest.CreateBuilder();
              if (result.hasRoomStartGameReq) {
                subBuilder.MergeFrom(RoomStartGameReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RoomStartGameReq = subBuilder.BuildPartial();
              break;
            }
            case 186: {
              global::C2GNet.NickNameSearchRequest.Builder subBuilder = global::C2GNet.NickNameSearchRequest.CreateBuilder();
              if (result.hasNickNameSearchReq) {
                subBuilder.MergeFrom(NickNameSearchReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NickNameSearchReq = subBuilder.BuildPartial();
              break;
            }
            case 194: {
              global::C2GNet.AddRoomRequest.Builder subBuilder = global::C2GNet.AddRoomRequest.CreateBuilder();
              if (result.hasAddRoomReq) {
                subBuilder.MergeFrom(AddRoomReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AddRoomReq = subBuilder.BuildPartial();
              break;
            }
            case 202: {
              global::C2GNet.AddRoomResponse.Builder subBuilder = global::C2GNet.AddRoomResponse.CreateBuilder();
              if (result.hasAddRoomRes) {
                subBuilder.MergeFrom(AddRoomRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AddRoomRes = subBuilder.BuildPartial();
              break;
            }
            case 210: {
              global::C2GNet.OutRoomRequest.Builder subBuilder = global::C2GNet.OutRoomRequest.CreateBuilder();
              if (result.hasOutRoomReq) {
                subBuilder.MergeFrom(OutRoomReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OutRoomReq = subBuilder.BuildPartial();
              break;
            }
            case 218: {
              global::C2GNet.ChatRequest.Builder subBuilder = global::C2GNet.ChatRequest.CreateBuilder();
              if (result.hasChatReq) {
                subBuilder.MergeFrom(ChatReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChatReq = subBuilder.BuildPartial();
              break;
            }
            case 226: {
              global::C2GNet.UserStatusQueryRequest.Builder subBuilder = global::C2GNet.UserStatusQueryRequest.CreateBuilder();
              if (result.hasUserStatusQueryReq) {
                subBuilder.MergeFrom(UserStatusQueryReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserStatusQueryReq = subBuilder.BuildPartial();
              break;
            }
            case 234: {
              global::C2GNet.StartMatchRequest.Builder subBuilder = global::C2GNet.StartMatchRequest.CreateBuilder();
              if (result.hasStartMatchReq) {
                subBuilder.MergeFrom(StartMatchReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StartMatchReq = subBuilder.BuildPartial();
              break;
            }
            case 242: {
              global::C2GNet.GameOver2Request.Builder subBuilder = global::C2GNet.GameOver2Request.CreateBuilder();
              if (result.hasGameOver2Req) {
                subBuilder.MergeFrom(GameOver2Req);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameOver2Req = subBuilder.BuildPartial();
              break;
            }
            case 250: {
              global::C2GNet.AddLiveRequest.Builder subBuilder = global::C2GNet.AddLiveRequest.CreateBuilder();
              if (result.hasAddLiveReq) {
                subBuilder.MergeFrom(AddLiveReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AddLiveReq = subBuilder.BuildPartial();
              break;
            }
            case 258: {
              global::C2GNet.UploadBiFenRequest.Builder subBuilder = global::C2GNet.UploadBiFenRequest.CreateBuilder();
              if (result.hasUploadBiFenReq) {
                subBuilder.MergeFrom(UploadBiFenReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UploadBiFenReq = subBuilder.BuildPartial();
              break;
            }
            case 266: {
              global::C2GNet.FollowListRequest.Builder subBuilder = global::C2GNet.FollowListRequest.CreateBuilder();
              if (result.hasFollowListReq) {
                subBuilder.MergeFrom(FollowListReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FollowListReq = subBuilder.BuildPartial();
              break;
            }
            case 274: {
              global::C2GNet.ValidateOpenRoomRequest.Builder subBuilder = global::C2GNet.ValidateOpenRoomRequest.CreateBuilder();
              if (result.hasValidateOpenRoomReq) {
                subBuilder.MergeFrom(ValidateOpenRoomReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ValidateOpenRoomReq = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserRegister {
       get { return result.hasUserRegister; }
      }
      public global::C2GNet.UserRegisterRequest UserRegister {
        get { return result.UserRegister; }
        set { SetUserRegister(value); }
      }
      public Builder SetUserRegister(global::C2GNet.UserRegisterRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserRegister = true;
        result.userRegister_ = value;
        return this;
      }
      public Builder SetUserRegister(global::C2GNet.UserRegisterRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserRegister = true;
        result.userRegister_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserRegister(global::C2GNet.UserRegisterRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserRegister &&
            result.userRegister_ != global::C2GNet.UserRegisterRequest.DefaultInstance) {
            result.userRegister_ = global::C2GNet.UserRegisterRequest.CreateBuilder(result.userRegister_).MergeFrom(value).BuildPartial();
        } else {
          result.userRegister_ = value;
        }
        result.hasUserRegister = true;
        return this;
      }
      public Builder ClearUserRegister() {
        PrepareBuilder();
        result.hasUserRegister = false;
        result.userRegister_ = null;
        return this;
      }
      
      public bool HasUserLogin {
       get { return result.hasUserLogin; }
      }
      public global::C2GNet.UserLoginRequest UserLogin {
        get { return result.UserLogin; }
        set { SetUserLogin(value); }
      }
      public Builder SetUserLogin(global::C2GNet.UserLoginRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserLogin = true;
        result.userLogin_ = value;
        return this;
      }
      public Builder SetUserLogin(global::C2GNet.UserLoginRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserLogin = true;
        result.userLogin_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserLogin(global::C2GNet.UserLoginRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserLogin &&
            result.userLogin_ != global::C2GNet.UserLoginRequest.DefaultInstance) {
            result.userLogin_ = global::C2GNet.UserLoginRequest.CreateBuilder(result.userLogin_).MergeFrom(value).BuildPartial();
        } else {
          result.userLogin_ = value;
        }
        result.hasUserLogin = true;
        return this;
      }
      public Builder ClearUserLogin() {
        PrepareBuilder();
        result.hasUserLogin = false;
        result.userLogin_ = null;
        return this;
      }
      
      public bool HasCharacterDetail {
       get { return result.hasCharacterDetail; }
      }
      public global::C2GNet.CharacterDetailRequest CharacterDetail {
        get { return result.CharacterDetail; }
        set { SetCharacterDetail(value); }
      }
      public Builder SetCharacterDetail(global::C2GNet.CharacterDetailRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCharacterDetail = true;
        result.characterDetail_ = value;
        return this;
      }
      public Builder SetCharacterDetail(global::C2GNet.CharacterDetailRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCharacterDetail = true;
        result.characterDetail_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCharacterDetail(global::C2GNet.CharacterDetailRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCharacterDetail &&
            result.characterDetail_ != global::C2GNet.CharacterDetailRequest.DefaultInstance) {
            result.characterDetail_ = global::C2GNet.CharacterDetailRequest.CreateBuilder(result.characterDetail_).MergeFrom(value).BuildPartial();
        } else {
          result.characterDetail_ = value;
        }
        result.hasCharacterDetail = true;
        return this;
      }
      public Builder ClearCharacterDetail() {
        PrepareBuilder();
        result.hasCharacterDetail = false;
        result.characterDetail_ = null;
        return this;
      }
      
      public bool HasUpdateNickName {
       get { return result.hasUpdateNickName; }
      }
      public global::C2GNet.UpdateNickNameRequest UpdateNickName {
        get { return result.UpdateNickName; }
        set { SetUpdateNickName(value); }
      }
      public Builder SetUpdateNickName(global::C2GNet.UpdateNickNameRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateNickName = true;
        result.updateNickName_ = value;
        return this;
      }
      public Builder SetUpdateNickName(global::C2GNet.UpdateNickNameRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateNickName = true;
        result.updateNickName_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateNickName(global::C2GNet.UpdateNickNameRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateNickName &&
            result.updateNickName_ != global::C2GNet.UpdateNickNameRequest.DefaultInstance) {
            result.updateNickName_ = global::C2GNet.UpdateNickNameRequest.CreateBuilder(result.updateNickName_).MergeFrom(value).BuildPartial();
        } else {
          result.updateNickName_ = value;
        }
        result.hasUpdateNickName = true;
        return this;
      }
      public Builder ClearUpdateNickName() {
        PrepareBuilder();
        result.hasUpdateNickName = false;
        result.updateNickName_ = null;
        return this;
      }
      
      public bool HasFollowReq {
       get { return result.hasFollowReq; }
      }
      public global::C2GNet.FollowRequest FollowReq {
        get { return result.FollowReq; }
        set { SetFollowReq(value); }
      }
      public Builder SetFollowReq(global::C2GNet.FollowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFollowReq = true;
        result.followReq_ = value;
        return this;
      }
      public Builder SetFollowReq(global::C2GNet.FollowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFollowReq = true;
        result.followReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFollowReq(global::C2GNet.FollowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFollowReq &&
            result.followReq_ != global::C2GNet.FollowRequest.DefaultInstance) {
            result.followReq_ = global::C2GNet.FollowRequest.CreateBuilder(result.followReq_).MergeFrom(value).BuildPartial();
        } else {
          result.followReq_ = value;
        }
        result.hasFollowReq = true;
        return this;
      }
      public Builder ClearFollowReq() {
        PrepareBuilder();
        result.hasFollowReq = false;
        result.followReq_ = null;
        return this;
      }
      
      public bool HasUnLockReq {
       get { return result.hasUnLockReq; }
      }
      public global::C2GNet.UnLockRequest UnLockReq {
        get { return result.UnLockReq; }
        set { SetUnLockReq(value); }
      }
      public Builder SetUnLockReq(global::C2GNet.UnLockRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUnLockReq = true;
        result.unLockReq_ = value;
        return this;
      }
      public Builder SetUnLockReq(global::C2GNet.UnLockRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUnLockReq = true;
        result.unLockReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUnLockReq(global::C2GNet.UnLockRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUnLockReq &&
            result.unLockReq_ != global::C2GNet.UnLockRequest.DefaultInstance) {
            result.unLockReq_ = global::C2GNet.UnLockRequest.CreateBuilder(result.unLockReq_).MergeFrom(value).BuildPartial();
        } else {
          result.unLockReq_ = value;
        }
        result.hasUnLockReq = true;
        return this;
      }
      public Builder ClearUnLockReq() {
        PrepareBuilder();
        result.hasUnLockReq = false;
        result.unLockReq_ = null;
        return this;
      }
      
      public bool HasSwitchCharacterReq {
       get { return result.hasSwitchCharacterReq; }
      }
      public global::C2GNet.SwitchCharacterRequest SwitchCharacterReq {
        get { return result.SwitchCharacterReq; }
        set { SetSwitchCharacterReq(value); }
      }
      public Builder SetSwitchCharacterReq(global::C2GNet.SwitchCharacterRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSwitchCharacterReq = true;
        result.switchCharacterReq_ = value;
        return this;
      }
      public Builder SetSwitchCharacterReq(global::C2GNet.SwitchCharacterRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSwitchCharacterReq = true;
        result.switchCharacterReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSwitchCharacterReq(global::C2GNet.SwitchCharacterRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSwitchCharacterReq &&
            result.switchCharacterReq_ != global::C2GNet.SwitchCharacterRequest.DefaultInstance) {
            result.switchCharacterReq_ = global::C2GNet.SwitchCharacterRequest.CreateBuilder(result.switchCharacterReq_).MergeFrom(value).BuildPartial();
        } else {
          result.switchCharacterReq_ = value;
        }
        result.hasSwitchCharacterReq = true;
        return this;
      }
      public Builder ClearSwitchCharacterReq() {
        PrepareBuilder();
        result.hasSwitchCharacterReq = false;
        result.switchCharacterReq_ = null;
        return this;
      }
      
      public bool HasHeartBeatReq {
       get { return result.hasHeartBeatReq; }
      }
      public global::C2GNet.HeartBeatRequest HeartBeatReq {
        get { return result.HeartBeatReq; }
        set { SetHeartBeatReq(value); }
      }
      public Builder SetHeartBeatReq(global::C2GNet.HeartBeatRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHeartBeatReq = true;
        result.heartBeatReq_ = value;
        return this;
      }
      public Builder SetHeartBeatReq(global::C2GNet.HeartBeatRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHeartBeatReq = true;
        result.heartBeatReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHeartBeatReq(global::C2GNet.HeartBeatRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHeartBeatReq &&
            result.heartBeatReq_ != global::C2GNet.HeartBeatRequest.DefaultInstance) {
            result.heartBeatReq_ = global::C2GNet.HeartBeatRequest.CreateBuilder(result.heartBeatReq_).MergeFrom(value).BuildPartial();
        } else {
          result.heartBeatReq_ = value;
        }
        result.hasHeartBeatReq = true;
        return this;
      }
      public Builder ClearHeartBeatReq() {
        PrepareBuilder();
        result.hasHeartBeatReq = false;
        result.heartBeatReq_ = null;
        return this;
      }
      
      public bool HasMyRoomReq {
       get { return result.hasMyRoomReq; }
      }
      public global::C2GNet.MyRoomRequest MyRoomReq {
        get { return result.MyRoomReq; }
        set { SetMyRoomReq(value); }
      }
      public Builder SetMyRoomReq(global::C2GNet.MyRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMyRoomReq = true;
        result.myRoomReq_ = value;
        return this;
      }
      public Builder SetMyRoomReq(global::C2GNet.MyRoomRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMyRoomReq = true;
        result.myRoomReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMyRoomReq(global::C2GNet.MyRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMyRoomReq &&
            result.myRoomReq_ != global::C2GNet.MyRoomRequest.DefaultInstance) {
            result.myRoomReq_ = global::C2GNet.MyRoomRequest.CreateBuilder(result.myRoomReq_).MergeFrom(value).BuildPartial();
        } else {
          result.myRoomReq_ = value;
        }
        result.hasMyRoomReq = true;
        return this;
      }
      public Builder ClearMyRoomReq() {
        PrepareBuilder();
        result.hasMyRoomReq = false;
        result.myRoomReq_ = null;
        return this;
      }
      
      public bool HasInviteReq {
       get { return result.hasInviteReq; }
      }
      public global::C2GNet.InviteRequest InviteReq {
        get { return result.InviteReq; }
        set { SetInviteReq(value); }
      }
      public Builder SetInviteReq(global::C2GNet.InviteRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviteReq = true;
        result.inviteReq_ = value;
        return this;
      }
      public Builder SetInviteReq(global::C2GNet.InviteRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInviteReq = true;
        result.inviteReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInviteReq(global::C2GNet.InviteRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInviteReq &&
            result.inviteReq_ != global::C2GNet.InviteRequest.DefaultInstance) {
            result.inviteReq_ = global::C2GNet.InviteRequest.CreateBuilder(result.inviteReq_).MergeFrom(value).BuildPartial();
        } else {
          result.inviteReq_ = value;
        }
        result.hasInviteReq = true;
        return this;
      }
      public Builder ClearInviteReq() {
        PrepareBuilder();
        result.hasInviteReq = false;
        result.inviteReq_ = null;
        return this;
      }
      
      public bool HasInviteRes {
       get { return result.hasInviteRes; }
      }
      public global::C2GNet.InviteResponse InviteRes {
        get { return result.InviteRes; }
        set { SetInviteRes(value); }
      }
      public Builder SetInviteRes(global::C2GNet.InviteResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviteRes = true;
        result.inviteRes_ = value;
        return this;
      }
      public Builder SetInviteRes(global::C2GNet.InviteResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInviteRes = true;
        result.inviteRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInviteRes(global::C2GNet.InviteResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInviteRes &&
            result.inviteRes_ != global::C2GNet.InviteResponse.DefaultInstance) {
            result.inviteRes_ = global::C2GNet.InviteResponse.CreateBuilder(result.inviteRes_).MergeFrom(value).BuildPartial();
        } else {
          result.inviteRes_ = value;
        }
        result.hasInviteRes = true;
        return this;
      }
      public Builder ClearInviteRes() {
        PrepareBuilder();
        result.hasInviteRes = false;
        result.inviteRes_ = null;
        return this;
      }
      
      public bool HasKickOutReq {
       get { return result.hasKickOutReq; }
      }
      public global::C2GNet.KickOutRequest KickOutReq {
        get { return result.KickOutReq; }
        set { SetKickOutReq(value); }
      }
      public Builder SetKickOutReq(global::C2GNet.KickOutRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKickOutReq = true;
        result.kickOutReq_ = value;
        return this;
      }
      public Builder SetKickOutReq(global::C2GNet.KickOutRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasKickOutReq = true;
        result.kickOutReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeKickOutReq(global::C2GNet.KickOutRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasKickOutReq &&
            result.kickOutReq_ != global::C2GNet.KickOutRequest.DefaultInstance) {
            result.kickOutReq_ = global::C2GNet.KickOutRequest.CreateBuilder(result.kickOutReq_).MergeFrom(value).BuildPartial();
        } else {
          result.kickOutReq_ = value;
        }
        result.hasKickOutReq = true;
        return this;
      }
      public Builder ClearKickOutReq() {
        PrepareBuilder();
        result.hasKickOutReq = false;
        result.kickOutReq_ = null;
        return this;
      }
      
      public bool HasRoomStartGameReq {
       get { return result.hasRoomStartGameReq; }
      }
      public global::C2GNet.RoomStartGameRequest RoomStartGameReq {
        get { return result.RoomStartGameReq; }
        set { SetRoomStartGameReq(value); }
      }
      public Builder SetRoomStartGameReq(global::C2GNet.RoomStartGameRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoomStartGameReq = true;
        result.roomStartGameReq_ = value;
        return this;
      }
      public Builder SetRoomStartGameReq(global::C2GNet.RoomStartGameRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRoomStartGameReq = true;
        result.roomStartGameReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRoomStartGameReq(global::C2GNet.RoomStartGameRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRoomStartGameReq &&
            result.roomStartGameReq_ != global::C2GNet.RoomStartGameRequest.DefaultInstance) {
            result.roomStartGameReq_ = global::C2GNet.RoomStartGameRequest.CreateBuilder(result.roomStartGameReq_).MergeFrom(value).BuildPartial();
        } else {
          result.roomStartGameReq_ = value;
        }
        result.hasRoomStartGameReq = true;
        return this;
      }
      public Builder ClearRoomStartGameReq() {
        PrepareBuilder();
        result.hasRoomStartGameReq = false;
        result.roomStartGameReq_ = null;
        return this;
      }
      
      public bool HasNickNameSearchReq {
       get { return result.hasNickNameSearchReq; }
      }
      public global::C2GNet.NickNameSearchRequest NickNameSearchReq {
        get { return result.NickNameSearchReq; }
        set { SetNickNameSearchReq(value); }
      }
      public Builder SetNickNameSearchReq(global::C2GNet.NickNameSearchRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickNameSearchReq = true;
        result.nickNameSearchReq_ = value;
        return this;
      }
      public Builder SetNickNameSearchReq(global::C2GNet.NickNameSearchRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNickNameSearchReq = true;
        result.nickNameSearchReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNickNameSearchReq(global::C2GNet.NickNameSearchRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNickNameSearchReq &&
            result.nickNameSearchReq_ != global::C2GNet.NickNameSearchRequest.DefaultInstance) {
            result.nickNameSearchReq_ = global::C2GNet.NickNameSearchRequest.CreateBuilder(result.nickNameSearchReq_).MergeFrom(value).BuildPartial();
        } else {
          result.nickNameSearchReq_ = value;
        }
        result.hasNickNameSearchReq = true;
        return this;
      }
      public Builder ClearNickNameSearchReq() {
        PrepareBuilder();
        result.hasNickNameSearchReq = false;
        result.nickNameSearchReq_ = null;
        return this;
      }
      
      public bool HasAddRoomReq {
       get { return result.hasAddRoomReq; }
      }
      public global::C2GNet.AddRoomRequest AddRoomReq {
        get { return result.AddRoomReq; }
        set { SetAddRoomReq(value); }
      }
      public Builder SetAddRoomReq(global::C2GNet.AddRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddRoomReq = true;
        result.addRoomReq_ = value;
        return this;
      }
      public Builder SetAddRoomReq(global::C2GNet.AddRoomRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAddRoomReq = true;
        result.addRoomReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAddRoomReq(global::C2GNet.AddRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAddRoomReq &&
            result.addRoomReq_ != global::C2GNet.AddRoomRequest.DefaultInstance) {
            result.addRoomReq_ = global::C2GNet.AddRoomRequest.CreateBuilder(result.addRoomReq_).MergeFrom(value).BuildPartial();
        } else {
          result.addRoomReq_ = value;
        }
        result.hasAddRoomReq = true;
        return this;
      }
      public Builder ClearAddRoomReq() {
        PrepareBuilder();
        result.hasAddRoomReq = false;
        result.addRoomReq_ = null;
        return this;
      }
      
      public bool HasAddRoomRes {
       get { return result.hasAddRoomRes; }
      }
      public global::C2GNet.AddRoomResponse AddRoomRes {
        get { return result.AddRoomRes; }
        set { SetAddRoomRes(value); }
      }
      public Builder SetAddRoomRes(global::C2GNet.AddRoomResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddRoomRes = true;
        result.addRoomRes_ = value;
        return this;
      }
      public Builder SetAddRoomRes(global::C2GNet.AddRoomResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAddRoomRes = true;
        result.addRoomRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAddRoomRes(global::C2GNet.AddRoomResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAddRoomRes &&
            result.addRoomRes_ != global::C2GNet.AddRoomResponse.DefaultInstance) {
            result.addRoomRes_ = global::C2GNet.AddRoomResponse.CreateBuilder(result.addRoomRes_).MergeFrom(value).BuildPartial();
        } else {
          result.addRoomRes_ = value;
        }
        result.hasAddRoomRes = true;
        return this;
      }
      public Builder ClearAddRoomRes() {
        PrepareBuilder();
        result.hasAddRoomRes = false;
        result.addRoomRes_ = null;
        return this;
      }
      
      public bool HasOutRoomReq {
       get { return result.hasOutRoomReq; }
      }
      public global::C2GNet.OutRoomRequest OutRoomReq {
        get { return result.OutRoomReq; }
        set { SetOutRoomReq(value); }
      }
      public Builder SetOutRoomReq(global::C2GNet.OutRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOutRoomReq = true;
        result.outRoomReq_ = value;
        return this;
      }
      public Builder SetOutRoomReq(global::C2GNet.OutRoomRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOutRoomReq = true;
        result.outRoomReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOutRoomReq(global::C2GNet.OutRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOutRoomReq &&
            result.outRoomReq_ != global::C2GNet.OutRoomRequest.DefaultInstance) {
            result.outRoomReq_ = global::C2GNet.OutRoomRequest.CreateBuilder(result.outRoomReq_).MergeFrom(value).BuildPartial();
        } else {
          result.outRoomReq_ = value;
        }
        result.hasOutRoomReq = true;
        return this;
      }
      public Builder ClearOutRoomReq() {
        PrepareBuilder();
        result.hasOutRoomReq = false;
        result.outRoomReq_ = null;
        return this;
      }
      
      public bool HasChatReq {
       get { return result.hasChatReq; }
      }
      public global::C2GNet.ChatRequest ChatReq {
        get { return result.ChatReq; }
        set { SetChatReq(value); }
      }
      public Builder SetChatReq(global::C2GNet.ChatRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChatReq = true;
        result.chatReq_ = value;
        return this;
      }
      public Builder SetChatReq(global::C2GNet.ChatRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChatReq = true;
        result.chatReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChatReq(global::C2GNet.ChatRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChatReq &&
            result.chatReq_ != global::C2GNet.ChatRequest.DefaultInstance) {
            result.chatReq_ = global::C2GNet.ChatRequest.CreateBuilder(result.chatReq_).MergeFrom(value).BuildPartial();
        } else {
          result.chatReq_ = value;
        }
        result.hasChatReq = true;
        return this;
      }
      public Builder ClearChatReq() {
        PrepareBuilder();
        result.hasChatReq = false;
        result.chatReq_ = null;
        return this;
      }
      
      public bool HasUserStatusQueryReq {
       get { return result.hasUserStatusQueryReq; }
      }
      public global::C2GNet.UserStatusQueryRequest UserStatusQueryReq {
        get { return result.UserStatusQueryReq; }
        set { SetUserStatusQueryReq(value); }
      }
      public Builder SetUserStatusQueryReq(global::C2GNet.UserStatusQueryRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserStatusQueryReq = true;
        result.userStatusQueryReq_ = value;
        return this;
      }
      public Builder SetUserStatusQueryReq(global::C2GNet.UserStatusQueryRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserStatusQueryReq = true;
        result.userStatusQueryReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserStatusQueryReq(global::C2GNet.UserStatusQueryRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserStatusQueryReq &&
            result.userStatusQueryReq_ != global::C2GNet.UserStatusQueryRequest.DefaultInstance) {
            result.userStatusQueryReq_ = global::C2GNet.UserStatusQueryRequest.CreateBuilder(result.userStatusQueryReq_).MergeFrom(value).BuildPartial();
        } else {
          result.userStatusQueryReq_ = value;
        }
        result.hasUserStatusQueryReq = true;
        return this;
      }
      public Builder ClearUserStatusQueryReq() {
        PrepareBuilder();
        result.hasUserStatusQueryReq = false;
        result.userStatusQueryReq_ = null;
        return this;
      }
      
      public bool HasStartMatchReq {
       get { return result.hasStartMatchReq; }
      }
      public global::C2GNet.StartMatchRequest StartMatchReq {
        get { return result.StartMatchReq; }
        set { SetStartMatchReq(value); }
      }
      public Builder SetStartMatchReq(global::C2GNet.StartMatchRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStartMatchReq = true;
        result.startMatchReq_ = value;
        return this;
      }
      public Builder SetStartMatchReq(global::C2GNet.StartMatchRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStartMatchReq = true;
        result.startMatchReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStartMatchReq(global::C2GNet.StartMatchRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStartMatchReq &&
            result.startMatchReq_ != global::C2GNet.StartMatchRequest.DefaultInstance) {
            result.startMatchReq_ = global::C2GNet.StartMatchRequest.CreateBuilder(result.startMatchReq_).MergeFrom(value).BuildPartial();
        } else {
          result.startMatchReq_ = value;
        }
        result.hasStartMatchReq = true;
        return this;
      }
      public Builder ClearStartMatchReq() {
        PrepareBuilder();
        result.hasStartMatchReq = false;
        result.startMatchReq_ = null;
        return this;
      }
      
      public bool HasGameOver2Req {
       get { return result.hasGameOver2Req; }
      }
      public global::C2GNet.GameOver2Request GameOver2Req {
        get { return result.GameOver2Req; }
        set { SetGameOver2Req(value); }
      }
      public Builder SetGameOver2Req(global::C2GNet.GameOver2Request value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameOver2Req = true;
        result.gameOver2Req_ = value;
        return this;
      }
      public Builder SetGameOver2Req(global::C2GNet.GameOver2Request.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameOver2Req = true;
        result.gameOver2Req_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameOver2Req(global::C2GNet.GameOver2Request value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameOver2Req &&
            result.gameOver2Req_ != global::C2GNet.GameOver2Request.DefaultInstance) {
            result.gameOver2Req_ = global::C2GNet.GameOver2Request.CreateBuilder(result.gameOver2Req_).MergeFrom(value).BuildPartial();
        } else {
          result.gameOver2Req_ = value;
        }
        result.hasGameOver2Req = true;
        return this;
      }
      public Builder ClearGameOver2Req() {
        PrepareBuilder();
        result.hasGameOver2Req = false;
        result.gameOver2Req_ = null;
        return this;
      }
      
      public bool HasAddLiveReq {
       get { return result.hasAddLiveReq; }
      }
      public global::C2GNet.AddLiveRequest AddLiveReq {
        get { return result.AddLiveReq; }
        set { SetAddLiveReq(value); }
      }
      public Builder SetAddLiveReq(global::C2GNet.AddLiveRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddLiveReq = true;
        result.addLiveReq_ = value;
        return this;
      }
      public Builder SetAddLiveReq(global::C2GNet.AddLiveRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAddLiveReq = true;
        result.addLiveReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAddLiveReq(global::C2GNet.AddLiveRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAddLiveReq &&
            result.addLiveReq_ != global::C2GNet.AddLiveRequest.DefaultInstance) {
            result.addLiveReq_ = global::C2GNet.AddLiveRequest.CreateBuilder(result.addLiveReq_).MergeFrom(value).BuildPartial();
        } else {
          result.addLiveReq_ = value;
        }
        result.hasAddLiveReq = true;
        return this;
      }
      public Builder ClearAddLiveReq() {
        PrepareBuilder();
        result.hasAddLiveReq = false;
        result.addLiveReq_ = null;
        return this;
      }
      
      public bool HasUploadBiFenReq {
       get { return result.hasUploadBiFenReq; }
      }
      public global::C2GNet.UploadBiFenRequest UploadBiFenReq {
        get { return result.UploadBiFenReq; }
        set { SetUploadBiFenReq(value); }
      }
      public Builder SetUploadBiFenReq(global::C2GNet.UploadBiFenRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUploadBiFenReq = true;
        result.uploadBiFenReq_ = value;
        return this;
      }
      public Builder SetUploadBiFenReq(global::C2GNet.UploadBiFenRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUploadBiFenReq = true;
        result.uploadBiFenReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUploadBiFenReq(global::C2GNet.UploadBiFenRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUploadBiFenReq &&
            result.uploadBiFenReq_ != global::C2GNet.UploadBiFenRequest.DefaultInstance) {
            result.uploadBiFenReq_ = global::C2GNet.UploadBiFenRequest.CreateBuilder(result.uploadBiFenReq_).MergeFrom(value).BuildPartial();
        } else {
          result.uploadBiFenReq_ = value;
        }
        result.hasUploadBiFenReq = true;
        return this;
      }
      public Builder ClearUploadBiFenReq() {
        PrepareBuilder();
        result.hasUploadBiFenReq = false;
        result.uploadBiFenReq_ = null;
        return this;
      }
      
      public bool HasFollowListReq {
       get { return result.hasFollowListReq; }
      }
      public global::C2GNet.FollowListRequest FollowListReq {
        get { return result.FollowListReq; }
        set { SetFollowListReq(value); }
      }
      public Builder SetFollowListReq(global::C2GNet.FollowListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFollowListReq = true;
        result.followListReq_ = value;
        return this;
      }
      public Builder SetFollowListReq(global::C2GNet.FollowListRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFollowListReq = true;
        result.followListReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFollowListReq(global::C2GNet.FollowListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFollowListReq &&
            result.followListReq_ != global::C2GNet.FollowListRequest.DefaultInstance) {
            result.followListReq_ = global::C2GNet.FollowListRequest.CreateBuilder(result.followListReq_).MergeFrom(value).BuildPartial();
        } else {
          result.followListReq_ = value;
        }
        result.hasFollowListReq = true;
        return this;
      }
      public Builder ClearFollowListReq() {
        PrepareBuilder();
        result.hasFollowListReq = false;
        result.followListReq_ = null;
        return this;
      }
      
      public bool HasValidateOpenRoomReq {
       get { return result.hasValidateOpenRoomReq; }
      }
      public global::C2GNet.ValidateOpenRoomRequest ValidateOpenRoomReq {
        get { return result.ValidateOpenRoomReq; }
        set { SetValidateOpenRoomReq(value); }
      }
      public Builder SetValidateOpenRoomReq(global::C2GNet.ValidateOpenRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValidateOpenRoomReq = true;
        result.validateOpenRoomReq_ = value;
        return this;
      }
      public Builder SetValidateOpenRoomReq(global::C2GNet.ValidateOpenRoomRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValidateOpenRoomReq = true;
        result.validateOpenRoomReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValidateOpenRoomReq(global::C2GNet.ValidateOpenRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValidateOpenRoomReq &&
            result.validateOpenRoomReq_ != global::C2GNet.ValidateOpenRoomRequest.DefaultInstance) {
            result.validateOpenRoomReq_ = global::C2GNet.ValidateOpenRoomRequest.CreateBuilder(result.validateOpenRoomReq_).MergeFrom(value).BuildPartial();
        } else {
          result.validateOpenRoomReq_ = value;
        }
        result.hasValidateOpenRoomReq = true;
        return this;
      }
      public Builder ClearValidateOpenRoomReq() {
        PrepareBuilder();
        result.hasValidateOpenRoomReq = false;
        result.validateOpenRoomReq_ = null;
        return this;
      }
    }
    static NetMessageRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetMessageResponse : pb::GeneratedMessage<NetMessageResponse, NetMessageResponse.Builder> {
    private NetMessageResponse() { }
    private static readonly NetMessageResponse defaultInstance = new NetMessageResponse().MakeReadOnly();
    private static readonly string[] _netMessageResponseFieldNames = new string[] { "addLiveRes", "addRoomReq", "addRoomRes", "characterDetail", "chatRes", "followListRes", "followRes", "heartBeatRes", "inviteReq", "inviteRes", "kickOutRes", "matchRes", "myRoomRes", "nickNameSearchRes", "outRoomRes", "roomStartGameRes", "startMatchRes", "statusNotify", "switchCharacterRes", "tipsRes", "unLockRes", "updateNickName", "userLogin", "userRegister", "userStatusChangeRes", "userStatusQueryRes", "validateOpenRoomRes" };
    private static readonly uint[] _netMessageResponseFieldTags = new uint[] { 282, 226, 234, 26, 250, 218, 66, 130, 178, 186, 194, 274, 170, 210, 242, 202, 266, 802, 90, 162, 82, 34, 18, 10, 106, 258, 290 };
    public static NetMessageResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetMessageResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetMessageResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NetMessageResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetMessageResponse, NetMessageResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NetMessageResponse__FieldAccessorTable; }
    }
    
    public const int UserRegisterFieldNumber = 1;
    private bool hasUserRegister;
    private global::C2GNet.UserRegisterResponse userRegister_;
    public bool HasUserRegister {
      get { return hasUserRegister; }
    }
    public global::C2GNet.UserRegisterResponse UserRegister {
      get { return userRegister_ ?? global::C2GNet.UserRegisterResponse.DefaultInstance; }
    }
    
    public const int UserLoginFieldNumber = 2;
    private bool hasUserLogin;
    private global::C2GNet.UserLoginResponse userLogin_;
    public bool HasUserLogin {
      get { return hasUserLogin; }
    }
    public global::C2GNet.UserLoginResponse UserLogin {
      get { return userLogin_ ?? global::C2GNet.UserLoginResponse.DefaultInstance; }
    }
    
    public const int CharacterDetailFieldNumber = 3;
    private bool hasCharacterDetail;
    private global::C2GNet.CharacterDetailResponse characterDetail_;
    public bool HasCharacterDetail {
      get { return hasCharacterDetail; }
    }
    public global::C2GNet.CharacterDetailResponse CharacterDetail {
      get { return characterDetail_ ?? global::C2GNet.CharacterDetailResponse.DefaultInstance; }
    }
    
    public const int UpdateNickNameFieldNumber = 4;
    private bool hasUpdateNickName;
    private global::C2GNet.UpdateNickNameResponse updateNickName_;
    public bool HasUpdateNickName {
      get { return hasUpdateNickName; }
    }
    public global::C2GNet.UpdateNickNameResponse UpdateNickName {
      get { return updateNickName_ ?? global::C2GNet.UpdateNickNameResponse.DefaultInstance; }
    }
    
    public const int FollowResFieldNumber = 8;
    private bool hasFollowRes;
    private global::C2GNet.FollowResponse followRes_;
    public bool HasFollowRes {
      get { return hasFollowRes; }
    }
    public global::C2GNet.FollowResponse FollowRes {
      get { return followRes_ ?? global::C2GNet.FollowResponse.DefaultInstance; }
    }
    
    public const int UnLockResFieldNumber = 10;
    private bool hasUnLockRes;
    private global::C2GNet.UnLockResponse unLockRes_;
    public bool HasUnLockRes {
      get { return hasUnLockRes; }
    }
    public global::C2GNet.UnLockResponse UnLockRes {
      get { return unLockRes_ ?? global::C2GNet.UnLockResponse.DefaultInstance; }
    }
    
    public const int SwitchCharacterResFieldNumber = 11;
    private bool hasSwitchCharacterRes;
    private global::C2GNet.SwitchCharacterResponse switchCharacterRes_;
    public bool HasSwitchCharacterRes {
      get { return hasSwitchCharacterRes; }
    }
    public global::C2GNet.SwitchCharacterResponse SwitchCharacterRes {
      get { return switchCharacterRes_ ?? global::C2GNet.SwitchCharacterResponse.DefaultInstance; }
    }
    
    public const int UserStatusChangeResFieldNumber = 13;
    private bool hasUserStatusChangeRes;
    private global::C2GNet.UserStatusChangeResponse userStatusChangeRes_;
    public bool HasUserStatusChangeRes {
      get { return hasUserStatusChangeRes; }
    }
    public global::C2GNet.UserStatusChangeResponse UserStatusChangeRes {
      get { return userStatusChangeRes_ ?? global::C2GNet.UserStatusChangeResponse.DefaultInstance; }
    }
    
    public const int HeartBeatResFieldNumber = 16;
    private bool hasHeartBeatRes;
    private global::C2GNet.HeartBeatResponse heartBeatRes_;
    public bool HasHeartBeatRes {
      get { return hasHeartBeatRes; }
    }
    public global::C2GNet.HeartBeatResponse HeartBeatRes {
      get { return heartBeatRes_ ?? global::C2GNet.HeartBeatResponse.DefaultInstance; }
    }
    
    public const int TipsResFieldNumber = 20;
    private bool hasTipsRes;
    private global::C2GNet.TipsResponse tipsRes_;
    public bool HasTipsRes {
      get { return hasTipsRes; }
    }
    public global::C2GNet.TipsResponse TipsRes {
      get { return tipsRes_ ?? global::C2GNet.TipsResponse.DefaultInstance; }
    }
    
    public const int MyRoomResFieldNumber = 21;
    private bool hasMyRoomRes;
    private global::C2GNet.MyRoomResponse myRoomRes_;
    public bool HasMyRoomRes {
      get { return hasMyRoomRes; }
    }
    public global::C2GNet.MyRoomResponse MyRoomRes {
      get { return myRoomRes_ ?? global::C2GNet.MyRoomResponse.DefaultInstance; }
    }
    
    public const int InviteReqFieldNumber = 22;
    private bool hasInviteReq;
    private global::C2GNet.InviteRequest inviteReq_;
    public bool HasInviteReq {
      get { return hasInviteReq; }
    }
    public global::C2GNet.InviteRequest InviteReq {
      get { return inviteReq_ ?? global::C2GNet.InviteRequest.DefaultInstance; }
    }
    
    public const int InviteResFieldNumber = 23;
    private bool hasInviteRes;
    private global::C2GNet.InviteResponse inviteRes_;
    public bool HasInviteRes {
      get { return hasInviteRes; }
    }
    public global::C2GNet.InviteResponse InviteRes {
      get { return inviteRes_ ?? global::C2GNet.InviteResponse.DefaultInstance; }
    }
    
    public const int KickOutResFieldNumber = 24;
    private bool hasKickOutRes;
    private global::C2GNet.KickOutResponse kickOutRes_;
    public bool HasKickOutRes {
      get { return hasKickOutRes; }
    }
    public global::C2GNet.KickOutResponse KickOutRes {
      get { return kickOutRes_ ?? global::C2GNet.KickOutResponse.DefaultInstance; }
    }
    
    public const int RoomStartGameResFieldNumber = 25;
    private bool hasRoomStartGameRes;
    private global::C2GNet.RoomStartGameResponse roomStartGameRes_;
    public bool HasRoomStartGameRes {
      get { return hasRoomStartGameRes; }
    }
    public global::C2GNet.RoomStartGameResponse RoomStartGameRes {
      get { return roomStartGameRes_ ?? global::C2GNet.RoomStartGameResponse.DefaultInstance; }
    }
    
    public const int NickNameSearchResFieldNumber = 26;
    private bool hasNickNameSearchRes;
    private global::C2GNet.NickNameSearchResponse nickNameSearchRes_;
    public bool HasNickNameSearchRes {
      get { return hasNickNameSearchRes; }
    }
    public global::C2GNet.NickNameSearchResponse NickNameSearchRes {
      get { return nickNameSearchRes_ ?? global::C2GNet.NickNameSearchResponse.DefaultInstance; }
    }
    
    public const int FollowListResFieldNumber = 27;
    private bool hasFollowListRes;
    private global::C2GNet.FollowListResponse followListRes_;
    public bool HasFollowListRes {
      get { return hasFollowListRes; }
    }
    public global::C2GNet.FollowListResponse FollowListRes {
      get { return followListRes_ ?? global::C2GNet.FollowListResponse.DefaultInstance; }
    }
    
    public const int AddRoomReqFieldNumber = 28;
    private bool hasAddRoomReq;
    private global::C2GNet.AddRoomRequest addRoomReq_;
    public bool HasAddRoomReq {
      get { return hasAddRoomReq; }
    }
    public global::C2GNet.AddRoomRequest AddRoomReq {
      get { return addRoomReq_ ?? global::C2GNet.AddRoomRequest.DefaultInstance; }
    }
    
    public const int AddRoomResFieldNumber = 29;
    private bool hasAddRoomRes;
    private global::C2GNet.AddRoomResponse addRoomRes_;
    public bool HasAddRoomRes {
      get { return hasAddRoomRes; }
    }
    public global::C2GNet.AddRoomResponse AddRoomRes {
      get { return addRoomRes_ ?? global::C2GNet.AddRoomResponse.DefaultInstance; }
    }
    
    public const int OutRoomResFieldNumber = 30;
    private bool hasOutRoomRes;
    private global::C2GNet.OutRoomResponse outRoomRes_;
    public bool HasOutRoomRes {
      get { return hasOutRoomRes; }
    }
    public global::C2GNet.OutRoomResponse OutRoomRes {
      get { return outRoomRes_ ?? global::C2GNet.OutRoomResponse.DefaultInstance; }
    }
    
    public const int ChatResFieldNumber = 31;
    private bool hasChatRes;
    private global::C2GNet.ChatResponse chatRes_;
    public bool HasChatRes {
      get { return hasChatRes; }
    }
    public global::C2GNet.ChatResponse ChatRes {
      get { return chatRes_ ?? global::C2GNet.ChatResponse.DefaultInstance; }
    }
    
    public const int UserStatusQueryResFieldNumber = 32;
    private bool hasUserStatusQueryRes;
    private global::C2GNet.UserStatusQueryResponse userStatusQueryRes_;
    public bool HasUserStatusQueryRes {
      get { return hasUserStatusQueryRes; }
    }
    public global::C2GNet.UserStatusQueryResponse UserStatusQueryRes {
      get { return userStatusQueryRes_ ?? global::C2GNet.UserStatusQueryResponse.DefaultInstance; }
    }
    
    public const int StartMatchResFieldNumber = 33;
    private bool hasStartMatchRes;
    private global::C2GNet.StartMatchResponse startMatchRes_;
    public bool HasStartMatchRes {
      get { return hasStartMatchRes; }
    }
    public global::C2GNet.StartMatchResponse StartMatchRes {
      get { return startMatchRes_ ?? global::C2GNet.StartMatchResponse.DefaultInstance; }
    }
    
    public const int MatchResFieldNumber = 34;
    private bool hasMatchRes;
    private global::C2GNet.MatchResponse matchRes_;
    public bool HasMatchRes {
      get { return hasMatchRes; }
    }
    public global::C2GNet.MatchResponse MatchRes {
      get { return matchRes_ ?? global::C2GNet.MatchResponse.DefaultInstance; }
    }
    
    public const int AddLiveResFieldNumber = 35;
    private bool hasAddLiveRes;
    private global::C2GNet.AddLiveResponse addLiveRes_;
    public bool HasAddLiveRes {
      get { return hasAddLiveRes; }
    }
    public global::C2GNet.AddLiveResponse AddLiveRes {
      get { return addLiveRes_ ?? global::C2GNet.AddLiveResponse.DefaultInstance; }
    }
    
    public const int ValidateOpenRoomResFieldNumber = 36;
    private bool hasValidateOpenRoomRes;
    private global::C2GNet.ValidateOpenRoomResponse validateOpenRoomRes_;
    public bool HasValidateOpenRoomRes {
      get { return hasValidateOpenRoomRes; }
    }
    public global::C2GNet.ValidateOpenRoomResponse ValidateOpenRoomRes {
      get { return validateOpenRoomRes_ ?? global::C2GNet.ValidateOpenRoomResponse.DefaultInstance; }
    }
    
    public const int StatusNotifyFieldNumber = 100;
    private bool hasStatusNotify;
    private global::C2GNet.StatusNotify statusNotify_;
    public bool HasStatusNotify {
      get { return hasStatusNotify; }
    }
    public global::C2GNet.StatusNotify StatusNotify {
      get { return statusNotify_ ?? global::C2GNet.StatusNotify.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netMessageResponseFieldNames;
      if (hasUserRegister) {
        output.WriteMessage(1, field_names[23], UserRegister);
      }
      if (hasUserLogin) {
        output.WriteMessage(2, field_names[22], UserLogin);
      }
      if (hasCharacterDetail) {
        output.WriteMessage(3, field_names[3], CharacterDetail);
      }
      if (hasUpdateNickName) {
        output.WriteMessage(4, field_names[21], UpdateNickName);
      }
      if (hasFollowRes) {
        output.WriteMessage(8, field_names[6], FollowRes);
      }
      if (hasUnLockRes) {
        output.WriteMessage(10, field_names[20], UnLockRes);
      }
      if (hasSwitchCharacterRes) {
        output.WriteMessage(11, field_names[18], SwitchCharacterRes);
      }
      if (hasUserStatusChangeRes) {
        output.WriteMessage(13, field_names[24], UserStatusChangeRes);
      }
      if (hasHeartBeatRes) {
        output.WriteMessage(16, field_names[7], HeartBeatRes);
      }
      if (hasTipsRes) {
        output.WriteMessage(20, field_names[19], TipsRes);
      }
      if (hasMyRoomRes) {
        output.WriteMessage(21, field_names[12], MyRoomRes);
      }
      if (hasInviteReq) {
        output.WriteMessage(22, field_names[8], InviteReq);
      }
      if (hasInviteRes) {
        output.WriteMessage(23, field_names[9], InviteRes);
      }
      if (hasKickOutRes) {
        output.WriteMessage(24, field_names[10], KickOutRes);
      }
      if (hasRoomStartGameRes) {
        output.WriteMessage(25, field_names[15], RoomStartGameRes);
      }
      if (hasNickNameSearchRes) {
        output.WriteMessage(26, field_names[13], NickNameSearchRes);
      }
      if (hasFollowListRes) {
        output.WriteMessage(27, field_names[5], FollowListRes);
      }
      if (hasAddRoomReq) {
        output.WriteMessage(28, field_names[1], AddRoomReq);
      }
      if (hasAddRoomRes) {
        output.WriteMessage(29, field_names[2], AddRoomRes);
      }
      if (hasOutRoomRes) {
        output.WriteMessage(30, field_names[14], OutRoomRes);
      }
      if (hasChatRes) {
        output.WriteMessage(31, field_names[4], ChatRes);
      }
      if (hasUserStatusQueryRes) {
        output.WriteMessage(32, field_names[25], UserStatusQueryRes);
      }
      if (hasStartMatchRes) {
        output.WriteMessage(33, field_names[16], StartMatchRes);
      }
      if (hasMatchRes) {
        output.WriteMessage(34, field_names[11], MatchRes);
      }
      if (hasAddLiveRes) {
        output.WriteMessage(35, field_names[0], AddLiveRes);
      }
      if (hasValidateOpenRoomRes) {
        output.WriteMessage(36, field_names[26], ValidateOpenRoomRes);
      }
      if (hasStatusNotify) {
        output.WriteMessage(100, field_names[17], StatusNotify);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserRegister) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserRegister);
      }
      if (hasUserLogin) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, UserLogin);
      }
      if (hasCharacterDetail) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, CharacterDetail);
      }
      if (hasUpdateNickName) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, UpdateNickName);
      }
      if (hasFollowRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, FollowRes);
      }
      if (hasUnLockRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, UnLockRes);
      }
      if (hasSwitchCharacterRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(11, SwitchCharacterRes);
      }
      if (hasUserStatusChangeRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(13, UserStatusChangeRes);
      }
      if (hasHeartBeatRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(16, HeartBeatRes);
      }
      if (hasTipsRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(20, TipsRes);
      }
      if (hasMyRoomRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(21, MyRoomRes);
      }
      if (hasInviteReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(22, InviteReq);
      }
      if (hasInviteRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(23, InviteRes);
      }
      if (hasKickOutRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(24, KickOutRes);
      }
      if (hasRoomStartGameRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(25, RoomStartGameRes);
      }
      if (hasNickNameSearchRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(26, NickNameSearchRes);
      }
      if (hasFollowListRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(27, FollowListRes);
      }
      if (hasAddRoomReq) {
        size += pb::CodedOutputStream.ComputeMessageSize(28, AddRoomReq);
      }
      if (hasAddRoomRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(29, AddRoomRes);
      }
      if (hasOutRoomRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(30, OutRoomRes);
      }
      if (hasChatRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(31, ChatRes);
      }
      if (hasUserStatusQueryRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(32, UserStatusQueryRes);
      }
      if (hasStartMatchRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(33, StartMatchRes);
      }
      if (hasMatchRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(34, MatchRes);
      }
      if (hasAddLiveRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(35, AddLiveRes);
      }
      if (hasValidateOpenRoomRes) {
        size += pb::CodedOutputStream.ComputeMessageSize(36, ValidateOpenRoomRes);
      }
      if (hasStatusNotify) {
        size += pb::CodedOutputStream.ComputeMessageSize(100, StatusNotify);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetMessageResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetMessageResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetMessageResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetMessageResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetMessageResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetMessageResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetMessageResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetMessageResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetMessageResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetMessageResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetMessageResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetMessageResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetMessageResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetMessageResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetMessageResponse result;
      
      private NetMessageResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          NetMessageResponse original = result;
          result = new NetMessageResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetMessageResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.NetMessageResponse.Descriptor; }
      }
      
      public override NetMessageResponse DefaultInstanceForType {
        get { return global::C2GNet.NetMessageResponse.DefaultInstance; }
      }
      
      public override NetMessageResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetMessageResponse) {
          return MergeFrom((NetMessageResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetMessageResponse other) {
        if (other == global::C2GNet.NetMessageResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserRegister) {
          MergeUserRegister(other.UserRegister);
        }
        if (other.HasUserLogin) {
          MergeUserLogin(other.UserLogin);
        }
        if (other.HasCharacterDetail) {
          MergeCharacterDetail(other.CharacterDetail);
        }
        if (other.HasUpdateNickName) {
          MergeUpdateNickName(other.UpdateNickName);
        }
        if (other.HasFollowRes) {
          MergeFollowRes(other.FollowRes);
        }
        if (other.HasUnLockRes) {
          MergeUnLockRes(other.UnLockRes);
        }
        if (other.HasSwitchCharacterRes) {
          MergeSwitchCharacterRes(other.SwitchCharacterRes);
        }
        if (other.HasUserStatusChangeRes) {
          MergeUserStatusChangeRes(other.UserStatusChangeRes);
        }
        if (other.HasHeartBeatRes) {
          MergeHeartBeatRes(other.HeartBeatRes);
        }
        if (other.HasTipsRes) {
          MergeTipsRes(other.TipsRes);
        }
        if (other.HasMyRoomRes) {
          MergeMyRoomRes(other.MyRoomRes);
        }
        if (other.HasInviteReq) {
          MergeInviteReq(other.InviteReq);
        }
        if (other.HasInviteRes) {
          MergeInviteRes(other.InviteRes);
        }
        if (other.HasKickOutRes) {
          MergeKickOutRes(other.KickOutRes);
        }
        if (other.HasRoomStartGameRes) {
          MergeRoomStartGameRes(other.RoomStartGameRes);
        }
        if (other.HasNickNameSearchRes) {
          MergeNickNameSearchRes(other.NickNameSearchRes);
        }
        if (other.HasFollowListRes) {
          MergeFollowListRes(other.FollowListRes);
        }
        if (other.HasAddRoomReq) {
          MergeAddRoomReq(other.AddRoomReq);
        }
        if (other.HasAddRoomRes) {
          MergeAddRoomRes(other.AddRoomRes);
        }
        if (other.HasOutRoomRes) {
          MergeOutRoomRes(other.OutRoomRes);
        }
        if (other.HasChatRes) {
          MergeChatRes(other.ChatRes);
        }
        if (other.HasUserStatusQueryRes) {
          MergeUserStatusQueryRes(other.UserStatusQueryRes);
        }
        if (other.HasStartMatchRes) {
          MergeStartMatchRes(other.StartMatchRes);
        }
        if (other.HasMatchRes) {
          MergeMatchRes(other.MatchRes);
        }
        if (other.HasAddLiveRes) {
          MergeAddLiveRes(other.AddLiveRes);
        }
        if (other.HasValidateOpenRoomRes) {
          MergeValidateOpenRoomRes(other.ValidateOpenRoomRes);
        }
        if (other.HasStatusNotify) {
          MergeStatusNotify(other.StatusNotify);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netMessageResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netMessageResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::C2GNet.UserRegisterResponse.Builder subBuilder = global::C2GNet.UserRegisterResponse.CreateBuilder();
              if (result.hasUserRegister) {
                subBuilder.MergeFrom(UserRegister);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserRegister = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::C2GNet.UserLoginResponse.Builder subBuilder = global::C2GNet.UserLoginResponse.CreateBuilder();
              if (result.hasUserLogin) {
                subBuilder.MergeFrom(UserLogin);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserLogin = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::C2GNet.CharacterDetailResponse.Builder subBuilder = global::C2GNet.CharacterDetailResponse.CreateBuilder();
              if (result.hasCharacterDetail) {
                subBuilder.MergeFrom(CharacterDetail);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CharacterDetail = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::C2GNet.UpdateNickNameResponse.Builder subBuilder = global::C2GNet.UpdateNickNameResponse.CreateBuilder();
              if (result.hasUpdateNickName) {
                subBuilder.MergeFrom(UpdateNickName);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateNickName = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::C2GNet.FollowResponse.Builder subBuilder = global::C2GNet.FollowResponse.CreateBuilder();
              if (result.hasFollowRes) {
                subBuilder.MergeFrom(FollowRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FollowRes = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::C2GNet.UnLockResponse.Builder subBuilder = global::C2GNet.UnLockResponse.CreateBuilder();
              if (result.hasUnLockRes) {
                subBuilder.MergeFrom(UnLockRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UnLockRes = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::C2GNet.SwitchCharacterResponse.Builder subBuilder = global::C2GNet.SwitchCharacterResponse.CreateBuilder();
              if (result.hasSwitchCharacterRes) {
                subBuilder.MergeFrom(SwitchCharacterRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SwitchCharacterRes = subBuilder.BuildPartial();
              break;
            }
            case 106: {
              global::C2GNet.UserStatusChangeResponse.Builder subBuilder = global::C2GNet.UserStatusChangeResponse.CreateBuilder();
              if (result.hasUserStatusChangeRes) {
                subBuilder.MergeFrom(UserStatusChangeRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserStatusChangeRes = subBuilder.BuildPartial();
              break;
            }
            case 130: {
              global::C2GNet.HeartBeatResponse.Builder subBuilder = global::C2GNet.HeartBeatResponse.CreateBuilder();
              if (result.hasHeartBeatRes) {
                subBuilder.MergeFrom(HeartBeatRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              HeartBeatRes = subBuilder.BuildPartial();
              break;
            }
            case 162: {
              global::C2GNet.TipsResponse.Builder subBuilder = global::C2GNet.TipsResponse.CreateBuilder();
              if (result.hasTipsRes) {
                subBuilder.MergeFrom(TipsRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TipsRes = subBuilder.BuildPartial();
              break;
            }
            case 170: {
              global::C2GNet.MyRoomResponse.Builder subBuilder = global::C2GNet.MyRoomResponse.CreateBuilder();
              if (result.hasMyRoomRes) {
                subBuilder.MergeFrom(MyRoomRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MyRoomRes = subBuilder.BuildPartial();
              break;
            }
            case 178: {
              global::C2GNet.InviteRequest.Builder subBuilder = global::C2GNet.InviteRequest.CreateBuilder();
              if (result.hasInviteReq) {
                subBuilder.MergeFrom(InviteReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InviteReq = subBuilder.BuildPartial();
              break;
            }
            case 186: {
              global::C2GNet.InviteResponse.Builder subBuilder = global::C2GNet.InviteResponse.CreateBuilder();
              if (result.hasInviteRes) {
                subBuilder.MergeFrom(InviteRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InviteRes = subBuilder.BuildPartial();
              break;
            }
            case 194: {
              global::C2GNet.KickOutResponse.Builder subBuilder = global::C2GNet.KickOutResponse.CreateBuilder();
              if (result.hasKickOutRes) {
                subBuilder.MergeFrom(KickOutRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              KickOutRes = subBuilder.BuildPartial();
              break;
            }
            case 202: {
              global::C2GNet.RoomStartGameResponse.Builder subBuilder = global::C2GNet.RoomStartGameResponse.CreateBuilder();
              if (result.hasRoomStartGameRes) {
                subBuilder.MergeFrom(RoomStartGameRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RoomStartGameRes = subBuilder.BuildPartial();
              break;
            }
            case 210: {
              global::C2GNet.NickNameSearchResponse.Builder subBuilder = global::C2GNet.NickNameSearchResponse.CreateBuilder();
              if (result.hasNickNameSearchRes) {
                subBuilder.MergeFrom(NickNameSearchRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NickNameSearchRes = subBuilder.BuildPartial();
              break;
            }
            case 218: {
              global::C2GNet.FollowListResponse.Builder subBuilder = global::C2GNet.FollowListResponse.CreateBuilder();
              if (result.hasFollowListRes) {
                subBuilder.MergeFrom(FollowListRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FollowListRes = subBuilder.BuildPartial();
              break;
            }
            case 226: {
              global::C2GNet.AddRoomRequest.Builder subBuilder = global::C2GNet.AddRoomRequest.CreateBuilder();
              if (result.hasAddRoomReq) {
                subBuilder.MergeFrom(AddRoomReq);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AddRoomReq = subBuilder.BuildPartial();
              break;
            }
            case 234: {
              global::C2GNet.AddRoomResponse.Builder subBuilder = global::C2GNet.AddRoomResponse.CreateBuilder();
              if (result.hasAddRoomRes) {
                subBuilder.MergeFrom(AddRoomRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AddRoomRes = subBuilder.BuildPartial();
              break;
            }
            case 242: {
              global::C2GNet.OutRoomResponse.Builder subBuilder = global::C2GNet.OutRoomResponse.CreateBuilder();
              if (result.hasOutRoomRes) {
                subBuilder.MergeFrom(OutRoomRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OutRoomRes = subBuilder.BuildPartial();
              break;
            }
            case 250: {
              global::C2GNet.ChatResponse.Builder subBuilder = global::C2GNet.ChatResponse.CreateBuilder();
              if (result.hasChatRes) {
                subBuilder.MergeFrom(ChatRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChatRes = subBuilder.BuildPartial();
              break;
            }
            case 258: {
              global::C2GNet.UserStatusQueryResponse.Builder subBuilder = global::C2GNet.UserStatusQueryResponse.CreateBuilder();
              if (result.hasUserStatusQueryRes) {
                subBuilder.MergeFrom(UserStatusQueryRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserStatusQueryRes = subBuilder.BuildPartial();
              break;
            }
            case 266: {
              global::C2GNet.StartMatchResponse.Builder subBuilder = global::C2GNet.StartMatchResponse.CreateBuilder();
              if (result.hasStartMatchRes) {
                subBuilder.MergeFrom(StartMatchRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StartMatchRes = subBuilder.BuildPartial();
              break;
            }
            case 274: {
              global::C2GNet.MatchResponse.Builder subBuilder = global::C2GNet.MatchResponse.CreateBuilder();
              if (result.hasMatchRes) {
                subBuilder.MergeFrom(MatchRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MatchRes = subBuilder.BuildPartial();
              break;
            }
            case 282: {
              global::C2GNet.AddLiveResponse.Builder subBuilder = global::C2GNet.AddLiveResponse.CreateBuilder();
              if (result.hasAddLiveRes) {
                subBuilder.MergeFrom(AddLiveRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AddLiveRes = subBuilder.BuildPartial();
              break;
            }
            case 290: {
              global::C2GNet.ValidateOpenRoomResponse.Builder subBuilder = global::C2GNet.ValidateOpenRoomResponse.CreateBuilder();
              if (result.hasValidateOpenRoomRes) {
                subBuilder.MergeFrom(ValidateOpenRoomRes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ValidateOpenRoomRes = subBuilder.BuildPartial();
              break;
            }
            case 802: {
              global::C2GNet.StatusNotify.Builder subBuilder = global::C2GNet.StatusNotify.CreateBuilder();
              if (result.hasStatusNotify) {
                subBuilder.MergeFrom(StatusNotify);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StatusNotify = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserRegister {
       get { return result.hasUserRegister; }
      }
      public global::C2GNet.UserRegisterResponse UserRegister {
        get { return result.UserRegister; }
        set { SetUserRegister(value); }
      }
      public Builder SetUserRegister(global::C2GNet.UserRegisterResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserRegister = true;
        result.userRegister_ = value;
        return this;
      }
      public Builder SetUserRegister(global::C2GNet.UserRegisterResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserRegister = true;
        result.userRegister_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserRegister(global::C2GNet.UserRegisterResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserRegister &&
            result.userRegister_ != global::C2GNet.UserRegisterResponse.DefaultInstance) {
            result.userRegister_ = global::C2GNet.UserRegisterResponse.CreateBuilder(result.userRegister_).MergeFrom(value).BuildPartial();
        } else {
          result.userRegister_ = value;
        }
        result.hasUserRegister = true;
        return this;
      }
      public Builder ClearUserRegister() {
        PrepareBuilder();
        result.hasUserRegister = false;
        result.userRegister_ = null;
        return this;
      }
      
      public bool HasUserLogin {
       get { return result.hasUserLogin; }
      }
      public global::C2GNet.UserLoginResponse UserLogin {
        get { return result.UserLogin; }
        set { SetUserLogin(value); }
      }
      public Builder SetUserLogin(global::C2GNet.UserLoginResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserLogin = true;
        result.userLogin_ = value;
        return this;
      }
      public Builder SetUserLogin(global::C2GNet.UserLoginResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserLogin = true;
        result.userLogin_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserLogin(global::C2GNet.UserLoginResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserLogin &&
            result.userLogin_ != global::C2GNet.UserLoginResponse.DefaultInstance) {
            result.userLogin_ = global::C2GNet.UserLoginResponse.CreateBuilder(result.userLogin_).MergeFrom(value).BuildPartial();
        } else {
          result.userLogin_ = value;
        }
        result.hasUserLogin = true;
        return this;
      }
      public Builder ClearUserLogin() {
        PrepareBuilder();
        result.hasUserLogin = false;
        result.userLogin_ = null;
        return this;
      }
      
      public bool HasCharacterDetail {
       get { return result.hasCharacterDetail; }
      }
      public global::C2GNet.CharacterDetailResponse CharacterDetail {
        get { return result.CharacterDetail; }
        set { SetCharacterDetail(value); }
      }
      public Builder SetCharacterDetail(global::C2GNet.CharacterDetailResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCharacterDetail = true;
        result.characterDetail_ = value;
        return this;
      }
      public Builder SetCharacterDetail(global::C2GNet.CharacterDetailResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCharacterDetail = true;
        result.characterDetail_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCharacterDetail(global::C2GNet.CharacterDetailResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCharacterDetail &&
            result.characterDetail_ != global::C2GNet.CharacterDetailResponse.DefaultInstance) {
            result.characterDetail_ = global::C2GNet.CharacterDetailResponse.CreateBuilder(result.characterDetail_).MergeFrom(value).BuildPartial();
        } else {
          result.characterDetail_ = value;
        }
        result.hasCharacterDetail = true;
        return this;
      }
      public Builder ClearCharacterDetail() {
        PrepareBuilder();
        result.hasCharacterDetail = false;
        result.characterDetail_ = null;
        return this;
      }
      
      public bool HasUpdateNickName {
       get { return result.hasUpdateNickName; }
      }
      public global::C2GNet.UpdateNickNameResponse UpdateNickName {
        get { return result.UpdateNickName; }
        set { SetUpdateNickName(value); }
      }
      public Builder SetUpdateNickName(global::C2GNet.UpdateNickNameResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateNickName = true;
        result.updateNickName_ = value;
        return this;
      }
      public Builder SetUpdateNickName(global::C2GNet.UpdateNickNameResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateNickName = true;
        result.updateNickName_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateNickName(global::C2GNet.UpdateNickNameResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateNickName &&
            result.updateNickName_ != global::C2GNet.UpdateNickNameResponse.DefaultInstance) {
            result.updateNickName_ = global::C2GNet.UpdateNickNameResponse.CreateBuilder(result.updateNickName_).MergeFrom(value).BuildPartial();
        } else {
          result.updateNickName_ = value;
        }
        result.hasUpdateNickName = true;
        return this;
      }
      public Builder ClearUpdateNickName() {
        PrepareBuilder();
        result.hasUpdateNickName = false;
        result.updateNickName_ = null;
        return this;
      }
      
      public bool HasFollowRes {
       get { return result.hasFollowRes; }
      }
      public global::C2GNet.FollowResponse FollowRes {
        get { return result.FollowRes; }
        set { SetFollowRes(value); }
      }
      public Builder SetFollowRes(global::C2GNet.FollowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFollowRes = true;
        result.followRes_ = value;
        return this;
      }
      public Builder SetFollowRes(global::C2GNet.FollowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFollowRes = true;
        result.followRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFollowRes(global::C2GNet.FollowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFollowRes &&
            result.followRes_ != global::C2GNet.FollowResponse.DefaultInstance) {
            result.followRes_ = global::C2GNet.FollowResponse.CreateBuilder(result.followRes_).MergeFrom(value).BuildPartial();
        } else {
          result.followRes_ = value;
        }
        result.hasFollowRes = true;
        return this;
      }
      public Builder ClearFollowRes() {
        PrepareBuilder();
        result.hasFollowRes = false;
        result.followRes_ = null;
        return this;
      }
      
      public bool HasUnLockRes {
       get { return result.hasUnLockRes; }
      }
      public global::C2GNet.UnLockResponse UnLockRes {
        get { return result.UnLockRes; }
        set { SetUnLockRes(value); }
      }
      public Builder SetUnLockRes(global::C2GNet.UnLockResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUnLockRes = true;
        result.unLockRes_ = value;
        return this;
      }
      public Builder SetUnLockRes(global::C2GNet.UnLockResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUnLockRes = true;
        result.unLockRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUnLockRes(global::C2GNet.UnLockResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUnLockRes &&
            result.unLockRes_ != global::C2GNet.UnLockResponse.DefaultInstance) {
            result.unLockRes_ = global::C2GNet.UnLockResponse.CreateBuilder(result.unLockRes_).MergeFrom(value).BuildPartial();
        } else {
          result.unLockRes_ = value;
        }
        result.hasUnLockRes = true;
        return this;
      }
      public Builder ClearUnLockRes() {
        PrepareBuilder();
        result.hasUnLockRes = false;
        result.unLockRes_ = null;
        return this;
      }
      
      public bool HasSwitchCharacterRes {
       get { return result.hasSwitchCharacterRes; }
      }
      public global::C2GNet.SwitchCharacterResponse SwitchCharacterRes {
        get { return result.SwitchCharacterRes; }
        set { SetSwitchCharacterRes(value); }
      }
      public Builder SetSwitchCharacterRes(global::C2GNet.SwitchCharacterResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSwitchCharacterRes = true;
        result.switchCharacterRes_ = value;
        return this;
      }
      public Builder SetSwitchCharacterRes(global::C2GNet.SwitchCharacterResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSwitchCharacterRes = true;
        result.switchCharacterRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSwitchCharacterRes(global::C2GNet.SwitchCharacterResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSwitchCharacterRes &&
            result.switchCharacterRes_ != global::C2GNet.SwitchCharacterResponse.DefaultInstance) {
            result.switchCharacterRes_ = global::C2GNet.SwitchCharacterResponse.CreateBuilder(result.switchCharacterRes_).MergeFrom(value).BuildPartial();
        } else {
          result.switchCharacterRes_ = value;
        }
        result.hasSwitchCharacterRes = true;
        return this;
      }
      public Builder ClearSwitchCharacterRes() {
        PrepareBuilder();
        result.hasSwitchCharacterRes = false;
        result.switchCharacterRes_ = null;
        return this;
      }
      
      public bool HasUserStatusChangeRes {
       get { return result.hasUserStatusChangeRes; }
      }
      public global::C2GNet.UserStatusChangeResponse UserStatusChangeRes {
        get { return result.UserStatusChangeRes; }
        set { SetUserStatusChangeRes(value); }
      }
      public Builder SetUserStatusChangeRes(global::C2GNet.UserStatusChangeResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserStatusChangeRes = true;
        result.userStatusChangeRes_ = value;
        return this;
      }
      public Builder SetUserStatusChangeRes(global::C2GNet.UserStatusChangeResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserStatusChangeRes = true;
        result.userStatusChangeRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserStatusChangeRes(global::C2GNet.UserStatusChangeResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserStatusChangeRes &&
            result.userStatusChangeRes_ != global::C2GNet.UserStatusChangeResponse.DefaultInstance) {
            result.userStatusChangeRes_ = global::C2GNet.UserStatusChangeResponse.CreateBuilder(result.userStatusChangeRes_).MergeFrom(value).BuildPartial();
        } else {
          result.userStatusChangeRes_ = value;
        }
        result.hasUserStatusChangeRes = true;
        return this;
      }
      public Builder ClearUserStatusChangeRes() {
        PrepareBuilder();
        result.hasUserStatusChangeRes = false;
        result.userStatusChangeRes_ = null;
        return this;
      }
      
      public bool HasHeartBeatRes {
       get { return result.hasHeartBeatRes; }
      }
      public global::C2GNet.HeartBeatResponse HeartBeatRes {
        get { return result.HeartBeatRes; }
        set { SetHeartBeatRes(value); }
      }
      public Builder SetHeartBeatRes(global::C2GNet.HeartBeatResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHeartBeatRes = true;
        result.heartBeatRes_ = value;
        return this;
      }
      public Builder SetHeartBeatRes(global::C2GNet.HeartBeatResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHeartBeatRes = true;
        result.heartBeatRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHeartBeatRes(global::C2GNet.HeartBeatResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHeartBeatRes &&
            result.heartBeatRes_ != global::C2GNet.HeartBeatResponse.DefaultInstance) {
            result.heartBeatRes_ = global::C2GNet.HeartBeatResponse.CreateBuilder(result.heartBeatRes_).MergeFrom(value).BuildPartial();
        } else {
          result.heartBeatRes_ = value;
        }
        result.hasHeartBeatRes = true;
        return this;
      }
      public Builder ClearHeartBeatRes() {
        PrepareBuilder();
        result.hasHeartBeatRes = false;
        result.heartBeatRes_ = null;
        return this;
      }
      
      public bool HasTipsRes {
       get { return result.hasTipsRes; }
      }
      public global::C2GNet.TipsResponse TipsRes {
        get { return result.TipsRes; }
        set { SetTipsRes(value); }
      }
      public Builder SetTipsRes(global::C2GNet.TipsResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTipsRes = true;
        result.tipsRes_ = value;
        return this;
      }
      public Builder SetTipsRes(global::C2GNet.TipsResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTipsRes = true;
        result.tipsRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTipsRes(global::C2GNet.TipsResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTipsRes &&
            result.tipsRes_ != global::C2GNet.TipsResponse.DefaultInstance) {
            result.tipsRes_ = global::C2GNet.TipsResponse.CreateBuilder(result.tipsRes_).MergeFrom(value).BuildPartial();
        } else {
          result.tipsRes_ = value;
        }
        result.hasTipsRes = true;
        return this;
      }
      public Builder ClearTipsRes() {
        PrepareBuilder();
        result.hasTipsRes = false;
        result.tipsRes_ = null;
        return this;
      }
      
      public bool HasMyRoomRes {
       get { return result.hasMyRoomRes; }
      }
      public global::C2GNet.MyRoomResponse MyRoomRes {
        get { return result.MyRoomRes; }
        set { SetMyRoomRes(value); }
      }
      public Builder SetMyRoomRes(global::C2GNet.MyRoomResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMyRoomRes = true;
        result.myRoomRes_ = value;
        return this;
      }
      public Builder SetMyRoomRes(global::C2GNet.MyRoomResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMyRoomRes = true;
        result.myRoomRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMyRoomRes(global::C2GNet.MyRoomResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMyRoomRes &&
            result.myRoomRes_ != global::C2GNet.MyRoomResponse.DefaultInstance) {
            result.myRoomRes_ = global::C2GNet.MyRoomResponse.CreateBuilder(result.myRoomRes_).MergeFrom(value).BuildPartial();
        } else {
          result.myRoomRes_ = value;
        }
        result.hasMyRoomRes = true;
        return this;
      }
      public Builder ClearMyRoomRes() {
        PrepareBuilder();
        result.hasMyRoomRes = false;
        result.myRoomRes_ = null;
        return this;
      }
      
      public bool HasInviteReq {
       get { return result.hasInviteReq; }
      }
      public global::C2GNet.InviteRequest InviteReq {
        get { return result.InviteReq; }
        set { SetInviteReq(value); }
      }
      public Builder SetInviteReq(global::C2GNet.InviteRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviteReq = true;
        result.inviteReq_ = value;
        return this;
      }
      public Builder SetInviteReq(global::C2GNet.InviteRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInviteReq = true;
        result.inviteReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInviteReq(global::C2GNet.InviteRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInviteReq &&
            result.inviteReq_ != global::C2GNet.InviteRequest.DefaultInstance) {
            result.inviteReq_ = global::C2GNet.InviteRequest.CreateBuilder(result.inviteReq_).MergeFrom(value).BuildPartial();
        } else {
          result.inviteReq_ = value;
        }
        result.hasInviteReq = true;
        return this;
      }
      public Builder ClearInviteReq() {
        PrepareBuilder();
        result.hasInviteReq = false;
        result.inviteReq_ = null;
        return this;
      }
      
      public bool HasInviteRes {
       get { return result.hasInviteRes; }
      }
      public global::C2GNet.InviteResponse InviteRes {
        get { return result.InviteRes; }
        set { SetInviteRes(value); }
      }
      public Builder SetInviteRes(global::C2GNet.InviteResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviteRes = true;
        result.inviteRes_ = value;
        return this;
      }
      public Builder SetInviteRes(global::C2GNet.InviteResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInviteRes = true;
        result.inviteRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInviteRes(global::C2GNet.InviteResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInviteRes &&
            result.inviteRes_ != global::C2GNet.InviteResponse.DefaultInstance) {
            result.inviteRes_ = global::C2GNet.InviteResponse.CreateBuilder(result.inviteRes_).MergeFrom(value).BuildPartial();
        } else {
          result.inviteRes_ = value;
        }
        result.hasInviteRes = true;
        return this;
      }
      public Builder ClearInviteRes() {
        PrepareBuilder();
        result.hasInviteRes = false;
        result.inviteRes_ = null;
        return this;
      }
      
      public bool HasKickOutRes {
       get { return result.hasKickOutRes; }
      }
      public global::C2GNet.KickOutResponse KickOutRes {
        get { return result.KickOutRes; }
        set { SetKickOutRes(value); }
      }
      public Builder SetKickOutRes(global::C2GNet.KickOutResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKickOutRes = true;
        result.kickOutRes_ = value;
        return this;
      }
      public Builder SetKickOutRes(global::C2GNet.KickOutResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasKickOutRes = true;
        result.kickOutRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeKickOutRes(global::C2GNet.KickOutResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasKickOutRes &&
            result.kickOutRes_ != global::C2GNet.KickOutResponse.DefaultInstance) {
            result.kickOutRes_ = global::C2GNet.KickOutResponse.CreateBuilder(result.kickOutRes_).MergeFrom(value).BuildPartial();
        } else {
          result.kickOutRes_ = value;
        }
        result.hasKickOutRes = true;
        return this;
      }
      public Builder ClearKickOutRes() {
        PrepareBuilder();
        result.hasKickOutRes = false;
        result.kickOutRes_ = null;
        return this;
      }
      
      public bool HasRoomStartGameRes {
       get { return result.hasRoomStartGameRes; }
      }
      public global::C2GNet.RoomStartGameResponse RoomStartGameRes {
        get { return result.RoomStartGameRes; }
        set { SetRoomStartGameRes(value); }
      }
      public Builder SetRoomStartGameRes(global::C2GNet.RoomStartGameResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoomStartGameRes = true;
        result.roomStartGameRes_ = value;
        return this;
      }
      public Builder SetRoomStartGameRes(global::C2GNet.RoomStartGameResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRoomStartGameRes = true;
        result.roomStartGameRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRoomStartGameRes(global::C2GNet.RoomStartGameResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRoomStartGameRes &&
            result.roomStartGameRes_ != global::C2GNet.RoomStartGameResponse.DefaultInstance) {
            result.roomStartGameRes_ = global::C2GNet.RoomStartGameResponse.CreateBuilder(result.roomStartGameRes_).MergeFrom(value).BuildPartial();
        } else {
          result.roomStartGameRes_ = value;
        }
        result.hasRoomStartGameRes = true;
        return this;
      }
      public Builder ClearRoomStartGameRes() {
        PrepareBuilder();
        result.hasRoomStartGameRes = false;
        result.roomStartGameRes_ = null;
        return this;
      }
      
      public bool HasNickNameSearchRes {
       get { return result.hasNickNameSearchRes; }
      }
      public global::C2GNet.NickNameSearchResponse NickNameSearchRes {
        get { return result.NickNameSearchRes; }
        set { SetNickNameSearchRes(value); }
      }
      public Builder SetNickNameSearchRes(global::C2GNet.NickNameSearchResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickNameSearchRes = true;
        result.nickNameSearchRes_ = value;
        return this;
      }
      public Builder SetNickNameSearchRes(global::C2GNet.NickNameSearchResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNickNameSearchRes = true;
        result.nickNameSearchRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNickNameSearchRes(global::C2GNet.NickNameSearchResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNickNameSearchRes &&
            result.nickNameSearchRes_ != global::C2GNet.NickNameSearchResponse.DefaultInstance) {
            result.nickNameSearchRes_ = global::C2GNet.NickNameSearchResponse.CreateBuilder(result.nickNameSearchRes_).MergeFrom(value).BuildPartial();
        } else {
          result.nickNameSearchRes_ = value;
        }
        result.hasNickNameSearchRes = true;
        return this;
      }
      public Builder ClearNickNameSearchRes() {
        PrepareBuilder();
        result.hasNickNameSearchRes = false;
        result.nickNameSearchRes_ = null;
        return this;
      }
      
      public bool HasFollowListRes {
       get { return result.hasFollowListRes; }
      }
      public global::C2GNet.FollowListResponse FollowListRes {
        get { return result.FollowListRes; }
        set { SetFollowListRes(value); }
      }
      public Builder SetFollowListRes(global::C2GNet.FollowListResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFollowListRes = true;
        result.followListRes_ = value;
        return this;
      }
      public Builder SetFollowListRes(global::C2GNet.FollowListResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFollowListRes = true;
        result.followListRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFollowListRes(global::C2GNet.FollowListResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFollowListRes &&
            result.followListRes_ != global::C2GNet.FollowListResponse.DefaultInstance) {
            result.followListRes_ = global::C2GNet.FollowListResponse.CreateBuilder(result.followListRes_).MergeFrom(value).BuildPartial();
        } else {
          result.followListRes_ = value;
        }
        result.hasFollowListRes = true;
        return this;
      }
      public Builder ClearFollowListRes() {
        PrepareBuilder();
        result.hasFollowListRes = false;
        result.followListRes_ = null;
        return this;
      }
      
      public bool HasAddRoomReq {
       get { return result.hasAddRoomReq; }
      }
      public global::C2GNet.AddRoomRequest AddRoomReq {
        get { return result.AddRoomReq; }
        set { SetAddRoomReq(value); }
      }
      public Builder SetAddRoomReq(global::C2GNet.AddRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddRoomReq = true;
        result.addRoomReq_ = value;
        return this;
      }
      public Builder SetAddRoomReq(global::C2GNet.AddRoomRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAddRoomReq = true;
        result.addRoomReq_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAddRoomReq(global::C2GNet.AddRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAddRoomReq &&
            result.addRoomReq_ != global::C2GNet.AddRoomRequest.DefaultInstance) {
            result.addRoomReq_ = global::C2GNet.AddRoomRequest.CreateBuilder(result.addRoomReq_).MergeFrom(value).BuildPartial();
        } else {
          result.addRoomReq_ = value;
        }
        result.hasAddRoomReq = true;
        return this;
      }
      public Builder ClearAddRoomReq() {
        PrepareBuilder();
        result.hasAddRoomReq = false;
        result.addRoomReq_ = null;
        return this;
      }
      
      public bool HasAddRoomRes {
       get { return result.hasAddRoomRes; }
      }
      public global::C2GNet.AddRoomResponse AddRoomRes {
        get { return result.AddRoomRes; }
        set { SetAddRoomRes(value); }
      }
      public Builder SetAddRoomRes(global::C2GNet.AddRoomResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddRoomRes = true;
        result.addRoomRes_ = value;
        return this;
      }
      public Builder SetAddRoomRes(global::C2GNet.AddRoomResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAddRoomRes = true;
        result.addRoomRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAddRoomRes(global::C2GNet.AddRoomResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAddRoomRes &&
            result.addRoomRes_ != global::C2GNet.AddRoomResponse.DefaultInstance) {
            result.addRoomRes_ = global::C2GNet.AddRoomResponse.CreateBuilder(result.addRoomRes_).MergeFrom(value).BuildPartial();
        } else {
          result.addRoomRes_ = value;
        }
        result.hasAddRoomRes = true;
        return this;
      }
      public Builder ClearAddRoomRes() {
        PrepareBuilder();
        result.hasAddRoomRes = false;
        result.addRoomRes_ = null;
        return this;
      }
      
      public bool HasOutRoomRes {
       get { return result.hasOutRoomRes; }
      }
      public global::C2GNet.OutRoomResponse OutRoomRes {
        get { return result.OutRoomRes; }
        set { SetOutRoomRes(value); }
      }
      public Builder SetOutRoomRes(global::C2GNet.OutRoomResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOutRoomRes = true;
        result.outRoomRes_ = value;
        return this;
      }
      public Builder SetOutRoomRes(global::C2GNet.OutRoomResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOutRoomRes = true;
        result.outRoomRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOutRoomRes(global::C2GNet.OutRoomResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOutRoomRes &&
            result.outRoomRes_ != global::C2GNet.OutRoomResponse.DefaultInstance) {
            result.outRoomRes_ = global::C2GNet.OutRoomResponse.CreateBuilder(result.outRoomRes_).MergeFrom(value).BuildPartial();
        } else {
          result.outRoomRes_ = value;
        }
        result.hasOutRoomRes = true;
        return this;
      }
      public Builder ClearOutRoomRes() {
        PrepareBuilder();
        result.hasOutRoomRes = false;
        result.outRoomRes_ = null;
        return this;
      }
      
      public bool HasChatRes {
       get { return result.hasChatRes; }
      }
      public global::C2GNet.ChatResponse ChatRes {
        get { return result.ChatRes; }
        set { SetChatRes(value); }
      }
      public Builder SetChatRes(global::C2GNet.ChatResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChatRes = true;
        result.chatRes_ = value;
        return this;
      }
      public Builder SetChatRes(global::C2GNet.ChatResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChatRes = true;
        result.chatRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChatRes(global::C2GNet.ChatResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChatRes &&
            result.chatRes_ != global::C2GNet.ChatResponse.DefaultInstance) {
            result.chatRes_ = global::C2GNet.ChatResponse.CreateBuilder(result.chatRes_).MergeFrom(value).BuildPartial();
        } else {
          result.chatRes_ = value;
        }
        result.hasChatRes = true;
        return this;
      }
      public Builder ClearChatRes() {
        PrepareBuilder();
        result.hasChatRes = false;
        result.chatRes_ = null;
        return this;
      }
      
      public bool HasUserStatusQueryRes {
       get { return result.hasUserStatusQueryRes; }
      }
      public global::C2GNet.UserStatusQueryResponse UserStatusQueryRes {
        get { return result.UserStatusQueryRes; }
        set { SetUserStatusQueryRes(value); }
      }
      public Builder SetUserStatusQueryRes(global::C2GNet.UserStatusQueryResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserStatusQueryRes = true;
        result.userStatusQueryRes_ = value;
        return this;
      }
      public Builder SetUserStatusQueryRes(global::C2GNet.UserStatusQueryResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserStatusQueryRes = true;
        result.userStatusQueryRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserStatusQueryRes(global::C2GNet.UserStatusQueryResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserStatusQueryRes &&
            result.userStatusQueryRes_ != global::C2GNet.UserStatusQueryResponse.DefaultInstance) {
            result.userStatusQueryRes_ = global::C2GNet.UserStatusQueryResponse.CreateBuilder(result.userStatusQueryRes_).MergeFrom(value).BuildPartial();
        } else {
          result.userStatusQueryRes_ = value;
        }
        result.hasUserStatusQueryRes = true;
        return this;
      }
      public Builder ClearUserStatusQueryRes() {
        PrepareBuilder();
        result.hasUserStatusQueryRes = false;
        result.userStatusQueryRes_ = null;
        return this;
      }
      
      public bool HasStartMatchRes {
       get { return result.hasStartMatchRes; }
      }
      public global::C2GNet.StartMatchResponse StartMatchRes {
        get { return result.StartMatchRes; }
        set { SetStartMatchRes(value); }
      }
      public Builder SetStartMatchRes(global::C2GNet.StartMatchResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStartMatchRes = true;
        result.startMatchRes_ = value;
        return this;
      }
      public Builder SetStartMatchRes(global::C2GNet.StartMatchResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStartMatchRes = true;
        result.startMatchRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStartMatchRes(global::C2GNet.StartMatchResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStartMatchRes &&
            result.startMatchRes_ != global::C2GNet.StartMatchResponse.DefaultInstance) {
            result.startMatchRes_ = global::C2GNet.StartMatchResponse.CreateBuilder(result.startMatchRes_).MergeFrom(value).BuildPartial();
        } else {
          result.startMatchRes_ = value;
        }
        result.hasStartMatchRes = true;
        return this;
      }
      public Builder ClearStartMatchRes() {
        PrepareBuilder();
        result.hasStartMatchRes = false;
        result.startMatchRes_ = null;
        return this;
      }
      
      public bool HasMatchRes {
       get { return result.hasMatchRes; }
      }
      public global::C2GNet.MatchResponse MatchRes {
        get { return result.MatchRes; }
        set { SetMatchRes(value); }
      }
      public Builder SetMatchRes(global::C2GNet.MatchResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMatchRes = true;
        result.matchRes_ = value;
        return this;
      }
      public Builder SetMatchRes(global::C2GNet.MatchResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMatchRes = true;
        result.matchRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMatchRes(global::C2GNet.MatchResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMatchRes &&
            result.matchRes_ != global::C2GNet.MatchResponse.DefaultInstance) {
            result.matchRes_ = global::C2GNet.MatchResponse.CreateBuilder(result.matchRes_).MergeFrom(value).BuildPartial();
        } else {
          result.matchRes_ = value;
        }
        result.hasMatchRes = true;
        return this;
      }
      public Builder ClearMatchRes() {
        PrepareBuilder();
        result.hasMatchRes = false;
        result.matchRes_ = null;
        return this;
      }
      
      public bool HasAddLiveRes {
       get { return result.hasAddLiveRes; }
      }
      public global::C2GNet.AddLiveResponse AddLiveRes {
        get { return result.AddLiveRes; }
        set { SetAddLiveRes(value); }
      }
      public Builder SetAddLiveRes(global::C2GNet.AddLiveResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddLiveRes = true;
        result.addLiveRes_ = value;
        return this;
      }
      public Builder SetAddLiveRes(global::C2GNet.AddLiveResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAddLiveRes = true;
        result.addLiveRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAddLiveRes(global::C2GNet.AddLiveResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAddLiveRes &&
            result.addLiveRes_ != global::C2GNet.AddLiveResponse.DefaultInstance) {
            result.addLiveRes_ = global::C2GNet.AddLiveResponse.CreateBuilder(result.addLiveRes_).MergeFrom(value).BuildPartial();
        } else {
          result.addLiveRes_ = value;
        }
        result.hasAddLiveRes = true;
        return this;
      }
      public Builder ClearAddLiveRes() {
        PrepareBuilder();
        result.hasAddLiveRes = false;
        result.addLiveRes_ = null;
        return this;
      }
      
      public bool HasValidateOpenRoomRes {
       get { return result.hasValidateOpenRoomRes; }
      }
      public global::C2GNet.ValidateOpenRoomResponse ValidateOpenRoomRes {
        get { return result.ValidateOpenRoomRes; }
        set { SetValidateOpenRoomRes(value); }
      }
      public Builder SetValidateOpenRoomRes(global::C2GNet.ValidateOpenRoomResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValidateOpenRoomRes = true;
        result.validateOpenRoomRes_ = value;
        return this;
      }
      public Builder SetValidateOpenRoomRes(global::C2GNet.ValidateOpenRoomResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValidateOpenRoomRes = true;
        result.validateOpenRoomRes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValidateOpenRoomRes(global::C2GNet.ValidateOpenRoomResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValidateOpenRoomRes &&
            result.validateOpenRoomRes_ != global::C2GNet.ValidateOpenRoomResponse.DefaultInstance) {
            result.validateOpenRoomRes_ = global::C2GNet.ValidateOpenRoomResponse.CreateBuilder(result.validateOpenRoomRes_).MergeFrom(value).BuildPartial();
        } else {
          result.validateOpenRoomRes_ = value;
        }
        result.hasValidateOpenRoomRes = true;
        return this;
      }
      public Builder ClearValidateOpenRoomRes() {
        PrepareBuilder();
        result.hasValidateOpenRoomRes = false;
        result.validateOpenRoomRes_ = null;
        return this;
      }
      
      public bool HasStatusNotify {
       get { return result.hasStatusNotify; }
      }
      public global::C2GNet.StatusNotify StatusNotify {
        get { return result.StatusNotify; }
        set { SetStatusNotify(value); }
      }
      public Builder SetStatusNotify(global::C2GNet.StatusNotify value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStatusNotify = true;
        result.statusNotify_ = value;
        return this;
      }
      public Builder SetStatusNotify(global::C2GNet.StatusNotify.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStatusNotify = true;
        result.statusNotify_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStatusNotify(global::C2GNet.StatusNotify value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStatusNotify &&
            result.statusNotify_ != global::C2GNet.StatusNotify.DefaultInstance) {
            result.statusNotify_ = global::C2GNet.StatusNotify.CreateBuilder(result.statusNotify_).MergeFrom(value).BuildPartial();
        } else {
          result.statusNotify_ = value;
        }
        result.hasStatusNotify = true;
        return this;
      }
      public Builder ClearStatusNotify() {
        PrepareBuilder();
        result.hasStatusNotify = false;
        result.statusNotify_ = null;
        return this;
      }
    }
    static NetMessageResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserLoginRequest : pb::GeneratedMessage<UserLoginRequest, UserLoginRequest.Builder> {
    private UserLoginRequest() { }
    private static readonly UserLoginRequest defaultInstance = new UserLoginRequest().MakeReadOnly();
    private static readonly string[] _userLoginRequestFieldNames = new string[] { "passward", "userName" };
    private static readonly uint[] _userLoginRequestFieldTags = new uint[] { 18, 10 };
    public static UserLoginRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserLoginRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserLoginRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserLoginRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserLoginRequest, UserLoginRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserLoginRequest__FieldAccessorTable; }
    }
    
    public const int UserNameFieldNumber = 1;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int PasswardFieldNumber = 2;
    private bool hasPassward;
    private string passward_ = "";
    public bool HasPassward {
      get { return hasPassward; }
    }
    public string Passward {
      get { return passward_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userLoginRequestFieldNames;
      if (hasUserName) {
        output.WriteString(1, field_names[1], UserName);
      }
      if (hasPassward) {
        output.WriteString(2, field_names[0], Passward);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserName);
      }
      if (hasPassward) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Passward);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserLoginRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserLoginRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserLoginRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserLoginRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserLoginRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserLoginRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserLoginRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserLoginRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserLoginRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserLoginRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserLoginRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserLoginRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserLoginRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserLoginRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserLoginRequest result;
      
      private UserLoginRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserLoginRequest original = result;
          result = new UserLoginRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserLoginRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UserLoginRequest.Descriptor; }
      }
      
      public override UserLoginRequest DefaultInstanceForType {
        get { return global::C2GNet.UserLoginRequest.DefaultInstance; }
      }
      
      public override UserLoginRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserLoginRequest) {
          return MergeFrom((UserLoginRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserLoginRequest other) {
        if (other == global::C2GNet.UserLoginRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasPassward) {
          Passward = other.Passward;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userLoginRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userLoginRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 18: {
              result.hasPassward = input.ReadString(ref result.passward_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasPassward {
        get { return result.hasPassward; }
      }
      public string Passward {
        get { return result.Passward; }
        set { SetPassward(value); }
      }
      public Builder SetPassward(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassward = true;
        result.passward_ = value;
        return this;
      }
      public Builder ClearPassward() {
        PrepareBuilder();
        result.hasPassward = false;
        result.passward_ = "";
        return this;
      }
    }
    static UserLoginRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserLoginResponse : pb::GeneratedMessage<UserLoginResponse, UserLoginResponse.Builder> {
    private UserLoginResponse() { }
    private static readonly UserLoginResponse defaultInstance = new UserLoginResponse().MakeReadOnly();
    private static readonly string[] _userLoginResponseFieldNames = new string[] { "errormsg", "result", "user" };
    private static readonly uint[] _userLoginResponseFieldTags = new uint[] { 18, 8, 26 };
    public static UserLoginResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserLoginResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserLoginResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserLoginResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserLoginResponse, UserLoginResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserLoginResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public const int UserFieldNumber = 3;
    private bool hasUser;
    private global::C2GNet.NUser user_;
    public bool HasUser {
      get { return hasUser; }
    }
    public global::C2GNet.NUser User {
      get { return user_ ?? global::C2GNet.NUser.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userLoginResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      if (hasUser) {
        output.WriteMessage(3, field_names[2], User);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      if (hasUser) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, User);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserLoginResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserLoginResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserLoginResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserLoginResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserLoginResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserLoginResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserLoginResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserLoginResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserLoginResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserLoginResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserLoginResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserLoginResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserLoginResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserLoginResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserLoginResponse result;
      
      private UserLoginResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UserLoginResponse original = result;
          result = new UserLoginResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserLoginResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UserLoginResponse.Descriptor; }
      }
      
      public override UserLoginResponse DefaultInstanceForType {
        get { return global::C2GNet.UserLoginResponse.DefaultInstance; }
      }
      
      public override UserLoginResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserLoginResponse) {
          return MergeFrom((UserLoginResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserLoginResponse other) {
        if (other == global::C2GNet.UserLoginResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        if (other.HasUser) {
          MergeUser(other.User);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userLoginResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userLoginResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
            case 26: {
              global::C2GNet.NUser.Builder subBuilder = global::C2GNet.NUser.CreateBuilder();
              if (result.hasUser) {
                subBuilder.MergeFrom(User);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              User = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
      
      public bool HasUser {
       get { return result.hasUser; }
      }
      public global::C2GNet.NUser User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(global::C2GNet.NUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder SetUser(global::C2GNet.NUser.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUser(global::C2GNet.NUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUser &&
            result.user_ != global::C2GNet.NUser.DefaultInstance) {
            result.user_ = global::C2GNet.NUser.CreateBuilder(result.user_).MergeFrom(value).BuildPartial();
        } else {
          result.user_ = value;
        }
        result.hasUser = true;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = null;
        return this;
      }
    }
    static UserLoginResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserRegisterRequest : pb::GeneratedMessage<UserRegisterRequest, UserRegisterRequest.Builder> {
    private UserRegisterRequest() { }
    private static readonly UserRegisterRequest defaultInstance = new UserRegisterRequest().MakeReadOnly();
    private static readonly string[] _userRegisterRequestFieldNames = new string[] { "password", "userName" };
    private static readonly uint[] _userRegisterRequestFieldTags = new uint[] { 18, 10 };
    public static UserRegisterRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserRegisterRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserRegisterRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserRegisterRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserRegisterRequest, UserRegisterRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserRegisterRequest__FieldAccessorTable; }
    }
    
    public const int UserNameFieldNumber = 1;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int PasswordFieldNumber = 2;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userRegisterRequestFieldNames;
      if (hasUserName) {
        output.WriteString(1, field_names[1], UserName);
      }
      if (hasPassword) {
        output.WriteString(2, field_names[0], Password);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserName);
      }
      if (hasPassword) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Password);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserRegisterRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserRegisterRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserRegisterRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserRegisterRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserRegisterRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserRegisterRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserRegisterRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserRegisterRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserRegisterRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserRegisterRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserRegisterRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserRegisterRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserRegisterRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserRegisterRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserRegisterRequest result;
      
      private UserRegisterRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserRegisterRequest original = result;
          result = new UserRegisterRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserRegisterRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UserRegisterRequest.Descriptor; }
      }
      
      public override UserRegisterRequest DefaultInstanceForType {
        get { return global::C2GNet.UserRegisterRequest.DefaultInstance; }
      }
      
      public override UserRegisterRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserRegisterRequest) {
          return MergeFrom((UserRegisterRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserRegisterRequest other) {
        if (other == global::C2GNet.UserRegisterRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userRegisterRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userRegisterRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 18: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
    }
    static UserRegisterRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserRegisterResponse : pb::GeneratedMessage<UserRegisterResponse, UserRegisterResponse.Builder> {
    private UserRegisterResponse() { }
    private static readonly UserRegisterResponse defaultInstance = new UserRegisterResponse().MakeReadOnly();
    private static readonly string[] _userRegisterResponseFieldNames = new string[] { "errormsg", "result" };
    private static readonly uint[] _userRegisterResponseFieldTags = new uint[] { 18, 8 };
    public static UserRegisterResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserRegisterResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserRegisterResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserRegisterResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserRegisterResponse, UserRegisterResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserRegisterResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userRegisterResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserRegisterResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserRegisterResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserRegisterResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserRegisterResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserRegisterResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserRegisterResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserRegisterResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserRegisterResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserRegisterResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserRegisterResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserRegisterResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserRegisterResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserRegisterResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserRegisterResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserRegisterResponse result;
      
      private UserRegisterResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UserRegisterResponse original = result;
          result = new UserRegisterResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserRegisterResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UserRegisterResponse.Descriptor; }
      }
      
      public override UserRegisterResponse DefaultInstanceForType {
        get { return global::C2GNet.UserRegisterResponse.DefaultInstance; }
      }
      
      public override UserRegisterResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserRegisterResponse) {
          return MergeFrom((UserRegisterResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserRegisterResponse other) {
        if (other == global::C2GNet.UserRegisterResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userRegisterResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userRegisterResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
    }
    static UserRegisterResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CharacterDetailRequest : pb::GeneratedMessage<CharacterDetailRequest, CharacterDetailRequest.Builder> {
    private CharacterDetailRequest() { }
    private static readonly CharacterDetailRequest defaultInstance = new CharacterDetailRequest().MakeReadOnly();
    private static readonly string[] _characterDetailRequestFieldNames = new string[] { "tCharacterId", "userId" };
    private static readonly uint[] _characterDetailRequestFieldTags = new uint[] { 16, 8 };
    public static CharacterDetailRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CharacterDetailRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CharacterDetailRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_CharacterDetailRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CharacterDetailRequest, CharacterDetailRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_CharacterDetailRequest__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    public const int TCharacterIdFieldNumber = 2;
    private bool hasTCharacterId;
    private int tCharacterId_;
    public bool HasTCharacterId {
      get { return hasTCharacterId; }
    }
    public int TCharacterId {
      get { return tCharacterId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _characterDetailRequestFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[1], UserId);
      }
      if (hasTCharacterId) {
        output.WriteInt32(2, field_names[0], TCharacterId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
      }
      if (hasTCharacterId) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, TCharacterId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CharacterDetailRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CharacterDetailRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CharacterDetailRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CharacterDetailRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CharacterDetailRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CharacterDetailRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CharacterDetailRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CharacterDetailRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CharacterDetailRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CharacterDetailRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CharacterDetailRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CharacterDetailRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CharacterDetailRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CharacterDetailRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CharacterDetailRequest result;
      
      private CharacterDetailRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CharacterDetailRequest original = result;
          result = new CharacterDetailRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CharacterDetailRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.CharacterDetailRequest.Descriptor; }
      }
      
      public override CharacterDetailRequest DefaultInstanceForType {
        get { return global::C2GNet.CharacterDetailRequest.DefaultInstance; }
      }
      
      public override CharacterDetailRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CharacterDetailRequest) {
          return MergeFrom((CharacterDetailRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CharacterDetailRequest other) {
        if (other == global::C2GNet.CharacterDetailRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasTCharacterId) {
          TCharacterId = other.TCharacterId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_characterDetailRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _characterDetailRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 16: {
              result.hasTCharacterId = input.ReadInt32(ref result.tCharacterId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasTCharacterId {
        get { return result.hasTCharacterId; }
      }
      public int TCharacterId {
        get { return result.TCharacterId; }
        set { SetTCharacterId(value); }
      }
      public Builder SetTCharacterId(int value) {
        PrepareBuilder();
        result.hasTCharacterId = true;
        result.tCharacterId_ = value;
        return this;
      }
      public Builder ClearTCharacterId() {
        PrepareBuilder();
        result.hasTCharacterId = false;
        result.tCharacterId_ = 0;
        return this;
      }
    }
    static CharacterDetailRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CharacterDetailResponse : pb::GeneratedMessage<CharacterDetailResponse, CharacterDetailResponse.Builder> {
    private CharacterDetailResponse() { }
    private static readonly CharacterDetailResponse defaultInstance = new CharacterDetailResponse().MakeReadOnly();
    private static readonly string[] _characterDetailResponseFieldNames = new string[] { "errormsg", "result", "user" };
    private static readonly uint[] _characterDetailResponseFieldTags = new uint[] { 18, 8, 26 };
    public static CharacterDetailResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CharacterDetailResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CharacterDetailResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_CharacterDetailResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CharacterDetailResponse, CharacterDetailResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_CharacterDetailResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public const int UserFieldNumber = 3;
    private bool hasUser;
    private global::C2GNet.NUser user_;
    public bool HasUser {
      get { return hasUser; }
    }
    public global::C2GNet.NUser User {
      get { return user_ ?? global::C2GNet.NUser.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _characterDetailResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      if (hasUser) {
        output.WriteMessage(3, field_names[2], User);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      if (hasUser) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, User);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CharacterDetailResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CharacterDetailResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CharacterDetailResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CharacterDetailResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CharacterDetailResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CharacterDetailResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CharacterDetailResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CharacterDetailResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CharacterDetailResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CharacterDetailResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CharacterDetailResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CharacterDetailResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CharacterDetailResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CharacterDetailResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CharacterDetailResponse result;
      
      private CharacterDetailResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CharacterDetailResponse original = result;
          result = new CharacterDetailResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CharacterDetailResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.CharacterDetailResponse.Descriptor; }
      }
      
      public override CharacterDetailResponse DefaultInstanceForType {
        get { return global::C2GNet.CharacterDetailResponse.DefaultInstance; }
      }
      
      public override CharacterDetailResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CharacterDetailResponse) {
          return MergeFrom((CharacterDetailResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CharacterDetailResponse other) {
        if (other == global::C2GNet.CharacterDetailResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        if (other.HasUser) {
          MergeUser(other.User);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_characterDetailResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _characterDetailResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
            case 26: {
              global::C2GNet.NUser.Builder subBuilder = global::C2GNet.NUser.CreateBuilder();
              if (result.hasUser) {
                subBuilder.MergeFrom(User);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              User = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
      
      public bool HasUser {
       get { return result.hasUser; }
      }
      public global::C2GNet.NUser User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(global::C2GNet.NUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder SetUser(global::C2GNet.NUser.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUser(global::C2GNet.NUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUser &&
            result.user_ != global::C2GNet.NUser.DefaultInstance) {
            result.user_ = global::C2GNet.NUser.CreateBuilder(result.user_).MergeFrom(value).BuildPartial();
        } else {
          result.user_ = value;
        }
        result.hasUser = true;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = null;
        return this;
      }
    }
    static CharacterDetailResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateNickNameRequest : pb::GeneratedMessage<UpdateNickNameRequest, UpdateNickNameRequest.Builder> {
    private UpdateNickNameRequest() { }
    private static readonly UpdateNickNameRequest defaultInstance = new UpdateNickNameRequest().MakeReadOnly();
    private static readonly string[] _updateNickNameRequestFieldNames = new string[] { "nickname" };
    private static readonly uint[] _updateNickNameRequestFieldTags = new uint[] { 10 };
    public static UpdateNickNameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateNickNameRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateNickNameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UpdateNickNameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateNickNameRequest, UpdateNickNameRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UpdateNickNameRequest__FieldAccessorTable; }
    }
    
    public const int NicknameFieldNumber = 1;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateNickNameRequestFieldNames;
      if (hasNickname) {
        output.WriteString(1, field_names[0], Nickname);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNickname) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Nickname);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateNickNameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateNickNameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateNickNameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateNickNameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateNickNameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateNickNameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateNickNameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateNickNameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateNickNameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateNickNameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateNickNameRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateNickNameRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateNickNameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateNickNameRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateNickNameRequest result;
      
      private UpdateNickNameRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateNickNameRequest original = result;
          result = new UpdateNickNameRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateNickNameRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UpdateNickNameRequest.Descriptor; }
      }
      
      public override UpdateNickNameRequest DefaultInstanceForType {
        get { return global::C2GNet.UpdateNickNameRequest.DefaultInstance; }
      }
      
      public override UpdateNickNameRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateNickNameRequest) {
          return MergeFrom((UpdateNickNameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateNickNameRequest other) {
        if (other == global::C2GNet.UpdateNickNameRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateNickNameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateNickNameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
    }
    static UpdateNickNameRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateNickNameResponse : pb::GeneratedMessage<UpdateNickNameResponse, UpdateNickNameResponse.Builder> {
    private UpdateNickNameResponse() { }
    private static readonly UpdateNickNameResponse defaultInstance = new UpdateNickNameResponse().MakeReadOnly();
    private static readonly string[] _updateNickNameResponseFieldNames = new string[] { "errormsg", "result" };
    private static readonly uint[] _updateNickNameResponseFieldTags = new uint[] { 18, 8 };
    public static UpdateNickNameResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateNickNameResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateNickNameResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UpdateNickNameResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateNickNameResponse, UpdateNickNameResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UpdateNickNameResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateNickNameResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateNickNameResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateNickNameResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateNickNameResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateNickNameResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateNickNameResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateNickNameResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateNickNameResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateNickNameResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateNickNameResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateNickNameResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateNickNameResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateNickNameResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateNickNameResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateNickNameResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateNickNameResponse result;
      
      private UpdateNickNameResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateNickNameResponse original = result;
          result = new UpdateNickNameResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateNickNameResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UpdateNickNameResponse.Descriptor; }
      }
      
      public override UpdateNickNameResponse DefaultInstanceForType {
        get { return global::C2GNet.UpdateNickNameResponse.DefaultInstance; }
      }
      
      public override UpdateNickNameResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateNickNameResponse) {
          return MergeFrom((UpdateNickNameResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateNickNameResponse other) {
        if (other == global::C2GNet.UpdateNickNameResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateNickNameResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateNickNameResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
    }
    static UpdateNickNameResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FollowRequest : pb::GeneratedMessage<FollowRequest, FollowRequest.Builder> {
    private FollowRequest() { }
    private static readonly FollowRequest defaultInstance = new FollowRequest().MakeReadOnly();
    private static readonly string[] _followRequestFieldNames = new string[] { "isFollow", "userId" };
    private static readonly uint[] _followRequestFieldTags = new uint[] { 16, 8 };
    public static FollowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FollowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FollowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_FollowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FollowRequest, FollowRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_FollowRequest__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    public const int IsFollowFieldNumber = 2;
    private bool hasIsFollow;
    private bool isFollow_;
    public bool HasIsFollow {
      get { return hasIsFollow; }
    }
    public bool IsFollow {
      get { return isFollow_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _followRequestFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[1], UserId);
      }
      if (hasIsFollow) {
        output.WriteBool(2, field_names[0], IsFollow);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
      }
      if (hasIsFollow) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsFollow);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FollowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FollowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FollowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FollowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FollowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FollowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FollowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FollowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FollowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FollowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FollowRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FollowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FollowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FollowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FollowRequest result;
      
      private FollowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          FollowRequest original = result;
          result = new FollowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FollowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.FollowRequest.Descriptor; }
      }
      
      public override FollowRequest DefaultInstanceForType {
        get { return global::C2GNet.FollowRequest.DefaultInstance; }
      }
      
      public override FollowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FollowRequest) {
          return MergeFrom((FollowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FollowRequest other) {
        if (other == global::C2GNet.FollowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasIsFollow) {
          IsFollow = other.IsFollow;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_followRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _followRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 16: {
              result.hasIsFollow = input.ReadBool(ref result.isFollow_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasIsFollow {
        get { return result.hasIsFollow; }
      }
      public bool IsFollow {
        get { return result.IsFollow; }
        set { SetIsFollow(value); }
      }
      public Builder SetIsFollow(bool value) {
        PrepareBuilder();
        result.hasIsFollow = true;
        result.isFollow_ = value;
        return this;
      }
      public Builder ClearIsFollow() {
        PrepareBuilder();
        result.hasIsFollow = false;
        result.isFollow_ = false;
        return this;
      }
    }
    static FollowRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FollowResponse : pb::GeneratedMessage<FollowResponse, FollowResponse.Builder> {
    private FollowResponse() { }
    private static readonly FollowResponse defaultInstance = new FollowResponse().MakeReadOnly();
    private static readonly string[] _followResponseFieldNames = new string[] { "errormsg", "result" };
    private static readonly uint[] _followResponseFieldTags = new uint[] { 18, 8 };
    public static FollowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FollowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FollowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_FollowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FollowResponse, FollowResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_FollowResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _followResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FollowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FollowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FollowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FollowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FollowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FollowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FollowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FollowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FollowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FollowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FollowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FollowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FollowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FollowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FollowResponse result;
      
      private FollowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          FollowResponse original = result;
          result = new FollowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FollowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.FollowResponse.Descriptor; }
      }
      
      public override FollowResponse DefaultInstanceForType {
        get { return global::C2GNet.FollowResponse.DefaultInstance; }
      }
      
      public override FollowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FollowResponse) {
          return MergeFrom((FollowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FollowResponse other) {
        if (other == global::C2GNet.FollowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_followResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _followResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
    }
    static FollowResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UnLockRequest : pb::GeneratedMessage<UnLockRequest, UnLockRequest.Builder> {
    private UnLockRequest() { }
    private static readonly UnLockRequest defaultInstance = new UnLockRequest().MakeReadOnly();
    private static readonly string[] _unLockRequestFieldNames = new string[] { "cCharacterId" };
    private static readonly uint[] _unLockRequestFieldTags = new uint[] { 8 };
    public static UnLockRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnLockRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnLockRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UnLockRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnLockRequest, UnLockRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UnLockRequest__FieldAccessorTable; }
    }
    
    public const int CCharacterIdFieldNumber = 1;
    private bool hasCCharacterId;
    private int cCharacterId_;
    public bool HasCCharacterId {
      get { return hasCCharacterId; }
    }
    public int CCharacterId {
      get { return cCharacterId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _unLockRequestFieldNames;
      if (hasCCharacterId) {
        output.WriteInt32(1, field_names[0], CCharacterId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCCharacterId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, CCharacterId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UnLockRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnLockRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnLockRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnLockRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnLockRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnLockRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnLockRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnLockRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnLockRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnLockRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnLockRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnLockRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UnLockRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnLockRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnLockRequest result;
      
      private UnLockRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnLockRequest original = result;
          result = new UnLockRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnLockRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UnLockRequest.Descriptor; }
      }
      
      public override UnLockRequest DefaultInstanceForType {
        get { return global::C2GNet.UnLockRequest.DefaultInstance; }
      }
      
      public override UnLockRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnLockRequest) {
          return MergeFrom((UnLockRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnLockRequest other) {
        if (other == global::C2GNet.UnLockRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCCharacterId) {
          CCharacterId = other.CCharacterId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unLockRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unLockRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasCCharacterId = input.ReadInt32(ref result.cCharacterId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCCharacterId {
        get { return result.hasCCharacterId; }
      }
      public int CCharacterId {
        get { return result.CCharacterId; }
        set { SetCCharacterId(value); }
      }
      public Builder SetCCharacterId(int value) {
        PrepareBuilder();
        result.hasCCharacterId = true;
        result.cCharacterId_ = value;
        return this;
      }
      public Builder ClearCCharacterId() {
        PrepareBuilder();
        result.hasCCharacterId = false;
        result.cCharacterId_ = 0;
        return this;
      }
    }
    static UnLockRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UnLockResponse : pb::GeneratedMessage<UnLockResponse, UnLockResponse.Builder> {
    private UnLockResponse() { }
    private static readonly UnLockResponse defaultInstance = new UnLockResponse().MakeReadOnly();
    private static readonly string[] _unLockResponseFieldNames = new string[] { "errormsg", "result", "unLockCharacter" };
    private static readonly uint[] _unLockResponseFieldTags = new uint[] { 18, 8, 26 };
    public static UnLockResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnLockResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnLockResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UnLockResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnLockResponse, UnLockResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UnLockResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public const int UnLockCharacterFieldNumber = 3;
    private bool hasUnLockCharacter;
    private global::C2GNet.UnLockCharacter unLockCharacter_;
    public bool HasUnLockCharacter {
      get { return hasUnLockCharacter; }
    }
    public global::C2GNet.UnLockCharacter UnLockCharacter {
      get { return unLockCharacter_ ?? global::C2GNet.UnLockCharacter.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _unLockResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      if (hasUnLockCharacter) {
        output.WriteMessage(3, field_names[2], UnLockCharacter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      if (hasUnLockCharacter) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, UnLockCharacter);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UnLockResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnLockResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnLockResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnLockResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnLockResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnLockResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnLockResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnLockResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnLockResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnLockResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnLockResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnLockResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UnLockResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnLockResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnLockResponse result;
      
      private UnLockResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UnLockResponse original = result;
          result = new UnLockResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnLockResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UnLockResponse.Descriptor; }
      }
      
      public override UnLockResponse DefaultInstanceForType {
        get { return global::C2GNet.UnLockResponse.DefaultInstance; }
      }
      
      public override UnLockResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnLockResponse) {
          return MergeFrom((UnLockResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnLockResponse other) {
        if (other == global::C2GNet.UnLockResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        if (other.HasUnLockCharacter) {
          MergeUnLockCharacter(other.UnLockCharacter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unLockResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unLockResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
            case 26: {
              global::C2GNet.UnLockCharacter.Builder subBuilder = global::C2GNet.UnLockCharacter.CreateBuilder();
              if (result.hasUnLockCharacter) {
                subBuilder.MergeFrom(UnLockCharacter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UnLockCharacter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
      
      public bool HasUnLockCharacter {
       get { return result.hasUnLockCharacter; }
      }
      public global::C2GNet.UnLockCharacter UnLockCharacter {
        get { return result.UnLockCharacter; }
        set { SetUnLockCharacter(value); }
      }
      public Builder SetUnLockCharacter(global::C2GNet.UnLockCharacter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUnLockCharacter = true;
        result.unLockCharacter_ = value;
        return this;
      }
      public Builder SetUnLockCharacter(global::C2GNet.UnLockCharacter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUnLockCharacter = true;
        result.unLockCharacter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUnLockCharacter(global::C2GNet.UnLockCharacter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUnLockCharacter &&
            result.unLockCharacter_ != global::C2GNet.UnLockCharacter.DefaultInstance) {
            result.unLockCharacter_ = global::C2GNet.UnLockCharacter.CreateBuilder(result.unLockCharacter_).MergeFrom(value).BuildPartial();
        } else {
          result.unLockCharacter_ = value;
        }
        result.hasUnLockCharacter = true;
        return this;
      }
      public Builder ClearUnLockCharacter() {
        PrepareBuilder();
        result.hasUnLockCharacter = false;
        result.unLockCharacter_ = null;
        return this;
      }
    }
    static UnLockResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SwitchCharacterRequest : pb::GeneratedMessage<SwitchCharacterRequest, SwitchCharacterRequest.Builder> {
    private SwitchCharacterRequest() { }
    private static readonly SwitchCharacterRequest defaultInstance = new SwitchCharacterRequest().MakeReadOnly();
    private static readonly string[] _switchCharacterRequestFieldNames = new string[] { "tCharacterId" };
    private static readonly uint[] _switchCharacterRequestFieldTags = new uint[] { 8 };
    public static SwitchCharacterRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SwitchCharacterRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SwitchCharacterRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_SwitchCharacterRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SwitchCharacterRequest, SwitchCharacterRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_SwitchCharacterRequest__FieldAccessorTable; }
    }
    
    public const int TCharacterIdFieldNumber = 1;
    private bool hasTCharacterId;
    private int tCharacterId_;
    public bool HasTCharacterId {
      get { return hasTCharacterId; }
    }
    public int TCharacterId {
      get { return tCharacterId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _switchCharacterRequestFieldNames;
      if (hasTCharacterId) {
        output.WriteInt32(1, field_names[0], TCharacterId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTCharacterId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TCharacterId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SwitchCharacterRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SwitchCharacterRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SwitchCharacterRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SwitchCharacterRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SwitchCharacterRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SwitchCharacterRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SwitchCharacterRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SwitchCharacterRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SwitchCharacterRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SwitchCharacterRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SwitchCharacterRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SwitchCharacterRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SwitchCharacterRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SwitchCharacterRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SwitchCharacterRequest result;
      
      private SwitchCharacterRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SwitchCharacterRequest original = result;
          result = new SwitchCharacterRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SwitchCharacterRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.SwitchCharacterRequest.Descriptor; }
      }
      
      public override SwitchCharacterRequest DefaultInstanceForType {
        get { return global::C2GNet.SwitchCharacterRequest.DefaultInstance; }
      }
      
      public override SwitchCharacterRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SwitchCharacterRequest) {
          return MergeFrom((SwitchCharacterRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SwitchCharacterRequest other) {
        if (other == global::C2GNet.SwitchCharacterRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTCharacterId) {
          TCharacterId = other.TCharacterId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_switchCharacterRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _switchCharacterRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTCharacterId = input.ReadInt32(ref result.tCharacterId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTCharacterId {
        get { return result.hasTCharacterId; }
      }
      public int TCharacterId {
        get { return result.TCharacterId; }
        set { SetTCharacterId(value); }
      }
      public Builder SetTCharacterId(int value) {
        PrepareBuilder();
        result.hasTCharacterId = true;
        result.tCharacterId_ = value;
        return this;
      }
      public Builder ClearTCharacterId() {
        PrepareBuilder();
        result.hasTCharacterId = false;
        result.tCharacterId_ = 0;
        return this;
      }
    }
    static SwitchCharacterRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SwitchCharacterResponse : pb::GeneratedMessage<SwitchCharacterResponse, SwitchCharacterResponse.Builder> {
    private SwitchCharacterResponse() { }
    private static readonly SwitchCharacterResponse defaultInstance = new SwitchCharacterResponse().MakeReadOnly();
    private static readonly string[] _switchCharacterResponseFieldNames = new string[] { "character", "errormsg", "result" };
    private static readonly uint[] _switchCharacterResponseFieldTags = new uint[] { 26, 18, 8 };
    public static SwitchCharacterResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SwitchCharacterResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SwitchCharacterResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_SwitchCharacterResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SwitchCharacterResponse, SwitchCharacterResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_SwitchCharacterResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public const int CharacterFieldNumber = 3;
    private bool hasCharacter;
    private global::C2GNet.NCharacter character_;
    public bool HasCharacter {
      get { return hasCharacter; }
    }
    public global::C2GNet.NCharacter Character {
      get { return character_ ?? global::C2GNet.NCharacter.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _switchCharacterResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[2], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[1], Errormsg);
      }
      if (hasCharacter) {
        output.WriteMessage(3, field_names[0], Character);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      if (hasCharacter) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Character);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SwitchCharacterResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SwitchCharacterResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SwitchCharacterResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SwitchCharacterResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SwitchCharacterResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SwitchCharacterResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SwitchCharacterResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SwitchCharacterResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SwitchCharacterResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SwitchCharacterResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SwitchCharacterResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SwitchCharacterResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SwitchCharacterResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SwitchCharacterResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SwitchCharacterResponse result;
      
      private SwitchCharacterResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SwitchCharacterResponse original = result;
          result = new SwitchCharacterResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SwitchCharacterResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.SwitchCharacterResponse.Descriptor; }
      }
      
      public override SwitchCharacterResponse DefaultInstanceForType {
        get { return global::C2GNet.SwitchCharacterResponse.DefaultInstance; }
      }
      
      public override SwitchCharacterResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SwitchCharacterResponse) {
          return MergeFrom((SwitchCharacterResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SwitchCharacterResponse other) {
        if (other == global::C2GNet.SwitchCharacterResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        if (other.HasCharacter) {
          MergeCharacter(other.Character);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_switchCharacterResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _switchCharacterResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
            case 26: {
              global::C2GNet.NCharacter.Builder subBuilder = global::C2GNet.NCharacter.CreateBuilder();
              if (result.hasCharacter) {
                subBuilder.MergeFrom(Character);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Character = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
      
      public bool HasCharacter {
       get { return result.hasCharacter; }
      }
      public global::C2GNet.NCharacter Character {
        get { return result.Character; }
        set { SetCharacter(value); }
      }
      public Builder SetCharacter(global::C2GNet.NCharacter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCharacter = true;
        result.character_ = value;
        return this;
      }
      public Builder SetCharacter(global::C2GNet.NCharacter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCharacter = true;
        result.character_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCharacter(global::C2GNet.NCharacter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCharacter &&
            result.character_ != global::C2GNet.NCharacter.DefaultInstance) {
            result.character_ = global::C2GNet.NCharacter.CreateBuilder(result.character_).MergeFrom(value).BuildPartial();
        } else {
          result.character_ = value;
        }
        result.hasCharacter = true;
        return this;
      }
      public Builder ClearCharacter() {
        PrepareBuilder();
        result.hasCharacter = false;
        result.character_ = null;
        return this;
      }
    }
    static SwitchCharacterResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserStatusChangeResponse : pb::GeneratedMessage<UserStatusChangeResponse, UserStatusChangeResponse.Builder> {
    private UserStatusChangeResponse() { }
    private static readonly UserStatusChangeResponse defaultInstance = new UserStatusChangeResponse().MakeReadOnly();
    private static readonly string[] _userStatusChangeResponseFieldNames = new string[] { "userStatusChanges" };
    private static readonly uint[] _userStatusChangeResponseFieldTags = new uint[] { 10 };
    public static UserStatusChangeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserStatusChangeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserStatusChangeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserStatusChangeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserStatusChangeResponse, UserStatusChangeResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserStatusChangeResponse__FieldAccessorTable; }
    }
    
    public const int UserStatusChangesFieldNumber = 1;
    private pbc::PopsicleList<global::C2GNet.NUserStatusChange> userStatusChanges_ = new pbc::PopsicleList<global::C2GNet.NUserStatusChange>();
    public scg::IList<global::C2GNet.NUserStatusChange> UserStatusChangesList {
      get { return userStatusChanges_; }
    }
    public int UserStatusChangesCount {
      get { return userStatusChanges_.Count; }
    }
    public global::C2GNet.NUserStatusChange GetUserStatusChanges(int index) {
      return userStatusChanges_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userStatusChangeResponseFieldNames;
      if (userStatusChanges_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], userStatusChanges_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::C2GNet.NUserStatusChange element in UserStatusChangesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserStatusChangeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserStatusChangeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserStatusChangeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserStatusChangeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserStatusChangeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserStatusChangeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserStatusChangeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserStatusChangeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserStatusChangeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserStatusChangeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserStatusChangeResponse MakeReadOnly() {
      userStatusChanges_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserStatusChangeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserStatusChangeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserStatusChangeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserStatusChangeResponse result;
      
      private UserStatusChangeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UserStatusChangeResponse original = result;
          result = new UserStatusChangeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserStatusChangeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UserStatusChangeResponse.Descriptor; }
      }
      
      public override UserStatusChangeResponse DefaultInstanceForType {
        get { return global::C2GNet.UserStatusChangeResponse.DefaultInstance; }
      }
      
      public override UserStatusChangeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserStatusChangeResponse) {
          return MergeFrom((UserStatusChangeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserStatusChangeResponse other) {
        if (other == global::C2GNet.UserStatusChangeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.userStatusChanges_.Count != 0) {
          result.userStatusChanges_.Add(other.userStatusChanges_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userStatusChangeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userStatusChangeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.userStatusChanges_, global::C2GNet.NUserStatusChange.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::C2GNet.NUserStatusChange> UserStatusChangesList {
        get { return PrepareBuilder().userStatusChanges_; }
      }
      public int UserStatusChangesCount {
        get { return result.UserStatusChangesCount; }
      }
      public global::C2GNet.NUserStatusChange GetUserStatusChanges(int index) {
        return result.GetUserStatusChanges(index);
      }
      public Builder SetUserStatusChanges(int index, global::C2GNet.NUserStatusChange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userStatusChanges_[index] = value;
        return this;
      }
      public Builder SetUserStatusChanges(int index, global::C2GNet.NUserStatusChange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userStatusChanges_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUserStatusChanges(global::C2GNet.NUserStatusChange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userStatusChanges_.Add(value);
        return this;
      }
      public Builder AddUserStatusChanges(global::C2GNet.NUserStatusChange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userStatusChanges_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUserStatusChanges(scg::IEnumerable<global::C2GNet.NUserStatusChange> values) {
        PrepareBuilder();
        result.userStatusChanges_.Add(values);
        return this;
      }
      public Builder ClearUserStatusChanges() {
        PrepareBuilder();
        result.userStatusChanges_.Clear();
        return this;
      }
    }
    static UserStatusChangeResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HeartBeatRequest : pb::GeneratedMessage<HeartBeatRequest, HeartBeatRequest.Builder> {
    private HeartBeatRequest() { }
    private static readonly HeartBeatRequest defaultInstance = new HeartBeatRequest().MakeReadOnly();
    private static readonly string[] _heartBeatRequestFieldNames = new string[] {  };
    private static readonly uint[] _heartBeatRequestFieldTags = new uint[] {  };
    public static HeartBeatRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HeartBeatRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HeartBeatRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_HeartBeatRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HeartBeatRequest, HeartBeatRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_HeartBeatRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _heartBeatRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static HeartBeatRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HeartBeatRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HeartBeatRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HeartBeatRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HeartBeatRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HeartBeatRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HeartBeatRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HeartBeatRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HeartBeatRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HeartBeatRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HeartBeatRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HeartBeatRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<HeartBeatRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HeartBeatRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HeartBeatRequest result;
      
      private HeartBeatRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          HeartBeatRequest original = result;
          result = new HeartBeatRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HeartBeatRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.HeartBeatRequest.Descriptor; }
      }
      
      public override HeartBeatRequest DefaultInstanceForType {
        get { return global::C2GNet.HeartBeatRequest.DefaultInstance; }
      }
      
      public override HeartBeatRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HeartBeatRequest) {
          return MergeFrom((HeartBeatRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HeartBeatRequest other) {
        if (other == global::C2GNet.HeartBeatRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_heartBeatRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _heartBeatRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static HeartBeatRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HeartBeatResponse : pb::GeneratedMessage<HeartBeatResponse, HeartBeatResponse.Builder> {
    private HeartBeatResponse() { }
    private static readonly HeartBeatResponse defaultInstance = new HeartBeatResponse().MakeReadOnly();
    private static readonly string[] _heartBeatResponseFieldNames = new string[] { "liveFenSiCount" };
    private static readonly uint[] _heartBeatResponseFieldTags = new uint[] { 8 };
    public static HeartBeatResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HeartBeatResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HeartBeatResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_HeartBeatResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HeartBeatResponse, HeartBeatResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_HeartBeatResponse__FieldAccessorTable; }
    }
    
    public const int LiveFenSiCountFieldNumber = 1;
    private bool hasLiveFenSiCount;
    private int liveFenSiCount_;
    public bool HasLiveFenSiCount {
      get { return hasLiveFenSiCount; }
    }
    public int LiveFenSiCount {
      get { return liveFenSiCount_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _heartBeatResponseFieldNames;
      if (hasLiveFenSiCount) {
        output.WriteInt32(1, field_names[0], LiveFenSiCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLiveFenSiCount) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, LiveFenSiCount);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static HeartBeatResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HeartBeatResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HeartBeatResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HeartBeatResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HeartBeatResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HeartBeatResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HeartBeatResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HeartBeatResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HeartBeatResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HeartBeatResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HeartBeatResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HeartBeatResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<HeartBeatResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HeartBeatResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HeartBeatResponse result;
      
      private HeartBeatResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          HeartBeatResponse original = result;
          result = new HeartBeatResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HeartBeatResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.HeartBeatResponse.Descriptor; }
      }
      
      public override HeartBeatResponse DefaultInstanceForType {
        get { return global::C2GNet.HeartBeatResponse.DefaultInstance; }
      }
      
      public override HeartBeatResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HeartBeatResponse) {
          return MergeFrom((HeartBeatResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HeartBeatResponse other) {
        if (other == global::C2GNet.HeartBeatResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLiveFenSiCount) {
          LiveFenSiCount = other.LiveFenSiCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_heartBeatResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _heartBeatResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasLiveFenSiCount = input.ReadInt32(ref result.liveFenSiCount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLiveFenSiCount {
        get { return result.hasLiveFenSiCount; }
      }
      public int LiveFenSiCount {
        get { return result.LiveFenSiCount; }
        set { SetLiveFenSiCount(value); }
      }
      public Builder SetLiveFenSiCount(int value) {
        PrepareBuilder();
        result.hasLiveFenSiCount = true;
        result.liveFenSiCount_ = value;
        return this;
      }
      public Builder ClearLiveFenSiCount() {
        PrepareBuilder();
        result.hasLiveFenSiCount = false;
        result.liveFenSiCount_ = 0;
        return this;
      }
    }
    static HeartBeatResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TipsResponse : pb::GeneratedMessage<TipsResponse, TipsResponse.Builder> {
    private TipsResponse() { }
    private static readonly TipsResponse defaultInstance = new TipsResponse().MakeReadOnly();
    private static readonly string[] _tipsResponseFieldNames = new string[] { "content", "tipsType", "tipsWorkType" };
    private static readonly uint[] _tipsResponseFieldTags = new uint[] { 18, 8, 24 };
    public static TipsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TipsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TipsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_TipsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TipsResponse, TipsResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_TipsResponse__FieldAccessorTable; }
    }
    
    public const int TipsTypeFieldNumber = 1;
    private bool hasTipsType;
    private global::C2GNet.TipsType tipsType_ = global::C2GNet.TipsType.Tips;
    public bool HasTipsType {
      get { return hasTipsType; }
    }
    public global::C2GNet.TipsType TipsType {
      get { return tipsType_; }
    }
    
    public const int ContentFieldNumber = 2;
    private bool hasContent;
    private string content_ = "";
    public bool HasContent {
      get { return hasContent; }
    }
    public string Content {
      get { return content_; }
    }
    
    public const int TipsWorkTypeFieldNumber = 3;
    private bool hasTipsWorkType;
    private global::C2GNet.TipsWorkType tipsWorkType_ = global::C2GNet.TipsWorkType.None;
    public bool HasTipsWorkType {
      get { return hasTipsWorkType; }
    }
    public global::C2GNet.TipsWorkType TipsWorkType {
      get { return tipsWorkType_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tipsResponseFieldNames;
      if (hasTipsType) {
        output.WriteEnum(1, field_names[1], (int) TipsType, TipsType);
      }
      if (hasContent) {
        output.WriteString(2, field_names[0], Content);
      }
      if (hasTipsWorkType) {
        output.WriteEnum(3, field_names[2], (int) TipsWorkType, TipsWorkType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTipsType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) TipsType);
      }
      if (hasContent) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Content);
      }
      if (hasTipsWorkType) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) TipsWorkType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TipsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TipsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TipsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TipsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TipsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TipsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TipsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TipsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TipsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TipsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TipsResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TipsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TipsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TipsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TipsResponse result;
      
      private TipsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          TipsResponse original = result;
          result = new TipsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TipsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.TipsResponse.Descriptor; }
      }
      
      public override TipsResponse DefaultInstanceForType {
        get { return global::C2GNet.TipsResponse.DefaultInstance; }
      }
      
      public override TipsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TipsResponse) {
          return MergeFrom((TipsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TipsResponse other) {
        if (other == global::C2GNet.TipsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTipsType) {
          TipsType = other.TipsType;
        }
        if (other.HasContent) {
          Content = other.Content;
        }
        if (other.HasTipsWorkType) {
          TipsWorkType = other.TipsWorkType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tipsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tipsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.tipsType_, out unknown)) {
                result.hasTipsType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasContent = input.ReadString(ref result.content_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.tipsWorkType_, out unknown)) {
                result.hasTipsWorkType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTipsType {
       get { return result.hasTipsType; }
      }
      public global::C2GNet.TipsType TipsType {
        get { return result.TipsType; }
        set { SetTipsType(value); }
      }
      public Builder SetTipsType(global::C2GNet.TipsType value) {
        PrepareBuilder();
        result.hasTipsType = true;
        result.tipsType_ = value;
        return this;
      }
      public Builder ClearTipsType() {
        PrepareBuilder();
        result.hasTipsType = false;
        result.tipsType_ = global::C2GNet.TipsType.Tips;
        return this;
      }
      
      public bool HasContent {
        get { return result.hasContent; }
      }
      public string Content {
        get { return result.Content; }
        set { SetContent(value); }
      }
      public Builder SetContent(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder ClearContent() {
        PrepareBuilder();
        result.hasContent = false;
        result.content_ = "";
        return this;
      }
      
      public bool HasTipsWorkType {
       get { return result.hasTipsWorkType; }
      }
      public global::C2GNet.TipsWorkType TipsWorkType {
        get { return result.TipsWorkType; }
        set { SetTipsWorkType(value); }
      }
      public Builder SetTipsWorkType(global::C2GNet.TipsWorkType value) {
        PrepareBuilder();
        result.hasTipsWorkType = true;
        result.tipsWorkType_ = value;
        return this;
      }
      public Builder ClearTipsWorkType() {
        PrepareBuilder();
        result.hasTipsWorkType = false;
        result.tipsWorkType_ = global::C2GNet.TipsWorkType.None;
        return this;
      }
    }
    static TipsResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RoomUser : pb::GeneratedMessage<RoomUser, RoomUser.Builder> {
    private RoomUser() { }
    private static readonly RoomUser defaultInstance = new RoomUser().MakeReadOnly();
    private static readonly string[] _roomUserFieldNames = new string[] { "cCharacterId", "nickName", "roomNum", "teamId", "user", "userId" };
    private static readonly uint[] _roomUserFieldTags = new uint[] { 24, 18, 48, 40, 34, 8 };
    public static RoomUser DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RoomUser DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RoomUser ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_RoomUser__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RoomUser, RoomUser.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_RoomUser__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    public const int NickNameFieldNumber = 2;
    private bool hasNickName;
    private string nickName_ = "";
    public bool HasNickName {
      get { return hasNickName; }
    }
    public string NickName {
      get { return nickName_; }
    }
    
    public const int CCharacterIdFieldNumber = 3;
    private bool hasCCharacterId;
    private int cCharacterId_;
    public bool HasCCharacterId {
      get { return hasCCharacterId; }
    }
    public int CCharacterId {
      get { return cCharacterId_; }
    }
    
    public const int UserFieldNumber = 4;
    private bool hasUser;
    private global::C2GNet.NUser user_;
    public bool HasUser {
      get { return hasUser; }
    }
    public global::C2GNet.NUser User {
      get { return user_ ?? global::C2GNet.NUser.DefaultInstance; }
    }
    
    public const int TeamIdFieldNumber = 5;
    private bool hasTeamId;
    private int teamId_;
    public bool HasTeamId {
      get { return hasTeamId; }
    }
    public int TeamId {
      get { return teamId_; }
    }
    
    public const int RoomNumFieldNumber = 6;
    private bool hasRoomNum;
    private int roomNum_;
    public bool HasRoomNum {
      get { return hasRoomNum; }
    }
    public int RoomNum {
      get { return roomNum_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _roomUserFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[5], UserId);
      }
      if (hasNickName) {
        output.WriteString(2, field_names[1], NickName);
      }
      if (hasCCharacterId) {
        output.WriteInt32(3, field_names[0], CCharacterId);
      }
      if (hasUser) {
        output.WriteMessage(4, field_names[4], User);
      }
      if (hasTeamId) {
        output.WriteInt32(5, field_names[3], TeamId);
      }
      if (hasRoomNum) {
        output.WriteInt32(6, field_names[2], RoomNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
      }
      if (hasNickName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, NickName);
      }
      if (hasCCharacterId) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, CCharacterId);
      }
      if (hasUser) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, User);
      }
      if (hasTeamId) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, TeamId);
      }
      if (hasRoomNum) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, RoomNum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RoomUser ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoomUser ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoomUser ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoomUser ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoomUser ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoomUser ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RoomUser ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RoomUser ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RoomUser ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoomUser ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RoomUser MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RoomUser prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RoomUser, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RoomUser cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RoomUser result;
      
      private RoomUser PrepareBuilder() {
        if (resultIsReadOnly) {
          RoomUser original = result;
          result = new RoomUser();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RoomUser MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.RoomUser.Descriptor; }
      }
      
      public override RoomUser DefaultInstanceForType {
        get { return global::C2GNet.RoomUser.DefaultInstance; }
      }
      
      public override RoomUser BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RoomUser) {
          return MergeFrom((RoomUser) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RoomUser other) {
        if (other == global::C2GNet.RoomUser.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasNickName) {
          NickName = other.NickName;
        }
        if (other.HasCCharacterId) {
          CCharacterId = other.CCharacterId;
        }
        if (other.HasUser) {
          MergeUser(other.User);
        }
        if (other.HasTeamId) {
          TeamId = other.TeamId;
        }
        if (other.HasRoomNum) {
          RoomNum = other.RoomNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roomUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roomUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 18: {
              result.hasNickName = input.ReadString(ref result.nickName_);
              break;
            }
            case 24: {
              result.hasCCharacterId = input.ReadInt32(ref result.cCharacterId_);
              break;
            }
            case 34: {
              global::C2GNet.NUser.Builder subBuilder = global::C2GNet.NUser.CreateBuilder();
              if (result.hasUser) {
                subBuilder.MergeFrom(User);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              User = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasTeamId = input.ReadInt32(ref result.teamId_);
              break;
            }
            case 48: {
              result.hasRoomNum = input.ReadInt32(ref result.roomNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasNickName {
        get { return result.hasNickName; }
      }
      public string NickName {
        get { return result.NickName; }
        set { SetNickName(value); }
      }
      public Builder SetNickName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickName = true;
        result.nickName_ = value;
        return this;
      }
      public Builder ClearNickName() {
        PrepareBuilder();
        result.hasNickName = false;
        result.nickName_ = "";
        return this;
      }
      
      public bool HasCCharacterId {
        get { return result.hasCCharacterId; }
      }
      public int CCharacterId {
        get { return result.CCharacterId; }
        set { SetCCharacterId(value); }
      }
      public Builder SetCCharacterId(int value) {
        PrepareBuilder();
        result.hasCCharacterId = true;
        result.cCharacterId_ = value;
        return this;
      }
      public Builder ClearCCharacterId() {
        PrepareBuilder();
        result.hasCCharacterId = false;
        result.cCharacterId_ = 0;
        return this;
      }
      
      public bool HasUser {
       get { return result.hasUser; }
      }
      public global::C2GNet.NUser User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(global::C2GNet.NUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder SetUser(global::C2GNet.NUser.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUser(global::C2GNet.NUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUser &&
            result.user_ != global::C2GNet.NUser.DefaultInstance) {
            result.user_ = global::C2GNet.NUser.CreateBuilder(result.user_).MergeFrom(value).BuildPartial();
        } else {
          result.user_ = value;
        }
        result.hasUser = true;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = null;
        return this;
      }
      
      public bool HasTeamId {
        get { return result.hasTeamId; }
      }
      public int TeamId {
        get { return result.TeamId; }
        set { SetTeamId(value); }
      }
      public Builder SetTeamId(int value) {
        PrepareBuilder();
        result.hasTeamId = true;
        result.teamId_ = value;
        return this;
      }
      public Builder ClearTeamId() {
        PrepareBuilder();
        result.hasTeamId = false;
        result.teamId_ = 0;
        return this;
      }
      
      public bool HasRoomNum {
        get { return result.hasRoomNum; }
      }
      public int RoomNum {
        get { return result.RoomNum; }
        set { SetRoomNum(value); }
      }
      public Builder SetRoomNum(int value) {
        PrepareBuilder();
        result.hasRoomNum = true;
        result.roomNum_ = value;
        return this;
      }
      public Builder ClearRoomNum() {
        PrepareBuilder();
        result.hasRoomNum = false;
        result.roomNum_ = 0;
        return this;
      }
    }
    static RoomUser() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AllTeam : pb::GeneratedMessage<AllTeam, AllTeam.Builder> {
    private AllTeam() { }
    private static readonly AllTeam defaultInstance = new AllTeam().MakeReadOnly();
    private static readonly string[] _allTeamFieldNames = new string[] { "Team" };
    private static readonly uint[] _allTeamFieldTags = new uint[] { 10 };
    public static AllTeam DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AllTeam DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AllTeam ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_AllTeam__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AllTeam, AllTeam.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_AllTeam__FieldAccessorTable; }
    }
    
    public const int TeamFieldNumber = 1;
    private pbc::PopsicleList<global::C2GNet.RoomUser> team_ = new pbc::PopsicleList<global::C2GNet.RoomUser>();
    public scg::IList<global::C2GNet.RoomUser> TeamList {
      get { return team_; }
    }
    public int TeamCount {
      get { return team_.Count; }
    }
    public global::C2GNet.RoomUser GetTeam(int index) {
      return team_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _allTeamFieldNames;
      if (team_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], team_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::C2GNet.RoomUser element in TeamList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AllTeam ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AllTeam ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AllTeam ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AllTeam ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AllTeam ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AllTeam ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AllTeam ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AllTeam ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AllTeam ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AllTeam ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AllTeam MakeReadOnly() {
      team_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AllTeam prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AllTeam, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AllTeam cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AllTeam result;
      
      private AllTeam PrepareBuilder() {
        if (resultIsReadOnly) {
          AllTeam original = result;
          result = new AllTeam();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AllTeam MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.AllTeam.Descriptor; }
      }
      
      public override AllTeam DefaultInstanceForType {
        get { return global::C2GNet.AllTeam.DefaultInstance; }
      }
      
      public override AllTeam BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AllTeam) {
          return MergeFrom((AllTeam) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AllTeam other) {
        if (other == global::C2GNet.AllTeam.DefaultInstance) return this;
        PrepareBuilder();
        if (other.team_.Count != 0) {
          result.team_.Add(other.team_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_allTeamFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _allTeamFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.team_, global::C2GNet.RoomUser.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::C2GNet.RoomUser> TeamList {
        get { return PrepareBuilder().team_; }
      }
      public int TeamCount {
        get { return result.TeamCount; }
      }
      public global::C2GNet.RoomUser GetTeam(int index) {
        return result.GetTeam(index);
      }
      public Builder SetTeam(int index, global::C2GNet.RoomUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.team_[index] = value;
        return this;
      }
      public Builder SetTeam(int index, global::C2GNet.RoomUser.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.team_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTeam(global::C2GNet.RoomUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.team_.Add(value);
        return this;
      }
      public Builder AddTeam(global::C2GNet.RoomUser.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.team_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTeam(scg::IEnumerable<global::C2GNet.RoomUser> values) {
        PrepareBuilder();
        result.team_.Add(values);
        return this;
      }
      public Builder ClearTeam() {
        PrepareBuilder();
        result.team_.Clear();
        return this;
      }
    }
    static AllTeam() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NRoom : pb::GeneratedMessage<NRoom, NRoom.Builder> {
    private NRoom() { }
    private static readonly NRoom defaultInstance = new NRoom().MakeReadOnly();
    private static readonly string[] _nRoomFieldNames = new string[] { "GamePattern", "allTeam", "biFen", "ipPortStr", "randomSeed", "roomId", "roomStatus", "userId" };
    private static readonly uint[] _nRoomFieldTags = new uint[] { 24, 34, 66, 50, 56, 8, 40, 16 };
    public static NRoom DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NRoom DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NRoom ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NRoom__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NRoom, NRoom.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NRoom__FieldAccessorTable; }
    }
    
    public const int RoomIdFieldNumber = 1;
    private bool hasRoomId;
    private int roomId_;
    public bool HasRoomId {
      get { return hasRoomId; }
    }
    public int RoomId {
      get { return roomId_; }
    }
    
    public const int UserIdFieldNumber = 2;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    public const int GamePatternFieldNumber = 3;
    private bool hasGamePattern;
    private int gamePattern_;
    public bool HasGamePattern {
      get { return hasGamePattern; }
    }
    public int GamePattern {
      get { return gamePattern_; }
    }
    
    public const int AllTeamFieldNumber = 4;
    private pbc::PopsicleList<global::C2GNet.AllTeam> allTeam_ = new pbc::PopsicleList<global::C2GNet.AllTeam>();
    public scg::IList<global::C2GNet.AllTeam> AllTeamList {
      get { return allTeam_; }
    }
    public int AllTeamCount {
      get { return allTeam_.Count; }
    }
    public global::C2GNet.AllTeam GetAllTeam(int index) {
      return allTeam_[index];
    }
    
    public const int RoomStatusFieldNumber = 5;
    private bool hasRoomStatus;
    private global::C2GNet.RoomStatus roomStatus_ = global::C2GNet.RoomStatus.Normal_;
    public bool HasRoomStatus {
      get { return hasRoomStatus; }
    }
    public global::C2GNet.RoomStatus RoomStatus {
      get { return roomStatus_; }
    }
    
    public const int IpPortStrFieldNumber = 6;
    private bool hasIpPortStr;
    private string ipPortStr_ = "";
    public bool HasIpPortStr {
      get { return hasIpPortStr; }
    }
    public string IpPortStr {
      get { return ipPortStr_; }
    }
    
    public const int RandomSeedFieldNumber = 7;
    private bool hasRandomSeed;
    private int randomSeed_;
    public bool HasRandomSeed {
      get { return hasRandomSeed; }
    }
    public int RandomSeed {
      get { return randomSeed_; }
    }
    
    public const int BiFenFieldNumber = 8;
    private bool hasBiFen;
    private string biFen_ = "";
    public bool HasBiFen {
      get { return hasBiFen; }
    }
    public string BiFen {
      get { return biFen_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nRoomFieldNames;
      if (hasRoomId) {
        output.WriteInt32(1, field_names[5], RoomId);
      }
      if (hasUserId) {
        output.WriteInt32(2, field_names[7], UserId);
      }
      if (hasGamePattern) {
        output.WriteInt32(3, field_names[0], GamePattern);
      }
      if (allTeam_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], allTeam_);
      }
      if (hasRoomStatus) {
        output.WriteEnum(5, field_names[6], (int) RoomStatus, RoomStatus);
      }
      if (hasIpPortStr) {
        output.WriteString(6, field_names[3], IpPortStr);
      }
      if (hasRandomSeed) {
        output.WriteInt32(7, field_names[4], RandomSeed);
      }
      if (hasBiFen) {
        output.WriteString(8, field_names[2], BiFen);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRoomId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, RoomId);
      }
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, UserId);
      }
      if (hasGamePattern) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, GamePattern);
      }
      foreach (global::C2GNet.AllTeam element in AllTeamList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      if (hasRoomStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) RoomStatus);
      }
      if (hasIpPortStr) {
        size += pb::CodedOutputStream.ComputeStringSize(6, IpPortStr);
      }
      if (hasRandomSeed) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, RandomSeed);
      }
      if (hasBiFen) {
        size += pb::CodedOutputStream.ComputeStringSize(8, BiFen);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NRoom ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NRoom ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NRoom ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NRoom ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NRoom ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NRoom ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NRoom ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NRoom ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NRoom ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NRoom ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NRoom MakeReadOnly() {
      allTeam_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NRoom prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NRoom, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NRoom cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NRoom result;
      
      private NRoom PrepareBuilder() {
        if (resultIsReadOnly) {
          NRoom original = result;
          result = new NRoom();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NRoom MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.NRoom.Descriptor; }
      }
      
      public override NRoom DefaultInstanceForType {
        get { return global::C2GNet.NRoom.DefaultInstance; }
      }
      
      public override NRoom BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NRoom) {
          return MergeFrom((NRoom) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NRoom other) {
        if (other == global::C2GNet.NRoom.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomId) {
          RoomId = other.RoomId;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasGamePattern) {
          GamePattern = other.GamePattern;
        }
        if (other.allTeam_.Count != 0) {
          result.allTeam_.Add(other.allTeam_);
        }
        if (other.HasRoomStatus) {
          RoomStatus = other.RoomStatus;
        }
        if (other.HasIpPortStr) {
          IpPortStr = other.IpPortStr;
        }
        if (other.HasRandomSeed) {
          RandomSeed = other.RandomSeed;
        }
        if (other.HasBiFen) {
          BiFen = other.BiFen;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nRoomFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nRoomFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoomId = input.ReadInt32(ref result.roomId_);
              break;
            }
            case 16: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 24: {
              result.hasGamePattern = input.ReadInt32(ref result.gamePattern_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.allTeam_, global::C2GNet.AllTeam.DefaultInstance, extensionRegistry);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.roomStatus_, out unknown)) {
                result.hasRoomStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 50: {
              result.hasIpPortStr = input.ReadString(ref result.ipPortStr_);
              break;
            }
            case 56: {
              result.hasRandomSeed = input.ReadInt32(ref result.randomSeed_);
              break;
            }
            case 66: {
              result.hasBiFen = input.ReadString(ref result.biFen_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomId {
        get { return result.hasRoomId; }
      }
      public int RoomId {
        get { return result.RoomId; }
        set { SetRoomId(value); }
      }
      public Builder SetRoomId(int value) {
        PrepareBuilder();
        result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder ClearRoomId() {
        PrepareBuilder();
        result.hasRoomId = false;
        result.roomId_ = 0;
        return this;
      }
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasGamePattern {
        get { return result.hasGamePattern; }
      }
      public int GamePattern {
        get { return result.GamePattern; }
        set { SetGamePattern(value); }
      }
      public Builder SetGamePattern(int value) {
        PrepareBuilder();
        result.hasGamePattern = true;
        result.gamePattern_ = value;
        return this;
      }
      public Builder ClearGamePattern() {
        PrepareBuilder();
        result.hasGamePattern = false;
        result.gamePattern_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::C2GNet.AllTeam> AllTeamList {
        get { return PrepareBuilder().allTeam_; }
      }
      public int AllTeamCount {
        get { return result.AllTeamCount; }
      }
      public global::C2GNet.AllTeam GetAllTeam(int index) {
        return result.GetAllTeam(index);
      }
      public Builder SetAllTeam(int index, global::C2GNet.AllTeam value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allTeam_[index] = value;
        return this;
      }
      public Builder SetAllTeam(int index, global::C2GNet.AllTeam.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.allTeam_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAllTeam(global::C2GNet.AllTeam value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allTeam_.Add(value);
        return this;
      }
      public Builder AddAllTeam(global::C2GNet.AllTeam.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.allTeam_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAllTeam(scg::IEnumerable<global::C2GNet.AllTeam> values) {
        PrepareBuilder();
        result.allTeam_.Add(values);
        return this;
      }
      public Builder ClearAllTeam() {
        PrepareBuilder();
        result.allTeam_.Clear();
        return this;
      }
      
      public bool HasRoomStatus {
       get { return result.hasRoomStatus; }
      }
      public global::C2GNet.RoomStatus RoomStatus {
        get { return result.RoomStatus; }
        set { SetRoomStatus(value); }
      }
      public Builder SetRoomStatus(global::C2GNet.RoomStatus value) {
        PrepareBuilder();
        result.hasRoomStatus = true;
        result.roomStatus_ = value;
        return this;
      }
      public Builder ClearRoomStatus() {
        PrepareBuilder();
        result.hasRoomStatus = false;
        result.roomStatus_ = global::C2GNet.RoomStatus.Normal_;
        return this;
      }
      
      public bool HasIpPortStr {
        get { return result.hasIpPortStr; }
      }
      public string IpPortStr {
        get { return result.IpPortStr; }
        set { SetIpPortStr(value); }
      }
      public Builder SetIpPortStr(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIpPortStr = true;
        result.ipPortStr_ = value;
        return this;
      }
      public Builder ClearIpPortStr() {
        PrepareBuilder();
        result.hasIpPortStr = false;
        result.ipPortStr_ = "";
        return this;
      }
      
      public bool HasRandomSeed {
        get { return result.hasRandomSeed; }
      }
      public int RandomSeed {
        get { return result.RandomSeed; }
        set { SetRandomSeed(value); }
      }
      public Builder SetRandomSeed(int value) {
        PrepareBuilder();
        result.hasRandomSeed = true;
        result.randomSeed_ = value;
        return this;
      }
      public Builder ClearRandomSeed() {
        PrepareBuilder();
        result.hasRandomSeed = false;
        result.randomSeed_ = 0;
        return this;
      }
      
      public bool HasBiFen {
        get { return result.hasBiFen; }
      }
      public string BiFen {
        get { return result.BiFen; }
        set { SetBiFen(value); }
      }
      public Builder SetBiFen(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBiFen = true;
        result.biFen_ = value;
        return this;
      }
      public Builder ClearBiFen() {
        PrepareBuilder();
        result.hasBiFen = false;
        result.biFen_ = "";
        return this;
      }
    }
    static NRoom() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MyRoomRequest : pb::GeneratedMessage<MyRoomRequest, MyRoomRequest.Builder> {
    private MyRoomRequest() { }
    private static readonly MyRoomRequest defaultInstance = new MyRoomRequest().MakeReadOnly();
    private static readonly string[] _myRoomRequestFieldNames = new string[] {  };
    private static readonly uint[] _myRoomRequestFieldTags = new uint[] {  };
    public static MyRoomRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MyRoomRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MyRoomRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_MyRoomRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MyRoomRequest, MyRoomRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_MyRoomRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _myRoomRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MyRoomRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MyRoomRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MyRoomRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MyRoomRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MyRoomRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MyRoomRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MyRoomRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MyRoomRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MyRoomRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MyRoomRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MyRoomRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MyRoomRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MyRoomRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MyRoomRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MyRoomRequest result;
      
      private MyRoomRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          MyRoomRequest original = result;
          result = new MyRoomRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MyRoomRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.MyRoomRequest.Descriptor; }
      }
      
      public override MyRoomRequest DefaultInstanceForType {
        get { return global::C2GNet.MyRoomRequest.DefaultInstance; }
      }
      
      public override MyRoomRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MyRoomRequest) {
          return MergeFrom((MyRoomRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MyRoomRequest other) {
        if (other == global::C2GNet.MyRoomRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_myRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _myRoomRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static MyRoomRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MyRoomResponse : pb::GeneratedMessage<MyRoomResponse, MyRoomResponse.Builder> {
    private MyRoomResponse() { }
    private static readonly MyRoomResponse defaultInstance = new MyRoomResponse().MakeReadOnly();
    private static readonly string[] _myRoomResponseFieldNames = new string[] { "room" };
    private static readonly uint[] _myRoomResponseFieldTags = new uint[] { 10 };
    public static MyRoomResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MyRoomResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MyRoomResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_MyRoomResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MyRoomResponse, MyRoomResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_MyRoomResponse__FieldAccessorTable; }
    }
    
    public const int RoomFieldNumber = 1;
    private bool hasRoom;
    private global::C2GNet.NRoom room_;
    public bool HasRoom {
      get { return hasRoom; }
    }
    public global::C2GNet.NRoom Room {
      get { return room_ ?? global::C2GNet.NRoom.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _myRoomResponseFieldNames;
      if (hasRoom) {
        output.WriteMessage(1, field_names[0], Room);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRoom) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Room);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MyRoomResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MyRoomResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MyRoomResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MyRoomResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MyRoomResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MyRoomResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MyRoomResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MyRoomResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MyRoomResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MyRoomResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MyRoomResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MyRoomResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MyRoomResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MyRoomResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MyRoomResponse result;
      
      private MyRoomResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          MyRoomResponse original = result;
          result = new MyRoomResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MyRoomResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.MyRoomResponse.Descriptor; }
      }
      
      public override MyRoomResponse DefaultInstanceForType {
        get { return global::C2GNet.MyRoomResponse.DefaultInstance; }
      }
      
      public override MyRoomResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MyRoomResponse) {
          return MergeFrom((MyRoomResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MyRoomResponse other) {
        if (other == global::C2GNet.MyRoomResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoom) {
          MergeRoom(other.Room);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_myRoomResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _myRoomResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::C2GNet.NRoom.Builder subBuilder = global::C2GNet.NRoom.CreateBuilder();
              if (result.hasRoom) {
                subBuilder.MergeFrom(Room);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Room = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoom {
       get { return result.hasRoom; }
      }
      public global::C2GNet.NRoom Room {
        get { return result.Room; }
        set { SetRoom(value); }
      }
      public Builder SetRoom(global::C2GNet.NRoom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoom = true;
        result.room_ = value;
        return this;
      }
      public Builder SetRoom(global::C2GNet.NRoom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRoom = true;
        result.room_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRoom(global::C2GNet.NRoom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRoom &&
            result.room_ != global::C2GNet.NRoom.DefaultInstance) {
            result.room_ = global::C2GNet.NRoom.CreateBuilder(result.room_).MergeFrom(value).BuildPartial();
        } else {
          result.room_ = value;
        }
        result.hasRoom = true;
        return this;
      }
      public Builder ClearRoom() {
        PrepareBuilder();
        result.hasRoom = false;
        result.room_ = null;
        return this;
      }
    }
    static MyRoomResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class InviteRequest : pb::GeneratedMessage<InviteRequest, InviteRequest.Builder> {
    private InviteRequest() { }
    private static readonly InviteRequest defaultInstance = new InviteRequest().MakeReadOnly();
    private static readonly string[] _inviteRequestFieldNames = new string[] { "fromNickName", "fromUserId", "teamId", "toNickName", "toUserId" };
    private static readonly uint[] _inviteRequestFieldTags = new uint[] { 18, 8, 40, 34, 24 };
    public static InviteRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InviteRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InviteRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_InviteRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InviteRequest, InviteRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_InviteRequest__FieldAccessorTable; }
    }
    
    public const int FromUserIdFieldNumber = 1;
    private bool hasFromUserId;
    private int fromUserId_;
    public bool HasFromUserId {
      get { return hasFromUserId; }
    }
    public int FromUserId {
      get { return fromUserId_; }
    }
    
    public const int FromNickNameFieldNumber = 2;
    private bool hasFromNickName;
    private string fromNickName_ = "";
    public bool HasFromNickName {
      get { return hasFromNickName; }
    }
    public string FromNickName {
      get { return fromNickName_; }
    }
    
    public const int ToUserIdFieldNumber = 3;
    private bool hasToUserId;
    private int toUserId_;
    public bool HasToUserId {
      get { return hasToUserId; }
    }
    public int ToUserId {
      get { return toUserId_; }
    }
    
    public const int ToNickNameFieldNumber = 4;
    private bool hasToNickName;
    private string toNickName_ = "";
    public bool HasToNickName {
      get { return hasToNickName; }
    }
    public string ToNickName {
      get { return toNickName_; }
    }
    
    public const int TeamIdFieldNumber = 5;
    private bool hasTeamId;
    private int teamId_;
    public bool HasTeamId {
      get { return hasTeamId; }
    }
    public int TeamId {
      get { return teamId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _inviteRequestFieldNames;
      if (hasFromUserId) {
        output.WriteInt32(1, field_names[1], FromUserId);
      }
      if (hasFromNickName) {
        output.WriteString(2, field_names[0], FromNickName);
      }
      if (hasToUserId) {
        output.WriteInt32(3, field_names[4], ToUserId);
      }
      if (hasToNickName) {
        output.WriteString(4, field_names[3], ToNickName);
      }
      if (hasTeamId) {
        output.WriteInt32(5, field_names[2], TeamId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFromUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, FromUserId);
      }
      if (hasFromNickName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, FromNickName);
      }
      if (hasToUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, ToUserId);
      }
      if (hasToNickName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, ToNickName);
      }
      if (hasTeamId) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, TeamId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static InviteRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InviteRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InviteRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InviteRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InviteRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InviteRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InviteRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InviteRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InviteRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InviteRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InviteRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InviteRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<InviteRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InviteRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InviteRequest result;
      
      private InviteRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          InviteRequest original = result;
          result = new InviteRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InviteRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.InviteRequest.Descriptor; }
      }
      
      public override InviteRequest DefaultInstanceForType {
        get { return global::C2GNet.InviteRequest.DefaultInstance; }
      }
      
      public override InviteRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InviteRequest) {
          return MergeFrom((InviteRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InviteRequest other) {
        if (other == global::C2GNet.InviteRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFromUserId) {
          FromUserId = other.FromUserId;
        }
        if (other.HasFromNickName) {
          FromNickName = other.FromNickName;
        }
        if (other.HasToUserId) {
          ToUserId = other.ToUserId;
        }
        if (other.HasToNickName) {
          ToNickName = other.ToNickName;
        }
        if (other.HasTeamId) {
          TeamId = other.TeamId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_inviteRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _inviteRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasFromUserId = input.ReadInt32(ref result.fromUserId_);
              break;
            }
            case 18: {
              result.hasFromNickName = input.ReadString(ref result.fromNickName_);
              break;
            }
            case 24: {
              result.hasToUserId = input.ReadInt32(ref result.toUserId_);
              break;
            }
            case 34: {
              result.hasToNickName = input.ReadString(ref result.toNickName_);
              break;
            }
            case 40: {
              result.hasTeamId = input.ReadInt32(ref result.teamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFromUserId {
        get { return result.hasFromUserId; }
      }
      public int FromUserId {
        get { return result.FromUserId; }
        set { SetFromUserId(value); }
      }
      public Builder SetFromUserId(int value) {
        PrepareBuilder();
        result.hasFromUserId = true;
        result.fromUserId_ = value;
        return this;
      }
      public Builder ClearFromUserId() {
        PrepareBuilder();
        result.hasFromUserId = false;
        result.fromUserId_ = 0;
        return this;
      }
      
      public bool HasFromNickName {
        get { return result.hasFromNickName; }
      }
      public string FromNickName {
        get { return result.FromNickName; }
        set { SetFromNickName(value); }
      }
      public Builder SetFromNickName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFromNickName = true;
        result.fromNickName_ = value;
        return this;
      }
      public Builder ClearFromNickName() {
        PrepareBuilder();
        result.hasFromNickName = false;
        result.fromNickName_ = "";
        return this;
      }
      
      public bool HasToUserId {
        get { return result.hasToUserId; }
      }
      public int ToUserId {
        get { return result.ToUserId; }
        set { SetToUserId(value); }
      }
      public Builder SetToUserId(int value) {
        PrepareBuilder();
        result.hasToUserId = true;
        result.toUserId_ = value;
        return this;
      }
      public Builder ClearToUserId() {
        PrepareBuilder();
        result.hasToUserId = false;
        result.toUserId_ = 0;
        return this;
      }
      
      public bool HasToNickName {
        get { return result.hasToNickName; }
      }
      public string ToNickName {
        get { return result.ToNickName; }
        set { SetToNickName(value); }
      }
      public Builder SetToNickName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToNickName = true;
        result.toNickName_ = value;
        return this;
      }
      public Builder ClearToNickName() {
        PrepareBuilder();
        result.hasToNickName = false;
        result.toNickName_ = "";
        return this;
      }
      
      public bool HasTeamId {
        get { return result.hasTeamId; }
      }
      public int TeamId {
        get { return result.TeamId; }
        set { SetTeamId(value); }
      }
      public Builder SetTeamId(int value) {
        PrepareBuilder();
        result.hasTeamId = true;
        result.teamId_ = value;
        return this;
      }
      public Builder ClearTeamId() {
        PrepareBuilder();
        result.hasTeamId = false;
        result.teamId_ = 0;
        return this;
      }
    }
    static InviteRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class InviteResponse : pb::GeneratedMessage<InviteResponse, InviteResponse.Builder> {
    private InviteResponse() { }
    private static readonly InviteResponse defaultInstance = new InviteResponse().MakeReadOnly();
    private static readonly string[] _inviteResponseFieldNames = new string[] { "errormsg", "inviteRequest", "resultmsg" };
    private static readonly uint[] _inviteResponseFieldTags = new uint[] { 18, 26, 8 };
    public static InviteResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InviteResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InviteResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_InviteResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InviteResponse, InviteResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_InviteResponse__FieldAccessorTable; }
    }
    
    public const int ResultmsgFieldNumber = 1;
    private bool hasResultmsg;
    private global::C2GNet.Result resultmsg_ = global::C2GNet.Result.Success;
    public bool HasResultmsg {
      get { return hasResultmsg; }
    }
    public global::C2GNet.Result Resultmsg {
      get { return resultmsg_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public const int InviteRequestFieldNumber = 3;
    private bool hasInviteRequest;
    private global::C2GNet.InviteRequest inviteRequest_;
    public bool HasInviteRequest {
      get { return hasInviteRequest; }
    }
    public global::C2GNet.InviteRequest InviteRequest {
      get { return inviteRequest_ ?? global::C2GNet.InviteRequest.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _inviteResponseFieldNames;
      if (hasResultmsg) {
        output.WriteEnum(1, field_names[2], (int) Resultmsg, Resultmsg);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      if (hasInviteRequest) {
        output.WriteMessage(3, field_names[1], InviteRequest);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResultmsg) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Resultmsg);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      if (hasInviteRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, InviteRequest);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static InviteResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InviteResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InviteResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InviteResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InviteResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InviteResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InviteResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InviteResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InviteResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InviteResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InviteResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InviteResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<InviteResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InviteResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InviteResponse result;
      
      private InviteResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          InviteResponse original = result;
          result = new InviteResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InviteResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.InviteResponse.Descriptor; }
      }
      
      public override InviteResponse DefaultInstanceForType {
        get { return global::C2GNet.InviteResponse.DefaultInstance; }
      }
      
      public override InviteResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InviteResponse) {
          return MergeFrom((InviteResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InviteResponse other) {
        if (other == global::C2GNet.InviteResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResultmsg) {
          Resultmsg = other.Resultmsg;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        if (other.HasInviteRequest) {
          MergeInviteRequest(other.InviteRequest);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_inviteResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _inviteResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.resultmsg_, out unknown)) {
                result.hasResultmsg = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
            case 26: {
              global::C2GNet.InviteRequest.Builder subBuilder = global::C2GNet.InviteRequest.CreateBuilder();
              if (result.hasInviteRequest) {
                subBuilder.MergeFrom(InviteRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InviteRequest = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResultmsg {
       get { return result.hasResultmsg; }
      }
      public global::C2GNet.Result Resultmsg {
        get { return result.Resultmsg; }
        set { SetResultmsg(value); }
      }
      public Builder SetResultmsg(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResultmsg = true;
        result.resultmsg_ = value;
        return this;
      }
      public Builder ClearResultmsg() {
        PrepareBuilder();
        result.hasResultmsg = false;
        result.resultmsg_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
      
      public bool HasInviteRequest {
       get { return result.hasInviteRequest; }
      }
      public global::C2GNet.InviteRequest InviteRequest {
        get { return result.InviteRequest; }
        set { SetInviteRequest(value); }
      }
      public Builder SetInviteRequest(global::C2GNet.InviteRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviteRequest = true;
        result.inviteRequest_ = value;
        return this;
      }
      public Builder SetInviteRequest(global::C2GNet.InviteRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInviteRequest = true;
        result.inviteRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInviteRequest(global::C2GNet.InviteRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInviteRequest &&
            result.inviteRequest_ != global::C2GNet.InviteRequest.DefaultInstance) {
            result.inviteRequest_ = global::C2GNet.InviteRequest.CreateBuilder(result.inviteRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.inviteRequest_ = value;
        }
        result.hasInviteRequest = true;
        return this;
      }
      public Builder ClearInviteRequest() {
        PrepareBuilder();
        result.hasInviteRequest = false;
        result.inviteRequest_ = null;
        return this;
      }
    }
    static InviteResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class KickOutRequest : pb::GeneratedMessage<KickOutRequest, KickOutRequest.Builder> {
    private KickOutRequest() { }
    private static readonly KickOutRequest defaultInstance = new KickOutRequest().MakeReadOnly();
    private static readonly string[] _kickOutRequestFieldNames = new string[] { "userId" };
    private static readonly uint[] _kickOutRequestFieldTags = new uint[] { 8 };
    public static KickOutRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override KickOutRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override KickOutRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_KickOutRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<KickOutRequest, KickOutRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_KickOutRequest__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _kickOutRequestFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[0], UserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static KickOutRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KickOutRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KickOutRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KickOutRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KickOutRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KickOutRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static KickOutRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static KickOutRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static KickOutRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KickOutRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private KickOutRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(KickOutRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<KickOutRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(KickOutRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private KickOutRequest result;
      
      private KickOutRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          KickOutRequest original = result;
          result = new KickOutRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override KickOutRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.KickOutRequest.Descriptor; }
      }
      
      public override KickOutRequest DefaultInstanceForType {
        get { return global::C2GNet.KickOutRequest.DefaultInstance; }
      }
      
      public override KickOutRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is KickOutRequest) {
          return MergeFrom((KickOutRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(KickOutRequest other) {
        if (other == global::C2GNet.KickOutRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_kickOutRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _kickOutRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
    }
    static KickOutRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class KickOutResponse : pb::GeneratedMessage<KickOutResponse, KickOutResponse.Builder> {
    private KickOutResponse() { }
    private static readonly KickOutResponse defaultInstance = new KickOutResponse().MakeReadOnly();
    private static readonly string[] _kickOutResponseFieldNames = new string[] { "errormsg", "result" };
    private static readonly uint[] _kickOutResponseFieldTags = new uint[] { 18, 8 };
    public static KickOutResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override KickOutResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override KickOutResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_KickOutResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<KickOutResponse, KickOutResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_KickOutResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _kickOutResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static KickOutResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KickOutResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KickOutResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KickOutResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KickOutResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KickOutResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static KickOutResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static KickOutResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static KickOutResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KickOutResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private KickOutResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(KickOutResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<KickOutResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(KickOutResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private KickOutResponse result;
      
      private KickOutResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          KickOutResponse original = result;
          result = new KickOutResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override KickOutResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.KickOutResponse.Descriptor; }
      }
      
      public override KickOutResponse DefaultInstanceForType {
        get { return global::C2GNet.KickOutResponse.DefaultInstance; }
      }
      
      public override KickOutResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is KickOutResponse) {
          return MergeFrom((KickOutResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(KickOutResponse other) {
        if (other == global::C2GNet.KickOutResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_kickOutResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _kickOutResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
    }
    static KickOutResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RoomStartGameRequest : pb::GeneratedMessage<RoomStartGameRequest, RoomStartGameRequest.Builder> {
    private RoomStartGameRequest() { }
    private static readonly RoomStartGameRequest defaultInstance = new RoomStartGameRequest().MakeReadOnly();
    private static readonly string[] _roomStartGameRequestFieldNames = new string[] {  };
    private static readonly uint[] _roomStartGameRequestFieldTags = new uint[] {  };
    public static RoomStartGameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RoomStartGameRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RoomStartGameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_RoomStartGameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RoomStartGameRequest, RoomStartGameRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_RoomStartGameRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _roomStartGameRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RoomStartGameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoomStartGameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoomStartGameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoomStartGameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoomStartGameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoomStartGameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RoomStartGameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RoomStartGameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RoomStartGameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoomStartGameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RoomStartGameRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RoomStartGameRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RoomStartGameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RoomStartGameRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RoomStartGameRequest result;
      
      private RoomStartGameRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RoomStartGameRequest original = result;
          result = new RoomStartGameRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RoomStartGameRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.RoomStartGameRequest.Descriptor; }
      }
      
      public override RoomStartGameRequest DefaultInstanceForType {
        get { return global::C2GNet.RoomStartGameRequest.DefaultInstance; }
      }
      
      public override RoomStartGameRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RoomStartGameRequest) {
          return MergeFrom((RoomStartGameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RoomStartGameRequest other) {
        if (other == global::C2GNet.RoomStartGameRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roomStartGameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roomStartGameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static RoomStartGameRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RoomStartGameResponse : pb::GeneratedMessage<RoomStartGameResponse, RoomStartGameResponse.Builder> {
    private RoomStartGameResponse() { }
    private static readonly RoomStartGameResponse defaultInstance = new RoomStartGameResponse().MakeReadOnly();
    private static readonly string[] _roomStartGameResponseFieldNames = new string[] { "errormsg", "result" };
    private static readonly uint[] _roomStartGameResponseFieldTags = new uint[] { 18, 8 };
    public static RoomStartGameResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RoomStartGameResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RoomStartGameResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_RoomStartGameResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RoomStartGameResponse, RoomStartGameResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_RoomStartGameResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _roomStartGameResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RoomStartGameResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoomStartGameResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoomStartGameResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoomStartGameResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoomStartGameResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoomStartGameResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RoomStartGameResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RoomStartGameResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RoomStartGameResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoomStartGameResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RoomStartGameResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RoomStartGameResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RoomStartGameResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RoomStartGameResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RoomStartGameResponse result;
      
      private RoomStartGameResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RoomStartGameResponse original = result;
          result = new RoomStartGameResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RoomStartGameResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.RoomStartGameResponse.Descriptor; }
      }
      
      public override RoomStartGameResponse DefaultInstanceForType {
        get { return global::C2GNet.RoomStartGameResponse.DefaultInstance; }
      }
      
      public override RoomStartGameResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RoomStartGameResponse) {
          return MergeFrom((RoomStartGameResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RoomStartGameResponse other) {
        if (other == global::C2GNet.RoomStartGameResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roomStartGameResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roomStartGameResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
    }
    static RoomStartGameResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NickNameSearchRequest : pb::GeneratedMessage<NickNameSearchRequest, NickNameSearchRequest.Builder> {
    private NickNameSearchRequest() { }
    private static readonly NickNameSearchRequest defaultInstance = new NickNameSearchRequest().MakeReadOnly();
    private static readonly string[] _nickNameSearchRequestFieldNames = new string[] { "nickName" };
    private static readonly uint[] _nickNameSearchRequestFieldTags = new uint[] { 10 };
    public static NickNameSearchRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NickNameSearchRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NickNameSearchRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NickNameSearchRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NickNameSearchRequest, NickNameSearchRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NickNameSearchRequest__FieldAccessorTable; }
    }
    
    public const int NickNameFieldNumber = 1;
    private bool hasNickName;
    private string nickName_ = "";
    public bool HasNickName {
      get { return hasNickName; }
    }
    public string NickName {
      get { return nickName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nickNameSearchRequestFieldNames;
      if (hasNickName) {
        output.WriteString(1, field_names[0], NickName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNickName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, NickName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NickNameSearchRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NickNameSearchRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NickNameSearchRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NickNameSearchRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NickNameSearchRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NickNameSearchRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NickNameSearchRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NickNameSearchRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NickNameSearchRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NickNameSearchRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NickNameSearchRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NickNameSearchRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NickNameSearchRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NickNameSearchRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NickNameSearchRequest result;
      
      private NickNameSearchRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          NickNameSearchRequest original = result;
          result = new NickNameSearchRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NickNameSearchRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.NickNameSearchRequest.Descriptor; }
      }
      
      public override NickNameSearchRequest DefaultInstanceForType {
        get { return global::C2GNet.NickNameSearchRequest.DefaultInstance; }
      }
      
      public override NickNameSearchRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NickNameSearchRequest) {
          return MergeFrom((NickNameSearchRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NickNameSearchRequest other) {
        if (other == global::C2GNet.NickNameSearchRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNickName) {
          NickName = other.NickName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nickNameSearchRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nickNameSearchRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasNickName = input.ReadString(ref result.nickName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNickName {
        get { return result.hasNickName; }
      }
      public string NickName {
        get { return result.NickName; }
        set { SetNickName(value); }
      }
      public Builder SetNickName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickName = true;
        result.nickName_ = value;
        return this;
      }
      public Builder ClearNickName() {
        PrepareBuilder();
        result.hasNickName = false;
        result.nickName_ = "";
        return this;
      }
    }
    static NickNameSearchRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NickNameSearchResponse : pb::GeneratedMessage<NickNameSearchResponse, NickNameSearchResponse.Builder> {
    private NickNameSearchResponse() { }
    private static readonly NickNameSearchResponse defaultInstance = new NickNameSearchResponse().MakeReadOnly();
    private static readonly string[] _nickNameSearchResponseFieldNames = new string[] { "roomUser" };
    private static readonly uint[] _nickNameSearchResponseFieldTags = new uint[] { 10 };
    public static NickNameSearchResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NickNameSearchResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NickNameSearchResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NickNameSearchResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NickNameSearchResponse, NickNameSearchResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_NickNameSearchResponse__FieldAccessorTable; }
    }
    
    public const int RoomUserFieldNumber = 1;
    private pbc::PopsicleList<global::C2GNet.RoomUser> roomUser_ = new pbc::PopsicleList<global::C2GNet.RoomUser>();
    public scg::IList<global::C2GNet.RoomUser> RoomUserList {
      get { return roomUser_; }
    }
    public int RoomUserCount {
      get { return roomUser_.Count; }
    }
    public global::C2GNet.RoomUser GetRoomUser(int index) {
      return roomUser_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nickNameSearchResponseFieldNames;
      if (roomUser_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], roomUser_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::C2GNet.RoomUser element in RoomUserList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NickNameSearchResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NickNameSearchResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NickNameSearchResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NickNameSearchResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NickNameSearchResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NickNameSearchResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NickNameSearchResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NickNameSearchResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NickNameSearchResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NickNameSearchResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NickNameSearchResponse MakeReadOnly() {
      roomUser_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NickNameSearchResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NickNameSearchResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NickNameSearchResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NickNameSearchResponse result;
      
      private NickNameSearchResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          NickNameSearchResponse original = result;
          result = new NickNameSearchResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NickNameSearchResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.NickNameSearchResponse.Descriptor; }
      }
      
      public override NickNameSearchResponse DefaultInstanceForType {
        get { return global::C2GNet.NickNameSearchResponse.DefaultInstance; }
      }
      
      public override NickNameSearchResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NickNameSearchResponse) {
          return MergeFrom((NickNameSearchResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NickNameSearchResponse other) {
        if (other == global::C2GNet.NickNameSearchResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.roomUser_.Count != 0) {
          result.roomUser_.Add(other.roomUser_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nickNameSearchResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nickNameSearchResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.roomUser_, global::C2GNet.RoomUser.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::C2GNet.RoomUser> RoomUserList {
        get { return PrepareBuilder().roomUser_; }
      }
      public int RoomUserCount {
        get { return result.RoomUserCount; }
      }
      public global::C2GNet.RoomUser GetRoomUser(int index) {
        return result.GetRoomUser(index);
      }
      public Builder SetRoomUser(int index, global::C2GNet.RoomUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.roomUser_[index] = value;
        return this;
      }
      public Builder SetRoomUser(int index, global::C2GNet.RoomUser.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.roomUser_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRoomUser(global::C2GNet.RoomUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.roomUser_.Add(value);
        return this;
      }
      public Builder AddRoomUser(global::C2GNet.RoomUser.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.roomUser_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRoomUser(scg::IEnumerable<global::C2GNet.RoomUser> values) {
        PrepareBuilder();
        result.roomUser_.Add(values);
        return this;
      }
      public Builder ClearRoomUser() {
        PrepareBuilder();
        result.roomUser_.Clear();
        return this;
      }
    }
    static NickNameSearchResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddRoomRequest : pb::GeneratedMessage<AddRoomRequest, AddRoomRequest.Builder> {
    private AddRoomRequest() { }
    private static readonly AddRoomRequest defaultInstance = new AddRoomRequest().MakeReadOnly();
    private static readonly string[] _addRoomRequestFieldNames = new string[] { "fromNickName", "fromUserId", "roomId" };
    private static readonly uint[] _addRoomRequestFieldTags = new uint[] { 26, 16, 8 };
    public static AddRoomRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddRoomRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddRoomRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_AddRoomRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddRoomRequest, AddRoomRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_AddRoomRequest__FieldAccessorTable; }
    }
    
    public const int RoomIdFieldNumber = 1;
    private bool hasRoomId;
    private int roomId_;
    public bool HasRoomId {
      get { return hasRoomId; }
    }
    public int RoomId {
      get { return roomId_; }
    }
    
    public const int FromUserIdFieldNumber = 2;
    private bool hasFromUserId;
    private int fromUserId_;
    public bool HasFromUserId {
      get { return hasFromUserId; }
    }
    public int FromUserId {
      get { return fromUserId_; }
    }
    
    public const int FromNickNameFieldNumber = 3;
    private bool hasFromNickName;
    private string fromNickName_ = "";
    public bool HasFromNickName {
      get { return hasFromNickName; }
    }
    public string FromNickName {
      get { return fromNickName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _addRoomRequestFieldNames;
      if (hasRoomId) {
        output.WriteInt32(1, field_names[2], RoomId);
      }
      if (hasFromUserId) {
        output.WriteInt32(2, field_names[1], FromUserId);
      }
      if (hasFromNickName) {
        output.WriteString(3, field_names[0], FromNickName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRoomId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, RoomId);
      }
      if (hasFromUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, FromUserId);
      }
      if (hasFromNickName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, FromNickName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AddRoomRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRoomRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRoomRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRoomRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRoomRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRoomRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddRoomRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddRoomRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddRoomRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRoomRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddRoomRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddRoomRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AddRoomRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddRoomRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddRoomRequest result;
      
      private AddRoomRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AddRoomRequest original = result;
          result = new AddRoomRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddRoomRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.AddRoomRequest.Descriptor; }
      }
      
      public override AddRoomRequest DefaultInstanceForType {
        get { return global::C2GNet.AddRoomRequest.DefaultInstance; }
      }
      
      public override AddRoomRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddRoomRequest) {
          return MergeFrom((AddRoomRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddRoomRequest other) {
        if (other == global::C2GNet.AddRoomRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomId) {
          RoomId = other.RoomId;
        }
        if (other.HasFromUserId) {
          FromUserId = other.FromUserId;
        }
        if (other.HasFromNickName) {
          FromNickName = other.FromNickName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addRoomRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoomId = input.ReadInt32(ref result.roomId_);
              break;
            }
            case 16: {
              result.hasFromUserId = input.ReadInt32(ref result.fromUserId_);
              break;
            }
            case 26: {
              result.hasFromNickName = input.ReadString(ref result.fromNickName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomId {
        get { return result.hasRoomId; }
      }
      public int RoomId {
        get { return result.RoomId; }
        set { SetRoomId(value); }
      }
      public Builder SetRoomId(int value) {
        PrepareBuilder();
        result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder ClearRoomId() {
        PrepareBuilder();
        result.hasRoomId = false;
        result.roomId_ = 0;
        return this;
      }
      
      public bool HasFromUserId {
        get { return result.hasFromUserId; }
      }
      public int FromUserId {
        get { return result.FromUserId; }
        set { SetFromUserId(value); }
      }
      public Builder SetFromUserId(int value) {
        PrepareBuilder();
        result.hasFromUserId = true;
        result.fromUserId_ = value;
        return this;
      }
      public Builder ClearFromUserId() {
        PrepareBuilder();
        result.hasFromUserId = false;
        result.fromUserId_ = 0;
        return this;
      }
      
      public bool HasFromNickName {
        get { return result.hasFromNickName; }
      }
      public string FromNickName {
        get { return result.FromNickName; }
        set { SetFromNickName(value); }
      }
      public Builder SetFromNickName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFromNickName = true;
        result.fromNickName_ = value;
        return this;
      }
      public Builder ClearFromNickName() {
        PrepareBuilder();
        result.hasFromNickName = false;
        result.fromNickName_ = "";
        return this;
      }
    }
    static AddRoomRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddRoomResponse : pb::GeneratedMessage<AddRoomResponse, AddRoomResponse.Builder> {
    private AddRoomResponse() { }
    private static readonly AddRoomResponse defaultInstance = new AddRoomResponse().MakeReadOnly();
    private static readonly string[] _addRoomResponseFieldNames = new string[] { "addRoomRequest", "errormsg", "result", "teamId" };
    private static readonly uint[] _addRoomResponseFieldTags = new uint[] { 26, 18, 8, 32 };
    public static AddRoomResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddRoomResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddRoomResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_AddRoomResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddRoomResponse, AddRoomResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_AddRoomResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public const int AddRoomRequestFieldNumber = 3;
    private bool hasAddRoomRequest;
    private global::C2GNet.AddRoomRequest addRoomRequest_;
    public bool HasAddRoomRequest {
      get { return hasAddRoomRequest; }
    }
    public global::C2GNet.AddRoomRequest AddRoomRequest {
      get { return addRoomRequest_ ?? global::C2GNet.AddRoomRequest.DefaultInstance; }
    }
    
    public const int TeamIdFieldNumber = 4;
    private bool hasTeamId;
    private int teamId_;
    public bool HasTeamId {
      get { return hasTeamId; }
    }
    public int TeamId {
      get { return teamId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _addRoomResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[2], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[1], Errormsg);
      }
      if (hasAddRoomRequest) {
        output.WriteMessage(3, field_names[0], AddRoomRequest);
      }
      if (hasTeamId) {
        output.WriteInt32(4, field_names[3], TeamId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      if (hasAddRoomRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, AddRoomRequest);
      }
      if (hasTeamId) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, TeamId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AddRoomResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRoomResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRoomResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRoomResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRoomResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRoomResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddRoomResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddRoomResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddRoomResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRoomResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddRoomResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddRoomResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AddRoomResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddRoomResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddRoomResponse result;
      
      private AddRoomResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          AddRoomResponse original = result;
          result = new AddRoomResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddRoomResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.AddRoomResponse.Descriptor; }
      }
      
      public override AddRoomResponse DefaultInstanceForType {
        get { return global::C2GNet.AddRoomResponse.DefaultInstance; }
      }
      
      public override AddRoomResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddRoomResponse) {
          return MergeFrom((AddRoomResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddRoomResponse other) {
        if (other == global::C2GNet.AddRoomResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        if (other.HasAddRoomRequest) {
          MergeAddRoomRequest(other.AddRoomRequest);
        }
        if (other.HasTeamId) {
          TeamId = other.TeamId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addRoomResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addRoomResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
            case 26: {
              global::C2GNet.AddRoomRequest.Builder subBuilder = global::C2GNet.AddRoomRequest.CreateBuilder();
              if (result.hasAddRoomRequest) {
                subBuilder.MergeFrom(AddRoomRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AddRoomRequest = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasTeamId = input.ReadInt32(ref result.teamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
      
      public bool HasAddRoomRequest {
       get { return result.hasAddRoomRequest; }
      }
      public global::C2GNet.AddRoomRequest AddRoomRequest {
        get { return result.AddRoomRequest; }
        set { SetAddRoomRequest(value); }
      }
      public Builder SetAddRoomRequest(global::C2GNet.AddRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddRoomRequest = true;
        result.addRoomRequest_ = value;
        return this;
      }
      public Builder SetAddRoomRequest(global::C2GNet.AddRoomRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAddRoomRequest = true;
        result.addRoomRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAddRoomRequest(global::C2GNet.AddRoomRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAddRoomRequest &&
            result.addRoomRequest_ != global::C2GNet.AddRoomRequest.DefaultInstance) {
            result.addRoomRequest_ = global::C2GNet.AddRoomRequest.CreateBuilder(result.addRoomRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.addRoomRequest_ = value;
        }
        result.hasAddRoomRequest = true;
        return this;
      }
      public Builder ClearAddRoomRequest() {
        PrepareBuilder();
        result.hasAddRoomRequest = false;
        result.addRoomRequest_ = null;
        return this;
      }
      
      public bool HasTeamId {
        get { return result.hasTeamId; }
      }
      public int TeamId {
        get { return result.TeamId; }
        set { SetTeamId(value); }
      }
      public Builder SetTeamId(int value) {
        PrepareBuilder();
        result.hasTeamId = true;
        result.teamId_ = value;
        return this;
      }
      public Builder ClearTeamId() {
        PrepareBuilder();
        result.hasTeamId = false;
        result.teamId_ = 0;
        return this;
      }
    }
    static AddRoomResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OutRoomRequest : pb::GeneratedMessage<OutRoomRequest, OutRoomRequest.Builder> {
    private OutRoomRequest() { }
    private static readonly OutRoomRequest defaultInstance = new OutRoomRequest().MakeReadOnly();
    private static readonly string[] _outRoomRequestFieldNames = new string[] {  };
    private static readonly uint[] _outRoomRequestFieldTags = new uint[] {  };
    public static OutRoomRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OutRoomRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OutRoomRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_OutRoomRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OutRoomRequest, OutRoomRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_OutRoomRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _outRoomRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OutRoomRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OutRoomRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OutRoomRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OutRoomRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OutRoomRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OutRoomRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OutRoomRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OutRoomRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OutRoomRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OutRoomRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OutRoomRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OutRoomRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OutRoomRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OutRoomRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OutRoomRequest result;
      
      private OutRoomRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          OutRoomRequest original = result;
          result = new OutRoomRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OutRoomRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.OutRoomRequest.Descriptor; }
      }
      
      public override OutRoomRequest DefaultInstanceForType {
        get { return global::C2GNet.OutRoomRequest.DefaultInstance; }
      }
      
      public override OutRoomRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OutRoomRequest) {
          return MergeFrom((OutRoomRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OutRoomRequest other) {
        if (other == global::C2GNet.OutRoomRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_outRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _outRoomRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static OutRoomRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OutRoomResponse : pb::GeneratedMessage<OutRoomResponse, OutRoomResponse.Builder> {
    private OutRoomResponse() { }
    private static readonly OutRoomResponse defaultInstance = new OutRoomResponse().MakeReadOnly();
    private static readonly string[] _outRoomResponseFieldNames = new string[] { "errormsg", "result" };
    private static readonly uint[] _outRoomResponseFieldTags = new uint[] { 18, 8 };
    public static OutRoomResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OutRoomResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OutRoomResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_OutRoomResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OutRoomResponse, OutRoomResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_OutRoomResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _outRoomResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OutRoomResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OutRoomResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OutRoomResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OutRoomResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OutRoomResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OutRoomResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OutRoomResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OutRoomResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OutRoomResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OutRoomResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OutRoomResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OutRoomResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OutRoomResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OutRoomResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OutRoomResponse result;
      
      private OutRoomResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          OutRoomResponse original = result;
          result = new OutRoomResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OutRoomResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.OutRoomResponse.Descriptor; }
      }
      
      public override OutRoomResponse DefaultInstanceForType {
        get { return global::C2GNet.OutRoomResponse.DefaultInstance; }
      }
      
      public override OutRoomResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OutRoomResponse) {
          return MergeFrom((OutRoomResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OutRoomResponse other) {
        if (other == global::C2GNet.OutRoomResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_outRoomResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _outRoomResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
    }
    static OutRoomResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FollowListRequest : pb::GeneratedMessage<FollowListRequest, FollowListRequest.Builder> {
    private FollowListRequest() { }
    private static readonly FollowListRequest defaultInstance = new FollowListRequest().MakeReadOnly();
    private static readonly string[] _followListRequestFieldNames = new string[] {  };
    private static readonly uint[] _followListRequestFieldTags = new uint[] {  };
    public static FollowListRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FollowListRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FollowListRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_FollowListRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FollowListRequest, FollowListRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_FollowListRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _followListRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FollowListRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FollowListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FollowListRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FollowListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FollowListRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FollowListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FollowListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FollowListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FollowListRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FollowListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FollowListRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FollowListRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FollowListRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FollowListRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FollowListRequest result;
      
      private FollowListRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          FollowListRequest original = result;
          result = new FollowListRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FollowListRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.FollowListRequest.Descriptor; }
      }
      
      public override FollowListRequest DefaultInstanceForType {
        get { return global::C2GNet.FollowListRequest.DefaultInstance; }
      }
      
      public override FollowListRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FollowListRequest) {
          return MergeFrom((FollowListRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FollowListRequest other) {
        if (other == global::C2GNet.FollowListRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_followListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _followListRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static FollowListRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FollowListResponse : pb::GeneratedMessage<FollowListResponse, FollowListResponse.Builder> {
    private FollowListResponse() { }
    private static readonly FollowListResponse defaultInstance = new FollowListResponse().MakeReadOnly();
    private static readonly string[] _followListResponseFieldNames = new string[] { "follows" };
    private static readonly uint[] _followListResponseFieldTags = new uint[] { 10 };
    public static FollowListResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FollowListResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FollowListResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_FollowListResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FollowListResponse, FollowListResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_FollowListResponse__FieldAccessorTable; }
    }
    
    public const int FollowsFieldNumber = 1;
    private pbc::PopsicleList<global::C2GNet.NUser> follows_ = new pbc::PopsicleList<global::C2GNet.NUser>();
    public scg::IList<global::C2GNet.NUser> FollowsList {
      get { return follows_; }
    }
    public int FollowsCount {
      get { return follows_.Count; }
    }
    public global::C2GNet.NUser GetFollows(int index) {
      return follows_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _followListResponseFieldNames;
      if (follows_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], follows_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::C2GNet.NUser element in FollowsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FollowListResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FollowListResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FollowListResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FollowListResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FollowListResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FollowListResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FollowListResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FollowListResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FollowListResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FollowListResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FollowListResponse MakeReadOnly() {
      follows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FollowListResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FollowListResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FollowListResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FollowListResponse result;
      
      private FollowListResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          FollowListResponse original = result;
          result = new FollowListResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FollowListResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.FollowListResponse.Descriptor; }
      }
      
      public override FollowListResponse DefaultInstanceForType {
        get { return global::C2GNet.FollowListResponse.DefaultInstance; }
      }
      
      public override FollowListResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FollowListResponse) {
          return MergeFrom((FollowListResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FollowListResponse other) {
        if (other == global::C2GNet.FollowListResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.follows_.Count != 0) {
          result.follows_.Add(other.follows_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_followListResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _followListResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.follows_, global::C2GNet.NUser.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::C2GNet.NUser> FollowsList {
        get { return PrepareBuilder().follows_; }
      }
      public int FollowsCount {
        get { return result.FollowsCount; }
      }
      public global::C2GNet.NUser GetFollows(int index) {
        return result.GetFollows(index);
      }
      public Builder SetFollows(int index, global::C2GNet.NUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.follows_[index] = value;
        return this;
      }
      public Builder SetFollows(int index, global::C2GNet.NUser.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.follows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFollows(global::C2GNet.NUser value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.follows_.Add(value);
        return this;
      }
      public Builder AddFollows(global::C2GNet.NUser.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.follows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFollows(scg::IEnumerable<global::C2GNet.NUser> values) {
        PrepareBuilder();
        result.follows_.Add(values);
        return this;
      }
      public Builder ClearFollows() {
        PrepareBuilder();
        result.follows_.Clear();
        return this;
      }
    }
    static FollowListResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatMessage : pb::GeneratedMessage<ChatMessage, ChatMessage.Builder> {
    private ChatMessage() { }
    private static readonly ChatMessage defaultInstance = new ChatMessage().MakeReadOnly();
    private static readonly string[] _chatMessageFieldNames = new string[] { "chatChannel", "chatRoomType", "enterLiveUserId", "fromCCharacterId", "fromId", "fromLevel", "fromName", "msg", "time", "toCCharacterId", "toId", "toLevel", "toName" };
    private static readonly uint[] _chatMessageFieldTags = new uint[] { 8, 96, 104, 40, 16, 32, 26, 82, 88, 72, 48, 64, 58 };
    public static ChatMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_ChatMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatMessage, ChatMessage.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_ChatMessage__FieldAccessorTable; }
    }
    
    public const int ChatChannelFieldNumber = 1;
    private bool hasChatChannel;
    private global::C2GNet.ChatChannel chatChannel_ = global::C2GNet.ChatChannel.Comp;
    public bool HasChatChannel {
      get { return hasChatChannel; }
    }
    public global::C2GNet.ChatChannel ChatChannel {
      get { return chatChannel_; }
    }
    
    public const int FromIdFieldNumber = 2;
    private bool hasFromId;
    private int fromId_;
    public bool HasFromId {
      get { return hasFromId; }
    }
    public int FromId {
      get { return fromId_; }
    }
    
    public const int FromNameFieldNumber = 3;
    private bool hasFromName;
    private string fromName_ = "";
    public bool HasFromName {
      get { return hasFromName; }
    }
    public string FromName {
      get { return fromName_; }
    }
    
    public const int FromLevelFieldNumber = 4;
    private bool hasFromLevel;
    private int fromLevel_;
    public bool HasFromLevel {
      get { return hasFromLevel; }
    }
    public int FromLevel {
      get { return fromLevel_; }
    }
    
    public const int FromCCharacterIdFieldNumber = 5;
    private bool hasFromCCharacterId;
    private int fromCCharacterId_;
    public bool HasFromCCharacterId {
      get { return hasFromCCharacterId; }
    }
    public int FromCCharacterId {
      get { return fromCCharacterId_; }
    }
    
    public const int ToIdFieldNumber = 6;
    private bool hasToId;
    private int toId_;
    public bool HasToId {
      get { return hasToId; }
    }
    public int ToId {
      get { return toId_; }
    }
    
    public const int ToNameFieldNumber = 7;
    private bool hasToName;
    private string toName_ = "";
    public bool HasToName {
      get { return hasToName; }
    }
    public string ToName {
      get { return toName_; }
    }
    
    public const int ToLevelFieldNumber = 8;
    private bool hasToLevel;
    private int toLevel_;
    public bool HasToLevel {
      get { return hasToLevel; }
    }
    public int ToLevel {
      get { return toLevel_; }
    }
    
    public const int ToCCharacterIdFieldNumber = 9;
    private bool hasToCCharacterId;
    private int toCCharacterId_;
    public bool HasToCCharacterId {
      get { return hasToCCharacterId; }
    }
    public int ToCCharacterId {
      get { return toCCharacterId_; }
    }
    
    public const int MsgFieldNumber = 10;
    private bool hasMsg;
    private string msg_ = "";
    public bool HasMsg {
      get { return hasMsg; }
    }
    public string Msg {
      get { return msg_; }
    }
    
    public const int TimeFieldNumber = 11;
    private bool hasTime;
    private long time_;
    public bool HasTime {
      get { return hasTime; }
    }
    public long Time {
      get { return time_; }
    }
    
    public const int ChatRoomTypeFieldNumber = 12;
    private bool hasChatRoomType;
    private global::C2GNet.ChatRoomType chatRoomType_ = global::C2GNet.ChatRoomType.Room_;
    public bool HasChatRoomType {
      get { return hasChatRoomType; }
    }
    public global::C2GNet.ChatRoomType ChatRoomType {
      get { return chatRoomType_; }
    }
    
    public const int EnterLiveUserIdFieldNumber = 13;
    private bool hasEnterLiveUserId;
    private int enterLiveUserId_;
    public bool HasEnterLiveUserId {
      get { return hasEnterLiveUserId; }
    }
    public int EnterLiveUserId {
      get { return enterLiveUserId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatMessageFieldNames;
      if (hasChatChannel) {
        output.WriteEnum(1, field_names[0], (int) ChatChannel, ChatChannel);
      }
      if (hasFromId) {
        output.WriteInt32(2, field_names[4], FromId);
      }
      if (hasFromName) {
        output.WriteString(3, field_names[6], FromName);
      }
      if (hasFromLevel) {
        output.WriteInt32(4, field_names[5], FromLevel);
      }
      if (hasFromCCharacterId) {
        output.WriteInt32(5, field_names[3], FromCCharacterId);
      }
      if (hasToId) {
        output.WriteInt32(6, field_names[10], ToId);
      }
      if (hasToName) {
        output.WriteString(7, field_names[12], ToName);
      }
      if (hasToLevel) {
        output.WriteInt32(8, field_names[11], ToLevel);
      }
      if (hasToCCharacterId) {
        output.WriteInt32(9, field_names[9], ToCCharacterId);
      }
      if (hasMsg) {
        output.WriteString(10, field_names[7], Msg);
      }
      if (hasTime) {
        output.WriteInt64(11, field_names[8], Time);
      }
      if (hasChatRoomType) {
        output.WriteEnum(12, field_names[1], (int) ChatRoomType, ChatRoomType);
      }
      if (hasEnterLiveUserId) {
        output.WriteInt32(13, field_names[2], EnterLiveUserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasChatChannel) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ChatChannel);
      }
      if (hasFromId) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, FromId);
      }
      if (hasFromName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, FromName);
      }
      if (hasFromLevel) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, FromLevel);
      }
      if (hasFromCCharacterId) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, FromCCharacterId);
      }
      if (hasToId) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, ToId);
      }
      if (hasToName) {
        size += pb::CodedOutputStream.ComputeStringSize(7, ToName);
      }
      if (hasToLevel) {
        size += pb::CodedOutputStream.ComputeInt32Size(8, ToLevel);
      }
      if (hasToCCharacterId) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, ToCCharacterId);
      }
      if (hasMsg) {
        size += pb::CodedOutputStream.ComputeStringSize(10, Msg);
      }
      if (hasTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(11, Time);
      }
      if (hasChatRoomType) {
        size += pb::CodedOutputStream.ComputeEnumSize(12, (int) ChatRoomType);
      }
      if (hasEnterLiveUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(13, EnterLiveUserId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatMessage result;
      
      private ChatMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatMessage original = result;
          result = new ChatMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.ChatMessage.Descriptor; }
      }
      
      public override ChatMessage DefaultInstanceForType {
        get { return global::C2GNet.ChatMessage.DefaultInstance; }
      }
      
      public override ChatMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatMessage) {
          return MergeFrom((ChatMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatMessage other) {
        if (other == global::C2GNet.ChatMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChatChannel) {
          ChatChannel = other.ChatChannel;
        }
        if (other.HasFromId) {
          FromId = other.FromId;
        }
        if (other.HasFromName) {
          FromName = other.FromName;
        }
        if (other.HasFromLevel) {
          FromLevel = other.FromLevel;
        }
        if (other.HasFromCCharacterId) {
          FromCCharacterId = other.FromCCharacterId;
        }
        if (other.HasToId) {
          ToId = other.ToId;
        }
        if (other.HasToName) {
          ToName = other.ToName;
        }
        if (other.HasToLevel) {
          ToLevel = other.ToLevel;
        }
        if (other.HasToCCharacterId) {
          ToCCharacterId = other.ToCCharacterId;
        }
        if (other.HasMsg) {
          Msg = other.Msg;
        }
        if (other.HasTime) {
          Time = other.Time;
        }
        if (other.HasChatRoomType) {
          ChatRoomType = other.ChatRoomType;
        }
        if (other.HasEnterLiveUserId) {
          EnterLiveUserId = other.EnterLiveUserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.chatChannel_, out unknown)) {
                result.hasChatChannel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasFromId = input.ReadInt32(ref result.fromId_);
              break;
            }
            case 26: {
              result.hasFromName = input.ReadString(ref result.fromName_);
              break;
            }
            case 32: {
              result.hasFromLevel = input.ReadInt32(ref result.fromLevel_);
              break;
            }
            case 40: {
              result.hasFromCCharacterId = input.ReadInt32(ref result.fromCCharacterId_);
              break;
            }
            case 48: {
              result.hasToId = input.ReadInt32(ref result.toId_);
              break;
            }
            case 58: {
              result.hasToName = input.ReadString(ref result.toName_);
              break;
            }
            case 64: {
              result.hasToLevel = input.ReadInt32(ref result.toLevel_);
              break;
            }
            case 72: {
              result.hasToCCharacterId = input.ReadInt32(ref result.toCCharacterId_);
              break;
            }
            case 82: {
              result.hasMsg = input.ReadString(ref result.msg_);
              break;
            }
            case 88: {
              result.hasTime = input.ReadInt64(ref result.time_);
              break;
            }
            case 96: {
              object unknown;
              if(input.ReadEnum(ref result.chatRoomType_, out unknown)) {
                result.hasChatRoomType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(12, (ulong)(int)unknown);
              }
              break;
            }
            case 104: {
              result.hasEnterLiveUserId = input.ReadInt32(ref result.enterLiveUserId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChatChannel {
       get { return result.hasChatChannel; }
      }
      public global::C2GNet.ChatChannel ChatChannel {
        get { return result.ChatChannel; }
        set { SetChatChannel(value); }
      }
      public Builder SetChatChannel(global::C2GNet.ChatChannel value) {
        PrepareBuilder();
        result.hasChatChannel = true;
        result.chatChannel_ = value;
        return this;
      }
      public Builder ClearChatChannel() {
        PrepareBuilder();
        result.hasChatChannel = false;
        result.chatChannel_ = global::C2GNet.ChatChannel.Comp;
        return this;
      }
      
      public bool HasFromId {
        get { return result.hasFromId; }
      }
      public int FromId {
        get { return result.FromId; }
        set { SetFromId(value); }
      }
      public Builder SetFromId(int value) {
        PrepareBuilder();
        result.hasFromId = true;
        result.fromId_ = value;
        return this;
      }
      public Builder ClearFromId() {
        PrepareBuilder();
        result.hasFromId = false;
        result.fromId_ = 0;
        return this;
      }
      
      public bool HasFromName {
        get { return result.hasFromName; }
      }
      public string FromName {
        get { return result.FromName; }
        set { SetFromName(value); }
      }
      public Builder SetFromName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFromName = true;
        result.fromName_ = value;
        return this;
      }
      public Builder ClearFromName() {
        PrepareBuilder();
        result.hasFromName = false;
        result.fromName_ = "";
        return this;
      }
      
      public bool HasFromLevel {
        get { return result.hasFromLevel; }
      }
      public int FromLevel {
        get { return result.FromLevel; }
        set { SetFromLevel(value); }
      }
      public Builder SetFromLevel(int value) {
        PrepareBuilder();
        result.hasFromLevel = true;
        result.fromLevel_ = value;
        return this;
      }
      public Builder ClearFromLevel() {
        PrepareBuilder();
        result.hasFromLevel = false;
        result.fromLevel_ = 0;
        return this;
      }
      
      public bool HasFromCCharacterId {
        get { return result.hasFromCCharacterId; }
      }
      public int FromCCharacterId {
        get { return result.FromCCharacterId; }
        set { SetFromCCharacterId(value); }
      }
      public Builder SetFromCCharacterId(int value) {
        PrepareBuilder();
        result.hasFromCCharacterId = true;
        result.fromCCharacterId_ = value;
        return this;
      }
      public Builder ClearFromCCharacterId() {
        PrepareBuilder();
        result.hasFromCCharacterId = false;
        result.fromCCharacterId_ = 0;
        return this;
      }
      
      public bool HasToId {
        get { return result.hasToId; }
      }
      public int ToId {
        get { return result.ToId; }
        set { SetToId(value); }
      }
      public Builder SetToId(int value) {
        PrepareBuilder();
        result.hasToId = true;
        result.toId_ = value;
        return this;
      }
      public Builder ClearToId() {
        PrepareBuilder();
        result.hasToId = false;
        result.toId_ = 0;
        return this;
      }
      
      public bool HasToName {
        get { return result.hasToName; }
      }
      public string ToName {
        get { return result.ToName; }
        set { SetToName(value); }
      }
      public Builder SetToName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToName = true;
        result.toName_ = value;
        return this;
      }
      public Builder ClearToName() {
        PrepareBuilder();
        result.hasToName = false;
        result.toName_ = "";
        return this;
      }
      
      public bool HasToLevel {
        get { return result.hasToLevel; }
      }
      public int ToLevel {
        get { return result.ToLevel; }
        set { SetToLevel(value); }
      }
      public Builder SetToLevel(int value) {
        PrepareBuilder();
        result.hasToLevel = true;
        result.toLevel_ = value;
        return this;
      }
      public Builder ClearToLevel() {
        PrepareBuilder();
        result.hasToLevel = false;
        result.toLevel_ = 0;
        return this;
      }
      
      public bool HasToCCharacterId {
        get { return result.hasToCCharacterId; }
      }
      public int ToCCharacterId {
        get { return result.ToCCharacterId; }
        set { SetToCCharacterId(value); }
      }
      public Builder SetToCCharacterId(int value) {
        PrepareBuilder();
        result.hasToCCharacterId = true;
        result.toCCharacterId_ = value;
        return this;
      }
      public Builder ClearToCCharacterId() {
        PrepareBuilder();
        result.hasToCCharacterId = false;
        result.toCCharacterId_ = 0;
        return this;
      }
      
      public bool HasMsg {
        get { return result.hasMsg; }
      }
      public string Msg {
        get { return result.Msg; }
        set { SetMsg(value); }
      }
      public Builder SetMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMsg = true;
        result.msg_ = value;
        return this;
      }
      public Builder ClearMsg() {
        PrepareBuilder();
        result.hasMsg = false;
        result.msg_ = "";
        return this;
      }
      
      public bool HasTime {
        get { return result.hasTime; }
      }
      public long Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      public Builder SetTime(long value) {
        PrepareBuilder();
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        PrepareBuilder();
        result.hasTime = false;
        result.time_ = 0L;
        return this;
      }
      
      public bool HasChatRoomType {
       get { return result.hasChatRoomType; }
      }
      public global::C2GNet.ChatRoomType ChatRoomType {
        get { return result.ChatRoomType; }
        set { SetChatRoomType(value); }
      }
      public Builder SetChatRoomType(global::C2GNet.ChatRoomType value) {
        PrepareBuilder();
        result.hasChatRoomType = true;
        result.chatRoomType_ = value;
        return this;
      }
      public Builder ClearChatRoomType() {
        PrepareBuilder();
        result.hasChatRoomType = false;
        result.chatRoomType_ = global::C2GNet.ChatRoomType.Room_;
        return this;
      }
      
      public bool HasEnterLiveUserId {
        get { return result.hasEnterLiveUserId; }
      }
      public int EnterLiveUserId {
        get { return result.EnterLiveUserId; }
        set { SetEnterLiveUserId(value); }
      }
      public Builder SetEnterLiveUserId(int value) {
        PrepareBuilder();
        result.hasEnterLiveUserId = true;
        result.enterLiveUserId_ = value;
        return this;
      }
      public Builder ClearEnterLiveUserId() {
        PrepareBuilder();
        result.hasEnterLiveUserId = false;
        result.enterLiveUserId_ = 0;
        return this;
      }
    }
    static ChatMessage() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatRequest : pb::GeneratedMessage<ChatRequest, ChatRequest.Builder> {
    private ChatRequest() { }
    private static readonly ChatRequest defaultInstance = new ChatRequest().MakeReadOnly();
    private static readonly string[] _chatRequestFieldNames = new string[] { "chatMessage" };
    private static readonly uint[] _chatRequestFieldTags = new uint[] { 10 };
    public static ChatRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_ChatRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatRequest, ChatRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_ChatRequest__FieldAccessorTable; }
    }
    
    public const int ChatMessageFieldNumber = 1;
    private bool hasChatMessage;
    private global::C2GNet.ChatMessage chatMessage_;
    public bool HasChatMessage {
      get { return hasChatMessage; }
    }
    public global::C2GNet.ChatMessage ChatMessage {
      get { return chatMessage_ ?? global::C2GNet.ChatMessage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatRequestFieldNames;
      if (hasChatMessage) {
        output.WriteMessage(1, field_names[0], ChatMessage);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasChatMessage) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ChatMessage);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatRequest result;
      
      private ChatRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatRequest original = result;
          result = new ChatRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.ChatRequest.Descriptor; }
      }
      
      public override ChatRequest DefaultInstanceForType {
        get { return global::C2GNet.ChatRequest.DefaultInstance; }
      }
      
      public override ChatRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatRequest) {
          return MergeFrom((ChatRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatRequest other) {
        if (other == global::C2GNet.ChatRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChatMessage) {
          MergeChatMessage(other.ChatMessage);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::C2GNet.ChatMessage.Builder subBuilder = global::C2GNet.ChatMessage.CreateBuilder();
              if (result.hasChatMessage) {
                subBuilder.MergeFrom(ChatMessage);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChatMessage = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChatMessage {
       get { return result.hasChatMessage; }
      }
      public global::C2GNet.ChatMessage ChatMessage {
        get { return result.ChatMessage; }
        set { SetChatMessage(value); }
      }
      public Builder SetChatMessage(global::C2GNet.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChatMessage = true;
        result.chatMessage_ = value;
        return this;
      }
      public Builder SetChatMessage(global::C2GNet.ChatMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChatMessage = true;
        result.chatMessage_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChatMessage(global::C2GNet.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChatMessage &&
            result.chatMessage_ != global::C2GNet.ChatMessage.DefaultInstance) {
            result.chatMessage_ = global::C2GNet.ChatMessage.CreateBuilder(result.chatMessage_).MergeFrom(value).BuildPartial();
        } else {
          result.chatMessage_ = value;
        }
        result.hasChatMessage = true;
        return this;
      }
      public Builder ClearChatMessage() {
        PrepareBuilder();
        result.hasChatMessage = false;
        result.chatMessage_ = null;
        return this;
      }
    }
    static ChatRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatResponse : pb::GeneratedMessage<ChatResponse, ChatResponse.Builder> {
    private ChatResponse() { }
    private static readonly ChatResponse defaultInstance = new ChatResponse().MakeReadOnly();
    private static readonly string[] _chatResponseFieldNames = new string[] { "compMessages", "errormsg", "privateMessages", "result", "roomMessages" };
    private static readonly uint[] _chatResponseFieldTags = new uint[] { 26, 18, 34, 8, 42 };
    public static ChatResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_ChatResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatResponse, ChatResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_ChatResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public const int CompMessagesFieldNumber = 3;
    private pbc::PopsicleList<global::C2GNet.ChatMessage> compMessages_ = new pbc::PopsicleList<global::C2GNet.ChatMessage>();
    public scg::IList<global::C2GNet.ChatMessage> CompMessagesList {
      get { return compMessages_; }
    }
    public int CompMessagesCount {
      get { return compMessages_.Count; }
    }
    public global::C2GNet.ChatMessage GetCompMessages(int index) {
      return compMessages_[index];
    }
    
    public const int PrivateMessagesFieldNumber = 4;
    private pbc::PopsicleList<global::C2GNet.ChatMessage> privateMessages_ = new pbc::PopsicleList<global::C2GNet.ChatMessage>();
    public scg::IList<global::C2GNet.ChatMessage> PrivateMessagesList {
      get { return privateMessages_; }
    }
    public int PrivateMessagesCount {
      get { return privateMessages_.Count; }
    }
    public global::C2GNet.ChatMessage GetPrivateMessages(int index) {
      return privateMessages_[index];
    }
    
    public const int RoomMessagesFieldNumber = 5;
    private pbc::PopsicleList<global::C2GNet.ChatMessage> roomMessages_ = new pbc::PopsicleList<global::C2GNet.ChatMessage>();
    public scg::IList<global::C2GNet.ChatMessage> RoomMessagesList {
      get { return roomMessages_; }
    }
    public int RoomMessagesCount {
      get { return roomMessages_.Count; }
    }
    public global::C2GNet.ChatMessage GetRoomMessages(int index) {
      return roomMessages_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[3], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[1], Errormsg);
      }
      if (compMessages_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], compMessages_);
      }
      if (privateMessages_.Count > 0) {
        output.WriteMessageArray(4, field_names[2], privateMessages_);
      }
      if (roomMessages_.Count > 0) {
        output.WriteMessageArray(5, field_names[4], roomMessages_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      foreach (global::C2GNet.ChatMessage element in CompMessagesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      foreach (global::C2GNet.ChatMessage element in PrivateMessagesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      foreach (global::C2GNet.ChatMessage element in RoomMessagesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatResponse MakeReadOnly() {
      compMessages_.MakeReadOnly();
      privateMessages_.MakeReadOnly();
      roomMessages_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatResponse result;
      
      private ChatResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatResponse original = result;
          result = new ChatResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.ChatResponse.Descriptor; }
      }
      
      public override ChatResponse DefaultInstanceForType {
        get { return global::C2GNet.ChatResponse.DefaultInstance; }
      }
      
      public override ChatResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatResponse) {
          return MergeFrom((ChatResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatResponse other) {
        if (other == global::C2GNet.ChatResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        if (other.compMessages_.Count != 0) {
          result.compMessages_.Add(other.compMessages_);
        }
        if (other.privateMessages_.Count != 0) {
          result.privateMessages_.Add(other.privateMessages_);
        }
        if (other.roomMessages_.Count != 0) {
          result.roomMessages_.Add(other.roomMessages_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.compMessages_, global::C2GNet.ChatMessage.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.privateMessages_, global::C2GNet.ChatMessage.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.roomMessages_, global::C2GNet.ChatMessage.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::C2GNet.ChatMessage> CompMessagesList {
        get { return PrepareBuilder().compMessages_; }
      }
      public int CompMessagesCount {
        get { return result.CompMessagesCount; }
      }
      public global::C2GNet.ChatMessage GetCompMessages(int index) {
        return result.GetCompMessages(index);
      }
      public Builder SetCompMessages(int index, global::C2GNet.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.compMessages_[index] = value;
        return this;
      }
      public Builder SetCompMessages(int index, global::C2GNet.ChatMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.compMessages_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCompMessages(global::C2GNet.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.compMessages_.Add(value);
        return this;
      }
      public Builder AddCompMessages(global::C2GNet.ChatMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.compMessages_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCompMessages(scg::IEnumerable<global::C2GNet.ChatMessage> values) {
        PrepareBuilder();
        result.compMessages_.Add(values);
        return this;
      }
      public Builder ClearCompMessages() {
        PrepareBuilder();
        result.compMessages_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::C2GNet.ChatMessage> PrivateMessagesList {
        get { return PrepareBuilder().privateMessages_; }
      }
      public int PrivateMessagesCount {
        get { return result.PrivateMessagesCount; }
      }
      public global::C2GNet.ChatMessage GetPrivateMessages(int index) {
        return result.GetPrivateMessages(index);
      }
      public Builder SetPrivateMessages(int index, global::C2GNet.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.privateMessages_[index] = value;
        return this;
      }
      public Builder SetPrivateMessages(int index, global::C2GNet.ChatMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.privateMessages_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrivateMessages(global::C2GNet.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.privateMessages_.Add(value);
        return this;
      }
      public Builder AddPrivateMessages(global::C2GNet.ChatMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.privateMessages_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrivateMessages(scg::IEnumerable<global::C2GNet.ChatMessage> values) {
        PrepareBuilder();
        result.privateMessages_.Add(values);
        return this;
      }
      public Builder ClearPrivateMessages() {
        PrepareBuilder();
        result.privateMessages_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::C2GNet.ChatMessage> RoomMessagesList {
        get { return PrepareBuilder().roomMessages_; }
      }
      public int RoomMessagesCount {
        get { return result.RoomMessagesCount; }
      }
      public global::C2GNet.ChatMessage GetRoomMessages(int index) {
        return result.GetRoomMessages(index);
      }
      public Builder SetRoomMessages(int index, global::C2GNet.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.roomMessages_[index] = value;
        return this;
      }
      public Builder SetRoomMessages(int index, global::C2GNet.ChatMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.roomMessages_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRoomMessages(global::C2GNet.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.roomMessages_.Add(value);
        return this;
      }
      public Builder AddRoomMessages(global::C2GNet.ChatMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.roomMessages_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRoomMessages(scg::IEnumerable<global::C2GNet.ChatMessage> values) {
        PrepareBuilder();
        result.roomMessages_.Add(values);
        return this;
      }
      public Builder ClearRoomMessages() {
        PrepareBuilder();
        result.roomMessages_.Clear();
        return this;
      }
    }
    static ChatResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserStatusQueryRequest : pb::GeneratedMessage<UserStatusQueryRequest, UserStatusQueryRequest.Builder> {
    private UserStatusQueryRequest() { }
    private static readonly UserStatusQueryRequest defaultInstance = new UserStatusQueryRequest().MakeReadOnly();
    private static readonly string[] _userStatusQueryRequestFieldNames = new string[] { "userIds" };
    private static readonly uint[] _userStatusQueryRequestFieldTags = new uint[] { 8 };
    public static UserStatusQueryRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserStatusQueryRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserStatusQueryRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserStatusQueryRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserStatusQueryRequest, UserStatusQueryRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserStatusQueryRequest__FieldAccessorTable; }
    }
    
    public const int UserIdsFieldNumber = 1;
    private pbc::PopsicleList<int> userIds_ = new pbc::PopsicleList<int>();
    public scg::IList<int> UserIdsList {
      get { return pbc::Lists.AsReadOnly(userIds_); }
    }
    public int UserIdsCount {
      get { return userIds_.Count; }
    }
    public int GetUserIds(int index) {
      return userIds_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userStatusQueryRequestFieldNames;
      if (userIds_.Count > 0) {
        output.WriteInt32Array(1, field_names[0], userIds_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (int element in UserIdsList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * userIds_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserStatusQueryRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserStatusQueryRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserStatusQueryRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserStatusQueryRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserStatusQueryRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserStatusQueryRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserStatusQueryRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserStatusQueryRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserStatusQueryRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserStatusQueryRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserStatusQueryRequest MakeReadOnly() {
      userIds_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserStatusQueryRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserStatusQueryRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserStatusQueryRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserStatusQueryRequest result;
      
      private UserStatusQueryRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserStatusQueryRequest original = result;
          result = new UserStatusQueryRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserStatusQueryRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UserStatusQueryRequest.Descriptor; }
      }
      
      public override UserStatusQueryRequest DefaultInstanceForType {
        get { return global::C2GNet.UserStatusQueryRequest.DefaultInstance; }
      }
      
      public override UserStatusQueryRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserStatusQueryRequest) {
          return MergeFrom((UserStatusQueryRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserStatusQueryRequest other) {
        if (other == global::C2GNet.UserStatusQueryRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.userIds_.Count != 0) {
          result.userIds_.Add(other.userIds_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userStatusQueryRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userStatusQueryRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadInt32Array(tag, field_name, result.userIds_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<int> UserIdsList {
        get { return PrepareBuilder().userIds_; }
      }
      public int UserIdsCount {
        get { return result.UserIdsCount; }
      }
      public int GetUserIds(int index) {
        return result.GetUserIds(index);
      }
      public Builder SetUserIds(int index, int value) {
        PrepareBuilder();
        result.userIds_[index] = value;
        return this;
      }
      public Builder AddUserIds(int value) {
        PrepareBuilder();
        result.userIds_.Add(value);
        return this;
      }
      public Builder AddRangeUserIds(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.userIds_.Add(values);
        return this;
      }
      public Builder ClearUserIds() {
        PrepareBuilder();
        result.userIds_.Clear();
        return this;
      }
    }
    static UserStatusQueryRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserStatusQueryResponse : pb::GeneratedMessage<UserStatusQueryResponse, UserStatusQueryResponse.Builder> {
    private UserStatusQueryResponse() { }
    private static readonly UserStatusQueryResponse defaultInstance = new UserStatusQueryResponse().MakeReadOnly();
    private static readonly string[] _userStatusQueryResponseFieldNames = new string[] { "status" };
    private static readonly uint[] _userStatusQueryResponseFieldTags = new uint[] { 8 };
    public static UserStatusQueryResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserStatusQueryResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserStatusQueryResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserStatusQueryResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserStatusQueryResponse, UserStatusQueryResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UserStatusQueryResponse__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private pbc::PopsicleList<bool> status_ = new pbc::PopsicleList<bool>();
    public scg::IList<bool> StatusList {
      get { return pbc::Lists.AsReadOnly(status_); }
    }
    public int StatusCount {
      get { return status_.Count; }
    }
    public bool GetStatus(int index) {
      return status_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userStatusQueryResponseFieldNames;
      if (status_.Count > 0) {
        output.WriteBoolArray(1, field_names[0], status_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        dataSize = 1 * status_.Count;
        size += dataSize;
        size += 1 * status_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserStatusQueryResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserStatusQueryResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserStatusQueryResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserStatusQueryResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserStatusQueryResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserStatusQueryResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserStatusQueryResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserStatusQueryResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserStatusQueryResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserStatusQueryResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserStatusQueryResponse MakeReadOnly() {
      status_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserStatusQueryResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserStatusQueryResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserStatusQueryResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserStatusQueryResponse result;
      
      private UserStatusQueryResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UserStatusQueryResponse original = result;
          result = new UserStatusQueryResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserStatusQueryResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UserStatusQueryResponse.Descriptor; }
      }
      
      public override UserStatusQueryResponse DefaultInstanceForType {
        get { return global::C2GNet.UserStatusQueryResponse.DefaultInstance; }
      }
      
      public override UserStatusQueryResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserStatusQueryResponse) {
          return MergeFrom((UserStatusQueryResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserStatusQueryResponse other) {
        if (other == global::C2GNet.UserStatusQueryResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.status_.Count != 0) {
          result.status_.Add(other.status_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userStatusQueryResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userStatusQueryResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadBoolArray(tag, field_name, result.status_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<bool> StatusList {
        get { return PrepareBuilder().status_; }
      }
      public int StatusCount {
        get { return result.StatusCount; }
      }
      public bool GetStatus(int index) {
        return result.GetStatus(index);
      }
      public Builder SetStatus(int index, bool value) {
        PrepareBuilder();
        result.status_[index] = value;
        return this;
      }
      public Builder AddStatus(bool value) {
        PrepareBuilder();
        result.status_.Add(value);
        return this;
      }
      public Builder AddRangeStatus(scg::IEnumerable<bool> values) {
        PrepareBuilder();
        result.status_.Add(values);
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.status_.Clear();
        return this;
      }
    }
    static UserStatusQueryResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StartMatchRequest : pb::GeneratedMessage<StartMatchRequest, StartMatchRequest.Builder> {
    private StartMatchRequest() { }
    private static readonly StartMatchRequest defaultInstance = new StartMatchRequest().MakeReadOnly();
    private static readonly string[] _startMatchRequestFieldNames = new string[] {  };
    private static readonly uint[] _startMatchRequestFieldTags = new uint[] {  };
    public static StartMatchRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StartMatchRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StartMatchRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_StartMatchRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StartMatchRequest, StartMatchRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_StartMatchRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _startMatchRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StartMatchRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StartMatchRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StartMatchRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StartMatchRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StartMatchRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StartMatchRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StartMatchRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StartMatchRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StartMatchRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StartMatchRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StartMatchRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StartMatchRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StartMatchRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StartMatchRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StartMatchRequest result;
      
      private StartMatchRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          StartMatchRequest original = result;
          result = new StartMatchRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StartMatchRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.StartMatchRequest.Descriptor; }
      }
      
      public override StartMatchRequest DefaultInstanceForType {
        get { return global::C2GNet.StartMatchRequest.DefaultInstance; }
      }
      
      public override StartMatchRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StartMatchRequest) {
          return MergeFrom((StartMatchRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StartMatchRequest other) {
        if (other == global::C2GNet.StartMatchRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_startMatchRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _startMatchRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static StartMatchRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StartMatchResponse : pb::GeneratedMessage<StartMatchResponse, StartMatchResponse.Builder> {
    private StartMatchResponse() { }
    private static readonly StartMatchResponse defaultInstance = new StartMatchResponse().MakeReadOnly();
    private static readonly string[] _startMatchResponseFieldNames = new string[] { "errormsg", "result" };
    private static readonly uint[] _startMatchResponseFieldTags = new uint[] { 18, 8 };
    public static StartMatchResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StartMatchResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StartMatchResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_StartMatchResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StartMatchResponse, StartMatchResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_StartMatchResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _startMatchResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StartMatchResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StartMatchResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StartMatchResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StartMatchResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StartMatchResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StartMatchResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StartMatchResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StartMatchResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StartMatchResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StartMatchResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StartMatchResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StartMatchResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StartMatchResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StartMatchResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StartMatchResponse result;
      
      private StartMatchResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          StartMatchResponse original = result;
          result = new StartMatchResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StartMatchResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.StartMatchResponse.Descriptor; }
      }
      
      public override StartMatchResponse DefaultInstanceForType {
        get { return global::C2GNet.StartMatchResponse.DefaultInstance; }
      }
      
      public override StartMatchResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StartMatchResponse) {
          return MergeFrom((StartMatchResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StartMatchResponse other) {
        if (other == global::C2GNet.StartMatchResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_startMatchResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _startMatchResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
    }
    static StartMatchResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MatchResponse : pb::GeneratedMessage<MatchResponse, MatchResponse.Builder> {
    private MatchResponse() { }
    private static readonly MatchResponse defaultInstance = new MatchResponse().MakeReadOnly();
    private static readonly string[] _matchResponseFieldNames = new string[] { "errormsg", "result", "room" };
    private static readonly uint[] _matchResponseFieldTags = new uint[] { 18, 8, 26 };
    public static MatchResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MatchResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_MatchResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MatchResponse, MatchResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_MatchResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public const int RoomFieldNumber = 3;
    private bool hasRoom;
    private global::C2GNet.NRoom room_;
    public bool HasRoom {
      get { return hasRoom; }
    }
    public global::C2GNet.NRoom Room {
      get { return room_ ?? global::C2GNet.NRoom.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _matchResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      if (hasRoom) {
        output.WriteMessage(3, field_names[2], Room);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      if (hasRoom) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Room);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MatchResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MatchResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MatchResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MatchResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MatchResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MatchResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchResponse result;
      
      private MatchResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchResponse original = result;
          result = new MatchResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.MatchResponse.Descriptor; }
      }
      
      public override MatchResponse DefaultInstanceForType {
        get { return global::C2GNet.MatchResponse.DefaultInstance; }
      }
      
      public override MatchResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MatchResponse) {
          return MergeFrom((MatchResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchResponse other) {
        if (other == global::C2GNet.MatchResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        if (other.HasRoom) {
          MergeRoom(other.Room);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
            case 26: {
              global::C2GNet.NRoom.Builder subBuilder = global::C2GNet.NRoom.CreateBuilder();
              if (result.hasRoom) {
                subBuilder.MergeFrom(Room);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Room = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
      
      public bool HasRoom {
       get { return result.hasRoom; }
      }
      public global::C2GNet.NRoom Room {
        get { return result.Room; }
        set { SetRoom(value); }
      }
      public Builder SetRoom(global::C2GNet.NRoom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoom = true;
        result.room_ = value;
        return this;
      }
      public Builder SetRoom(global::C2GNet.NRoom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRoom = true;
        result.room_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRoom(global::C2GNet.NRoom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRoom &&
            result.room_ != global::C2GNet.NRoom.DefaultInstance) {
            result.room_ = global::C2GNet.NRoom.CreateBuilder(result.room_).MergeFrom(value).BuildPartial();
        } else {
          result.room_ = value;
        }
        result.hasRoom = true;
        return this;
      }
      public Builder ClearRoom() {
        PrepareBuilder();
        result.hasRoom = false;
        result.room_ = null;
        return this;
      }
    }
    static MatchResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameOver2Request : pb::GeneratedMessage<GameOver2Request, GameOver2Request.Builder> {
    private GameOver2Request() { }
    private static readonly GameOver2Request defaultInstance = new GameOver2Request().MakeReadOnly();
    private static readonly string[] _gameOver2RequestFieldNames = new string[] { "ipPortStr" };
    private static readonly uint[] _gameOver2RequestFieldTags = new uint[] { 10 };
    public static GameOver2Request DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameOver2Request DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameOver2Request ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_GameOver2Request__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameOver2Request, GameOver2Request.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_GameOver2Request__FieldAccessorTable; }
    }
    
    public const int IpPortStrFieldNumber = 1;
    private bool hasIpPortStr;
    private string ipPortStr_ = "";
    public bool HasIpPortStr {
      get { return hasIpPortStr; }
    }
    public string IpPortStr {
      get { return ipPortStr_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameOver2RequestFieldNames;
      if (hasIpPortStr) {
        output.WriteString(1, field_names[0], IpPortStr);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIpPortStr) {
        size += pb::CodedOutputStream.ComputeStringSize(1, IpPortStr);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameOver2Request ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameOver2Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameOver2Request ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameOver2Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameOver2Request ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameOver2Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameOver2Request ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameOver2Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameOver2Request ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameOver2Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameOver2Request MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameOver2Request prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameOver2Request, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameOver2Request cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameOver2Request result;
      
      private GameOver2Request PrepareBuilder() {
        if (resultIsReadOnly) {
          GameOver2Request original = result;
          result = new GameOver2Request();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameOver2Request MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.GameOver2Request.Descriptor; }
      }
      
      public override GameOver2Request DefaultInstanceForType {
        get { return global::C2GNet.GameOver2Request.DefaultInstance; }
      }
      
      public override GameOver2Request BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameOver2Request) {
          return MergeFrom((GameOver2Request) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameOver2Request other) {
        if (other == global::C2GNet.GameOver2Request.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIpPortStr) {
          IpPortStr = other.IpPortStr;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameOver2RequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameOver2RequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasIpPortStr = input.ReadString(ref result.ipPortStr_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIpPortStr {
        get { return result.hasIpPortStr; }
      }
      public string IpPortStr {
        get { return result.IpPortStr; }
        set { SetIpPortStr(value); }
      }
      public Builder SetIpPortStr(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIpPortStr = true;
        result.ipPortStr_ = value;
        return this;
      }
      public Builder ClearIpPortStr() {
        PrepareBuilder();
        result.hasIpPortStr = false;
        result.ipPortStr_ = "";
        return this;
      }
    }
    static GameOver2Request() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddLiveRequest : pb::GeneratedMessage<AddLiveRequest, AddLiveRequest.Builder> {
    private AddLiveRequest() { }
    private static readonly AddLiveRequest defaultInstance = new AddLiveRequest().MakeReadOnly();
    private static readonly string[] _addLiveRequestFieldNames = new string[] { "userId" };
    private static readonly uint[] _addLiveRequestFieldTags = new uint[] { 8 };
    public static AddLiveRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddLiveRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddLiveRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_AddLiveRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddLiveRequest, AddLiveRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_AddLiveRequest__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _addLiveRequestFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[0], UserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AddLiveRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddLiveRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddLiveRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddLiveRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddLiveRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddLiveRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddLiveRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddLiveRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddLiveRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddLiveRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddLiveRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddLiveRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AddLiveRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddLiveRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddLiveRequest result;
      
      private AddLiveRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AddLiveRequest original = result;
          result = new AddLiveRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddLiveRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.AddLiveRequest.Descriptor; }
      }
      
      public override AddLiveRequest DefaultInstanceForType {
        get { return global::C2GNet.AddLiveRequest.DefaultInstance; }
      }
      
      public override AddLiveRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddLiveRequest) {
          return MergeFrom((AddLiveRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddLiveRequest other) {
        if (other == global::C2GNet.AddLiveRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addLiveRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addLiveRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
    }
    static AddLiveRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddLiveResponse : pb::GeneratedMessage<AddLiveResponse, AddLiveResponse.Builder> {
    private AddLiveResponse() { }
    private static readonly AddLiveResponse defaultInstance = new AddLiveResponse().MakeReadOnly();
    private static readonly string[] _addLiveResponseFieldNames = new string[] { "errormsg", "result", "room" };
    private static readonly uint[] _addLiveResponseFieldTags = new uint[] { 18, 8, 26 };
    public static AddLiveResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddLiveResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddLiveResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_AddLiveResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddLiveResponse, AddLiveResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_AddLiveResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public const int RoomFieldNumber = 3;
    private bool hasRoom;
    private global::C2GNet.NRoom room_;
    public bool HasRoom {
      get { return hasRoom; }
    }
    public global::C2GNet.NRoom Room {
      get { return room_ ?? global::C2GNet.NRoom.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _addLiveResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      if (hasRoom) {
        output.WriteMessage(3, field_names[2], Room);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      if (hasRoom) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Room);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AddLiveResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddLiveResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddLiveResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddLiveResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddLiveResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddLiveResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddLiveResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddLiveResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddLiveResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddLiveResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddLiveResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddLiveResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AddLiveResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddLiveResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddLiveResponse result;
      
      private AddLiveResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          AddLiveResponse original = result;
          result = new AddLiveResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddLiveResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.AddLiveResponse.Descriptor; }
      }
      
      public override AddLiveResponse DefaultInstanceForType {
        get { return global::C2GNet.AddLiveResponse.DefaultInstance; }
      }
      
      public override AddLiveResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddLiveResponse) {
          return MergeFrom((AddLiveResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddLiveResponse other) {
        if (other == global::C2GNet.AddLiveResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        if (other.HasRoom) {
          MergeRoom(other.Room);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addLiveResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addLiveResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
            case 26: {
              global::C2GNet.NRoom.Builder subBuilder = global::C2GNet.NRoom.CreateBuilder();
              if (result.hasRoom) {
                subBuilder.MergeFrom(Room);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Room = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
      
      public bool HasRoom {
       get { return result.hasRoom; }
      }
      public global::C2GNet.NRoom Room {
        get { return result.Room; }
        set { SetRoom(value); }
      }
      public Builder SetRoom(global::C2GNet.NRoom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoom = true;
        result.room_ = value;
        return this;
      }
      public Builder SetRoom(global::C2GNet.NRoom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRoom = true;
        result.room_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRoom(global::C2GNet.NRoom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRoom &&
            result.room_ != global::C2GNet.NRoom.DefaultInstance) {
            result.room_ = global::C2GNet.NRoom.CreateBuilder(result.room_).MergeFrom(value).BuildPartial();
        } else {
          result.room_ = value;
        }
        result.hasRoom = true;
        return this;
      }
      public Builder ClearRoom() {
        PrepareBuilder();
        result.hasRoom = false;
        result.room_ = null;
        return this;
      }
    }
    static AddLiveResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UploadBiFenRequest : pb::GeneratedMessage<UploadBiFenRequest, UploadBiFenRequest.Builder> {
    private UploadBiFenRequest() { }
    private static readonly UploadBiFenRequest defaultInstance = new UploadBiFenRequest().MakeReadOnly();
    private static readonly string[] _uploadBiFenRequestFieldNames = new string[] { "biFen" };
    private static readonly uint[] _uploadBiFenRequestFieldTags = new uint[] { 10 };
    public static UploadBiFenRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UploadBiFenRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UploadBiFenRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UploadBiFenRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UploadBiFenRequest, UploadBiFenRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_UploadBiFenRequest__FieldAccessorTable; }
    }
    
    public const int BiFenFieldNumber = 1;
    private bool hasBiFen;
    private string biFen_ = "";
    public bool HasBiFen {
      get { return hasBiFen; }
    }
    public string BiFen {
      get { return biFen_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _uploadBiFenRequestFieldNames;
      if (hasBiFen) {
        output.WriteString(1, field_names[0], BiFen);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBiFen) {
        size += pb::CodedOutputStream.ComputeStringSize(1, BiFen);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UploadBiFenRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UploadBiFenRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UploadBiFenRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UploadBiFenRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UploadBiFenRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UploadBiFenRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UploadBiFenRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UploadBiFenRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UploadBiFenRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UploadBiFenRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UploadBiFenRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UploadBiFenRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UploadBiFenRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UploadBiFenRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UploadBiFenRequest result;
      
      private UploadBiFenRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UploadBiFenRequest original = result;
          result = new UploadBiFenRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UploadBiFenRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.UploadBiFenRequest.Descriptor; }
      }
      
      public override UploadBiFenRequest DefaultInstanceForType {
        get { return global::C2GNet.UploadBiFenRequest.DefaultInstance; }
      }
      
      public override UploadBiFenRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UploadBiFenRequest) {
          return MergeFrom((UploadBiFenRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UploadBiFenRequest other) {
        if (other == global::C2GNet.UploadBiFenRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBiFen) {
          BiFen = other.BiFen;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_uploadBiFenRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _uploadBiFenRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasBiFen = input.ReadString(ref result.biFen_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBiFen {
        get { return result.hasBiFen; }
      }
      public string BiFen {
        get { return result.BiFen; }
        set { SetBiFen(value); }
      }
      public Builder SetBiFen(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBiFen = true;
        result.biFen_ = value;
        return this;
      }
      public Builder ClearBiFen() {
        PrepareBuilder();
        result.hasBiFen = false;
        result.biFen_ = "";
        return this;
      }
    }
    static UploadBiFenRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ValidateOpenRoomRequest : pb::GeneratedMessage<ValidateOpenRoomRequest, ValidateOpenRoomRequest.Builder> {
    private ValidateOpenRoomRequest() { }
    private static readonly ValidateOpenRoomRequest defaultInstance = new ValidateOpenRoomRequest().MakeReadOnly();
    private static readonly string[] _validateOpenRoomRequestFieldNames = new string[] {  };
    private static readonly uint[] _validateOpenRoomRequestFieldTags = new uint[] {  };
    public static ValidateOpenRoomRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ValidateOpenRoomRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ValidateOpenRoomRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_ValidateOpenRoomRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ValidateOpenRoomRequest, ValidateOpenRoomRequest.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_ValidateOpenRoomRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _validateOpenRoomRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ValidateOpenRoomRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ValidateOpenRoomRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ValidateOpenRoomRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ValidateOpenRoomRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ValidateOpenRoomRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ValidateOpenRoomRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ValidateOpenRoomRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ValidateOpenRoomRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ValidateOpenRoomRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ValidateOpenRoomRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ValidateOpenRoomRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ValidateOpenRoomRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ValidateOpenRoomRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ValidateOpenRoomRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ValidateOpenRoomRequest result;
      
      private ValidateOpenRoomRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ValidateOpenRoomRequest original = result;
          result = new ValidateOpenRoomRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ValidateOpenRoomRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.ValidateOpenRoomRequest.Descriptor; }
      }
      
      public override ValidateOpenRoomRequest DefaultInstanceForType {
        get { return global::C2GNet.ValidateOpenRoomRequest.DefaultInstance; }
      }
      
      public override ValidateOpenRoomRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ValidateOpenRoomRequest) {
          return MergeFrom((ValidateOpenRoomRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ValidateOpenRoomRequest other) {
        if (other == global::C2GNet.ValidateOpenRoomRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_validateOpenRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _validateOpenRoomRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ValidateOpenRoomRequest() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ValidateOpenRoomResponse : pb::GeneratedMessage<ValidateOpenRoomResponse, ValidateOpenRoomResponse.Builder> {
    private ValidateOpenRoomResponse() { }
    private static readonly ValidateOpenRoomResponse defaultInstance = new ValidateOpenRoomResponse().MakeReadOnly();
    private static readonly string[] _validateOpenRoomResponseFieldNames = new string[] { "errormsg", "result" };
    private static readonly uint[] _validateOpenRoomResponseFieldTags = new uint[] { 18, 8 };
    public static ValidateOpenRoomResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ValidateOpenRoomResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ValidateOpenRoomResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_ValidateOpenRoomResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ValidateOpenRoomResponse, ValidateOpenRoomResponse.Builder> InternalFieldAccessors {
      get { return global::C2GNet.Proto.C2GNetMessage.internal__static_C2GNet_ValidateOpenRoomResponse__FieldAccessorTable; }
    }
    
    public const int ResultFieldNumber = 1;
    private bool hasResult;
    private global::C2GNet.Result result_ = global::C2GNet.Result.Success;
    public bool HasResult {
      get { return hasResult; }
    }
    public global::C2GNet.Result Result {
      get { return result_; }
    }
    
    public const int ErrormsgFieldNumber = 2;
    private bool hasErrormsg;
    private string errormsg_ = "";
    public bool HasErrormsg {
      get { return hasErrormsg; }
    }
    public string Errormsg {
      get { return errormsg_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _validateOpenRoomResponseFieldNames;
      if (hasResult) {
        output.WriteEnum(1, field_names[1], (int) Result, Result);
      }
      if (hasErrormsg) {
        output.WriteString(2, field_names[0], Errormsg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Result);
      }
      if (hasErrormsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Errormsg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ValidateOpenRoomResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ValidateOpenRoomResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ValidateOpenRoomResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ValidateOpenRoomResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ValidateOpenRoomResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ValidateOpenRoomResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ValidateOpenRoomResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ValidateOpenRoomResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ValidateOpenRoomResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ValidateOpenRoomResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ValidateOpenRoomResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ValidateOpenRoomResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ValidateOpenRoomResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ValidateOpenRoomResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ValidateOpenRoomResponse result;
      
      private ValidateOpenRoomResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ValidateOpenRoomResponse original = result;
          result = new ValidateOpenRoomResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ValidateOpenRoomResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::C2GNet.ValidateOpenRoomResponse.Descriptor; }
      }
      
      public override ValidateOpenRoomResponse DefaultInstanceForType {
        get { return global::C2GNet.ValidateOpenRoomResponse.DefaultInstance; }
      }
      
      public override ValidateOpenRoomResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ValidateOpenRoomResponse) {
          return MergeFrom((ValidateOpenRoomResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ValidateOpenRoomResponse other) {
        if (other == global::C2GNet.ValidateOpenRoomResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasErrormsg) {
          Errormsg = other.Errormsg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_validateOpenRoomResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _validateOpenRoomResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.result_, out unknown)) {
                result.hasResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrormsg = input.ReadString(ref result.errormsg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResult {
       get { return result.hasResult; }
      }
      public global::C2GNet.Result Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(global::C2GNet.Result value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = global::C2GNet.Result.Success;
        return this;
      }
      
      public bool HasErrormsg {
        get { return result.hasErrormsg; }
      }
      public string Errormsg {
        get { return result.Errormsg; }
        set { SetErrormsg(value); }
      }
      public Builder SetErrormsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrormsg = true;
        result.errormsg_ = value;
        return this;
      }
      public Builder ClearErrormsg() {
        PrepareBuilder();
        result.hasErrormsg = false;
        result.errormsg_ = "";
        return this;
      }
    }
    static ValidateOpenRoomResponse() {
      object.ReferenceEquals(global::C2GNet.Proto.C2GNetMessage.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
